<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>范丰强的博客</title>
  
  <subtitle>方向比努力更重要</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.fanfengqiang.com/"/>
  <updated>2019-07-27T13:49:24.340Z</updated>
  <id>https://blog.fanfengqiang.com/</id>
  
  <author>
    <name>范丰强</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kubernetes环境中flannel网络插件的DNS与hosts文件的优先级问题</title>
    <link href="https://blog.fanfengqiang.com/2019/07/27/kubernetes%E7%8E%AF%E5%A2%83%E4%B8%ADflannel%E7%BD%91%E7%BB%9C%E6%8F%92%E4%BB%B6%E7%9A%84DNS%E4%B8%8Ehosts%E6%96%87%E4%BB%B6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.fanfengqiang.com/2019/07/27/kubernetes环境中flannel网络插件的DNS与hosts文件的优先级问题/</id>
    <published>2019-07-27T13:41:52.000Z</published>
    <updated>2019-07-27T13:49:24.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>最近收到在中国XX银行部署kubernetes的同事的求救,他的kubernetes环境中使用了flannel网络插件,刚部署的时候一切正常一旦节点重启后网络插件就无法正常启动(状况如下图),为此他已经困扰了好几天了.</p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727181502.png" alt></p><p>为了找出问题根因,同事在公司内部用虚拟机搭建了测试环境并且问题成功复现,剩下的就是我的找bug之路.</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>从上图可以看出flannel在访问apiserver(<a href="https://slb.mpaas.com)时超时.下面从这三个方面分析" target="_blank" rel="noopener">https://slb.mpaas.com)时超时.下面从这三个方面分析</a></p><ul><li>是否能解析该url地址</li><li>网络是否互通</li><li>服务端口是否被阻塞</li></ul><p>先看看我们测试环境的抛错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@deplaynode ~]<span class="comment"># kubectl get pods -n kube-system -owide |grep flannel</span></span><br><span class="line">kube-flannel-ds-4gtr6                   1/1       Running            0          1d        192.168.65.129   192.168.65.129</span><br><span class="line">kube-flannel-ds-4t8mg                   1/1       Running            1          1d        192.168.65.127   192.168.65.127</span><br><span class="line">kube-flannel-ds-bp8fp                   1/1       Running            0          18m       192.168.65.158   192.168.65.158</span><br><span class="line">kube-flannel-ds-dxm5z                   0/1       CrashLoopBackOff   3          3m        192.168.65.128   192.168.65.128</span><br><span class="line">[root@deplaynode ~]<span class="comment"># kubectl logs -n kube-system kube-flannel-ds-dxm5z </span></span><br><span class="line">I0727 11:01:28.083926       1 main.go:488] Using interface with name eth0 and address 192.168.65.128</span><br><span class="line">I0727 11:01:28.084163       1 main.go:505] Defaulting external address to interface address (192.168.65.128)</span><br><span class="line">E0727 11:01:58.182010       1 main.go:232] Failed to create SubnetManager: error retrieving pod spec <span class="keyword">for</span> <span class="string">'kube-system/kube-flannel-ds-dxm5z'</span>: Get https://slb.czl.com:6443/api/v1/namespaces/kube-system/pods/kube-flannel-ds-dxm5z: dial tcp: i/o timeout</span><br><span class="line">[root@deplaynode ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>​    下面我们进入这个节点手动把这个节点的falannel起来并进入测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@deplaynode ~]<span class="comment"># ssh 192.168.65.128</span></span><br><span class="line">Last login: Sat Jul 27 07:05:27 2019 from deplaynode</span><br><span class="line">[root@node3 ~]<span class="comment"># docker ps -a|grep kube-flannel-ds-dxm5z</span></span><br><span class="line">b007d4443f57        f0fad859c909                             <span class="string">"/opt/bin/flanneld -…"</span>   2 minutes ago       Exited (1) 28 seconds ago                       k8s_kube-flannel_kube-flannel-ds-dxm5z_kube-system_89784a73-b05d-11e9-ac40-52545f91669f_5</span><br><span class="line">bf5e552ca81b        f0fad859c909                             <span class="string">"cp -f /etc/kube-fla…"</span>   7 minutes ago       Exited (0) 7 minutes ago                        k8s_install-cni_kube-flannel-ds-dxm5z_kube-system_89784a73-b05d-11e9-ac40-52545f91669f_0</span><br><span class="line">d417141adb57        mirrorgooglecontainers/pause-amd64:3.1   <span class="string">"/pause"</span>                 7 minutes ago       Up 7 minutes                                    k8s_POD_kube-flannel-ds-dxm5z_kube-system_89784a73-b05d-11e9-ac40-52545f91669f_0</span><br><span class="line">[root@node3 ~]<span class="comment"># docker start b007d4443f57</span></span><br><span class="line">b007d4443f57</span><br><span class="line">[root@node3 ~]<span class="comment"># docker exec -it b007d4443f57 sh</span></span><br><span class="line">/ <span class="comment"># ping slb.czl.com</span></span><br><span class="line">PING slb.czl.com (192.168.65.158): 56 data bytes</span><br><span class="line">64 bytes from 192.168.65.158: seq=0 ttl=64 time=0.567 ms</span><br><span class="line">64 bytes from 192.168.65.158: seq=1 ttl=64 time=0.526 ms</span><br><span class="line">64 bytes from 192.168.65.158: seq=2 ttl=64 time=0.635 ms</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727190818.png" alt></p><p>从上图中我们可以看到,我们手动把flannel容器启动,并进入容器ping我们的域名时是通的,此可以证明容器时可以解析域名的,并且链路上是通的,但不幸很短时间内容器就退出了我们没有办法进行进一步测试.</p><p>我们尝试手动为这个POD再注入1个centos容器并进行进一步测试.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@node3 ~]<span class="comment"># docker run --rm -it --net=container:d417141adb57 centos:7 sh</span></span><br><span class="line">sh-4.2<span class="comment"># telnet</span></span><br><span class="line">sh: telnet: <span class="built_in">command</span> not found</span><br><span class="line">sh-4.2<span class="comment"># curl -kv https://slb.czl.com:6443        </span></span><br><span class="line">* About to connect() to slb.czl.com port 6443 (<span class="comment">#0)</span></span><br><span class="line">*   Trying 192.168.65.158...</span><br><span class="line">* Connected to slb.czl.com (192.168.65.158) port 6443 (<span class="comment">#0)</span></span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">* skipping SSL peer certificate verification</span><br><span class="line">* NSS: client certificate not found (nickname not specified)</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">*       subject: CN=kubernetes,OU=System,O=k8s,L=XS,ST=HangZhou,C=CN</span><br><span class="line">*       start date: Jul 11 12:27:00 2019 GMT</span><br><span class="line">*       expire date: Jul 08 12:27:00 2029 GMT</span><br><span class="line">*       common name: kubernetes</span><br><span class="line">*       issuer: CN=kubernetes,OU=System,O=k8s,L=XS,ST=HangZhou,C=CN</span><br><span class="line">&gt; GET / HTTP/1.1</span><br><span class="line">&gt; User-Agent: curl/7.29.0</span><br><span class="line">&gt; Host: slb.czl.com:6443</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 401 Unauthorized</span><br><span class="line">&lt; Content-Type: application/json</span><br><span class="line">&lt; Www-Authenticate: Basic realm=<span class="string">"kubernetes-master"</span></span><br><span class="line">&lt; Date: Sat, 27 Jul 2019 11:20:22 GMT</span><br><span class="line">&lt; Content-Length: 165</span><br><span class="line">&lt; </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"kind"</span>: <span class="string">"Status"</span>,</span><br><span class="line">  <span class="string">"apiVersion"</span>: <span class="string">"v1"</span>,</span><br><span class="line">  <span class="string">"metadata"</span>: &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"status"</span>: <span class="string">"Failure"</span>,</span><br><span class="line">  <span class="string">"message"</span>: <span class="string">"Unauthorized"</span>,</span><br><span class="line">  <span class="string">"reason"</span>: <span class="string">"Unauthorized"</span>,</span><br><span class="line">  <span class="string">"code"</span>: 401</span><br><span class="line">* Connection <span class="comment">#0 to host slb.czl.com left intact</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727192139.png" alt></p><p>我们发现该POD与 <a href="https://slb.czl.com:6443" target="_blank" rel="noopener">https://slb.czl.com:6443</a> 是可以通行的,但为什么falannel还一直报timeout错误呢?我们继续向下查.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@node3 ~]<span class="comment"># docker run --rm -it --net=container:d417141adb57 centos:7 sh</span></span><br><span class="line">sh-4.2<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.65.126 deplaynode</span><br><span class="line">192.168.65.158 node1</span><br><span class="line">192.168.65.127 node2</span><br><span class="line">192.168.65.128 node3</span><br><span class="line">192.168.65.129 node4</span><br><span class="line">192.168.65.158 slb.czl.com</span><br><span class="line">sh-4.2<span class="comment"># cat /etc/resolv.conf </span></span><br><span class="line">nameserver 10.68.0.2</span><br><span class="line">search kube-system.svc.cluster.local. svc.cluster.local. cluster.local.</span><br><span class="line">options ndots:5</span><br><span class="line">sh-4.2<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>我们可以看到该POD是通过/etc/hosts文件解析slb.czl.com的.并且使用了集群的DNS服务器.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@deplaynode ~]<span class="comment"># kubectl get pods -n kube-system -owide |grep flannel</span></span><br><span class="line">kube-flannel-ds-4gtr6                   1/1       Running            0          1d        192.168.65.129   192.168.65.129</span><br><span class="line">kube-flannel-ds-4t8mg                   1/1       Running            1          1d        192.168.65.127   192.168.65.127</span><br><span class="line">kube-flannel-ds-bp8fp                   1/1       Running            0          47m       192.168.65.158   192.168.65.158</span><br><span class="line">kube-flannel-ds-dxm5z                   0/1       CrashLoopBackOff   9          32m       192.168.65.128   192.168.65.128</span><br><span class="line">[root@deplaynode ~]<span class="comment"># kubectl get pods -n kube-system kube-flannel-ds-dxm5z -oyaml</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727193653.png" alt></p><p>我们发现slb.czl.com是通过环境变量注入,我们直接改成IP地址试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit ds -n kube-system kube-flannel-ds</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727194656.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pods -n kube-system kube-flannel-ds-dxm5z</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727195003.png" alt></p><p>我们发现POD已经正常了,为什么使用IP地址可以,使用域名就不行呢?肯定是域名解析用问题.</p><p>我们继续查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get ds -n kube-system kube-flannel-ds -oyaml</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727195348.png" alt></p><p>我们可以看见POD的spec中定义了POD使用集群的DNS和本地的hosts文件,如果我们不填集群的DNS呢?</p><p>我们把dnsPolicy改成ClusterFirst或Default (这两者在hostNetwork下等价<a href="https://juejin.im/entry/5b84a90f51882542e60663cc" target="_blank" rel="noopener">参见</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit ds -n kube-system kube-flannel-ds</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727200041.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pods -n kube-system kube-flannel-ds-2hnlj</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727200406.png" alt></p><p>我们发现同样flannel可以正常启动,我们进入容器看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it -n kube-system kube-flannel-ds-5np99 sh</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727200559.png" alt></p><p>我们发现在没有设置DNS服务器的时候fannel可以正常工作,一旦设置DNS服务器就不行,难道是DNS与/etc/hosts的优先级发生了变化?</p><p>经过一番google得到两篇这样文章<a href="https://www.jianshu.com/p/c47a08b3f22e" target="_blank" rel="noopener">/etc/hosts文件在alpine镜像中对go程序无效</a> <a href="http://www.gnu.org/software/libc/manual/html_node/Notes-on-NSS-Configuration-File.html" target="_blank" rel="noopener">Notes on the NSS Configuration File</a></p><p>意思就是golang需要查看/etc/nsswitch.conf确定DNS服务器与hosts文件的优先级,如果没有/etc/nsswitch.conf则默认DNS服务器优先级高.</p><p>现在我们看看flannel中是否有这个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@deplaynode ~]<span class="comment"># kubectl exec -it -n kube-system kube-flannel-ds-5np99 sh</span></span><br><span class="line">/ <span class="comment"># ls /etc/nsswitch.conf</span></span><br><span class="line">ls: /etc/nsswitch.conf: No such file or directory</span><br><span class="line">/ <span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727202851.png" alt></p><p>现在我们手动构建镜像看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@node3 flannel]<span class="comment"># cat Dockerfile </span></span><br><span class="line">FROM jmgao1983/flannel:v0.10.0-amd64</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"hosts: files dns"</span> &gt; /etc/nsswitch.conf</span><br><span class="line">[root@node3 flannel]<span class="comment"># docker build -t jmgao1983/flannel:v0.10.1-amd64 .</span></span><br><span class="line">Sending build context to Docker daemon  2.048kB</span><br><span class="line">Step 1/2 : FROM jmgao1983/flannel:v0.10.0-amd64</span><br><span class="line"> ---&gt; f0fad859c909</span><br><span class="line">Step 2/2 : RUN <span class="built_in">echo</span> <span class="string">"hosts: files dns"</span> &gt; /etc/nsswitch.conf</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> 25b873512a11</span><br><span class="line">Removing intermediate container 25b873512a11</span><br><span class="line"> ---&gt; d031bc89c05d</span><br><span class="line">Successfully built d031bc89c05d</span><br><span class="line">Successfully tagged jmgao1983/flannel:v0.10.1-amd64</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit ds -n kube-system kube-flannel-ds</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727203550.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kube-system kube-flannel-ds-5np99</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/20190727203903.png" alt></p><p>我们看到flannel也正常启动了.</p><p>那么问题来了:为什么刚安装集群的时候没有报错?</p><p>看同事的安装脚本发现网络插件flannel优先于DNS插件安装,也就是在刚开始安装flannel的时候还没用DNS的service,endpiont和POD所以flannel直接找/etc/hosts了.</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><ol><li>flannel POD的DNS策略为ClusterFirstWithHostNet使得flanne可以同时使用集群DNS和本地hostswenjian</li><li>flannel由yougo语言编写,go语言的网络库依赖/etc/nsswitch.conf确定DNS服务器与/etc/hosts的优先级</li><li>flannel使用了apline的基础镜像,其中不含/etc/nsswitch.conf文件</li><li>flannel解析DNS地址一直不返回造成超时</li></ol><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>自定义镜像添加/etc/nsswitch.conf文件调整DNS服务器与/etc/hosts的优先级,dockerfile如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM jmgao1983/flannel:v0.10.0-amd64</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"hosts: files dns"</span> &gt; /etc/nsswitch.conf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;最近收到在中国XX银行部署kubernetes的同事的求救,他的kubernetes环境中使用了flannel网络插件,刚部署的时候一切正常
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
      <category term="flannel" scheme="https://blog.fanfengqiang.com/tags/flannel/"/>
    
  </entry>
  
  <entry>
    <title>使用operator-sdk构建kubernetesCRD控制器实现自动申请TLS证书</title>
    <link href="https://blog.fanfengqiang.com/2019/07/12/%E4%BD%BF%E7%94%A8operator-sdk%E6%9E%84%E5%BB%BAkubernetesCRD%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E7%94%B3%E8%AF%B7TLS%E8%AF%81%E4%B9%A6/"/>
    <id>https://blog.fanfengqiang.com/2019/07/12/使用operator-sdk构建kubernetesCRD控制器实现自动申请TLS证书/</id>
    <published>2019-07-12T03:10:09.000Z</published>
    <updated>2019-07-12T03:17:45.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cert-operator"><a href="#cert-operator" class="headerlink" title="cert-operator"></a><a href="https://github.com/fanfengqiang/cert-operator" target="_blank" rel="noopener">cert-operator</a></h1><h2 id="项目由来"><a href="#项目由来" class="headerlink" title="项目由来"></a>项目由来</h2><p>早些时候写过一个kubernetes自定义资源CRD的controller,主要是声明一个证书需求,由控制器自动申请一个证书,并保存为一个secret,项目路径<a href="https://github.com/fanfengqiang/cert-controller" target="_blank" rel="noopener">cert-controller</a></p><p>本项目与上述项目功能一致,只不过是用了一个框架对其做了重构.</p><table><thead><tr><th>项目</th><th>cert-controller</th><th>cert-operator</th></tr></thead><tbody><tr><td>框架</td><td><a href="https://github.com/kubernetes/sample-controller" target="_blank" rel="noopener">sample-apiserver</a></td><td><a href="https://github.com/operator-framework/operator-sdk" target="_blank" rel="noopener">operator-sdk</a></td></tr><tr><td>框架维护者</td><td>kubernetes官方社区</td><td>coreOS</td></tr><tr><td>证书申请方式</td><td>acme</td><td>acme</td></tr><tr><td>证书申请软件</td><td><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a></td><td><a href="https://github.com/go-acme/lego" target="_blank" rel="noopener">lego</a></td></tr><tr><td>证书软件调用方式</td><td>容器中安装acme.sh软件+go调用系统命令</td><td>go调用lego库</td></tr></tbody></table><p>operator-sdk成熟度较高,且在openshift中有大量应用.本项目摒弃了上个项目调用系统命令的低效调用方式,直接采用golang调用lego(也为golang开发)原生库.</p><h2 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/fanfengqiang</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/fanfengqiang</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:fanfengqiang/cert-operator.git</span><br><span class="line">operator-sdk build fanfengqiang/cert-operator:v1.0</span><br></pre></td></tr></table></figure><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>1.创建自定义资源CRD</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建CRD资源</span></span><br><span class="line">kubectl apply -f deploy/crds/certoperator_v1beta1_cert_crd.yaml</span><br><span class="line"><span class="comment"># 创建控制器所需的SA</span></span><br><span class="line">kubectl apply -f deploy/service_account.yaml</span><br><span class="line"><span class="comment"># 创建角色和角色绑定</span></span><br><span class="line">kubectl apply -f deploy/clusterrole.yaml</span><br><span class="line">kubectl apply -f deploy/clusterrole_binding.yaml</span><br><span class="line"><span class="comment"># 创建控制器</span></span><br><span class="line">kubectl apply -f deploy/operator.yaml</span><br></pre></td></tr></table></figure><p>2.编写cert资源清单并应用</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat deploy/crds/certoperator_v1beta1_cert_cr.yaml</span></span><br><span class="line">apiVersion: certoperator.5ik8s.com/v1beta1</span><br><span class="line">kind: Cert</span><br><span class="line">metadata:</span><br><span class="line">  name: www.5ik8s.com</span><br><span class="line">spec:</span><br><span class="line">  secretName: www.5ik8s.com</span><br><span class="line">  domain: www.5ik8s.com</span><br><span class="line">  email: <span class="string">"1415228958@qq.com"</span></span><br><span class="line">  validityPeriod: 30</span><br><span class="line">  provider: alidns</span><br><span class="line">  envs:</span><br><span class="line">    ALICLOUD_ACCESS_KEY: <span class="string">"LTAIXXXXXXXXXyzLu"</span></span><br><span class="line">    ALICLOUD_SECRET_KEY: <span class="string">"iH5sCTf4CzXXXXXXX9GLL2AsLW2"</span></span><br></pre></td></tr></table></figure>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用资源清单</span></span><br><span class="line">kubectl apply -f deploy/crds/certoperator_v1beta1_cert_cr.yaml</span><br></pre></td></tr></table></figure><p>3.参数定义</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>.metadata.name</td><td>cert资源的名字</td></tr><tr><td>.spec.secretName</td><td>生成的secret的名字</td></tr><tr><td>.spec.domain</td><td>生成证书的域名</td></tr><tr><td>.spec.validityPeriod</td><td>secret的有效时长，单位天，范围1~89</td></tr><tr><td>.spec.provider</td><td>域名托管商的标示</td></tr><tr><td>.spec.envs</td><td>域名托管商API的accesskey和secret</td></tr></tbody></table><p>完整域名托管商的格式，accesskey和secret格式<a href="https://go-acme.github.io/lego/dns/" target="_blank" rel="noopener">参见</a></p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>本项目参考了如下两个项目</p><ul><li><a href="https://github.com/operator-framework/operator-sdk-samples/tree/master/memcached-operator" target="_blank" rel="noopener">memcached-operator</a></li><li><a href="https://github.com/go-acme/lego" target="_blank" rel="noopener">lego</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cert-operator&quot;&gt;&lt;a href=&quot;#cert-operator&quot; class=&quot;headerlink&quot; title=&quot;cert-operator&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/fanfengqiang/cert-o
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>二进制部署k8s-HA集群.md</title>
    <link href="https://blog.fanfengqiang.com/2019/07/10/%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2k8s-HA%E9%9B%86%E7%BE%A4-md/"/>
    <id>https://blog.fanfengqiang.com/2019/07/10/二进制部署k8s-HA集群-md/</id>
    <published>2019-07-10T02:50:08.000Z</published>
    <updated>2019-07-16T06:57:01.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-配置基础环境"><a href="#1-配置基础环境" class="headerlink" title="1. 配置基础环境"></a>1. 配置基础环境</h2><h3 id="1-0-配置要求"><a href="#1-0-配置要求" class="headerlink" title="1.0. 配置要求"></a>1.0. 配置要求</h3><p>centos7操作系统且已安装epel源</p><table><thead><tr><th>主机</th><th>角色</th><th style="text-align:left">组件</th><th>IP</th><th>VIP</th></tr></thead><tbody><tr><td>Node1</td><td>Master,node</td><td style="text-align:left">etcd,api-server,controller-manager,scheduler,kubelet,kube-proxy,haproxy,keepalive</td><td>192.168.66.41</td><td>192.168.66.40</td></tr><tr><td>Node2</td><td>Master,node</td><td style="text-align:left">etcd,api-server,controller-manager,scheduler,kubelet,kube-proxy,haproxy,keepalive</td><td>192.168.66.42</td><td>192.168.66.40</td></tr><tr><td>Node3</td><td>Master,node</td><td style="text-align:left">etcd,api-server,controller-manager,scheduler,kubelet,kube-proxy,haproxy,keepalive</td><td>192.168.66.43</td><td>192.168.66.40</td></tr><tr><td>Node4</td><td>Node</td><td style="text-align:left">kubelet,kube-proxy</td><td>192.168.66.44</td></tr></tbody></table><p>service网络:10.96.0.0/16</p><p>pod网络:10.244.0.0/16</p><h3 id="1-1-关闭防火墙"><a href="#1-1-关闭防火墙" class="headerlink" title="1.1. 关闭防火墙"></a>1.1. 关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service </span><br><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h3 id="1-2-关闭selinux"><a href="#1-2-关闭selinux" class="headerlink" title="1.2. 关闭selinux"></a>1.2. 关闭selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i.bak <span class="string">'s/^SELINUX=.*/SELINUX=disabled/'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="1-3-关闭swap"><a href="#1-3-关闭swap" class="headerlink" title="1.3. 关闭swap"></a>1.3. 关闭swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -ri <span class="string">'/^[^#]/s@(.*swap.*)@# \1@'</span> /etc/fstab</span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><h3 id="1-4-配置时间同步"><a href="#1-4-配置时间同步" class="headerlink" title="1.4. 配置时间同步"></a>1.4. 配置时间同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">yum install -y ntpdate chrony</span><br><span class="line">ntpdate -u ntp.api.bz</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service</span><br><span class="line">systemctl restart chronyd.service</span><br></pre></td></tr></table></figure><h3 id="1-5-升级内核"><a href="#1-5-升级内核" class="headerlink" title="1.5. 升级内核"></a>1.5. 升级内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级内核</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm </span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel<span class="_">-lt</span>-devel kernel<span class="_">-lt</span> -y</span><br><span class="line">grub2-set-default 0</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="1-6-安装docker"><a href="#1-6-安装docker" class="headerlink" title="1.6. 安装docker"></a>1.6. 安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># Step 2: 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># Step 3: 更新并安装 Docker-CE</span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce-18.06.3.ce-3.el7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，你可以通过以下方式开启。同理可以开启各种测试版本等。</span></span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="comment">#   将 [docker-ce-test] 下方的 enabled=0 修改为 enabled=1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="comment"># Step 1: 查找Docker-CE的版本:</span></span><br><span class="line"><span class="comment"># yum list docker-ce.x86_64 --showduplicates | sort -r</span></span><br><span class="line"><span class="comment">#   Loading mirror speeds from cached hostfile</span></span><br><span class="line"><span class="comment">#   Loaded plugins: branch, fastestmirror, langpacks</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   Available Packages</span></span><br><span class="line"><span class="comment"># Step2 : 安装指定版本的Docker-CE: (VERSION 例如上面的 17.03.0.ce.1-1.el7.centos)</span></span><br><span class="line"><span class="comment"># sudo yum -y install docker-ce-[VERSION]</span></span><br></pre></td></tr></table></figure><h3 id="1-7-取消docker启动后iptables转发限制"><a href="#1-7-取消docker启动后iptables转发限制" class="headerlink" title="1.7. 取消docker启动后iptables转发限制"></a>1.7. 取消docker启动后iptables转发限制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /lib/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line">cat &gt;/lib/systemd/system/docker.service.d/iptables.conf &lt;&lt; EOF</span><br><span class="line">[Service]</span><br><span class="line">ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT</span><br><span class="line">EOF</span><br><span class="line">mkdir -p /etc/docker/</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><h3 id="1-8-调整内核参数"><a href="#1-8-调整内核参数" class="headerlink" title="1.8. 调整内核参数"></a>1.8. 调整内核参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写入配置文件</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/sysctl.d/docker.conf</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">#生效配置文件</span></span><br><span class="line">sysctl -p /etc/sysctl.d/docker.conf</span><br></pre></td></tr></table></figure><h3 id="1-9-加载ipvs模块"><a href="#1-9-加载ipvs模块" class="headerlink" title="1.9. 加载ipvs模块"></a>1.9. 加载ipvs模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ipvs_modules=<span class="string">"ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4"</span></span><br><span class="line"><span class="keyword">for</span> kernel_module <span class="keyword">in</span> \<span class="variable">$&#123;ipvs_modules&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    /sbin/modinfo -F filename \<span class="variable">$&#123;kernel_module&#125;</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        /sbin/modprobe \<span class="variable">$&#123;kernel_module&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line">chmod 755 /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">bash /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">lsmod | grep ip_vs</span><br></pre></td></tr></table></figure><h2 id="2-配置证书"><a href="#2-配置证书" class="headerlink" title="2. 配置证书"></a>2. 配置证书</h2><h3 id="2-1-下载证书生成工具cfssl"><a href="#2-1-下载证书生成工具cfssl" class="headerlink" title="2.1. 下载证书生成工具cfssl"></a>2.1. 下载证书生成工具cfssl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O /bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">wget -O /bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span><br><span class="line">wget -O /bin/cfssl-certinfo https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span><br><span class="line"><span class="keyword">for</span> cfssl <span class="keyword">in</span> `ls /bin/cfssl*`;<span class="keyword">do</span> chmod +x <span class="variable">$cfssl</span>;<span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><h3 id="2-2-生成etcd集群证书"><a href="#2-2-生成etcd集群证书" class="headerlink" title="2.2. 生成etcd集群证书"></a>2.2. 生成etcd集群证书</h3><h4 id="2-2-0-设置k8s环境"><a href="#2-2-0-设置k8s环境" class="headerlink" title="2.2.0. 设置k8s环境"></a>2.2.0. 设置k8s环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MASTER_VIP=192.168.66.40</span><br><span class="line"><span class="built_in">export</span> MASTER_01_IP=192.168.66.41</span><br><span class="line"><span class="built_in">export</span> MASTER_02_IP=192.168.66.42</span><br><span class="line"><span class="built_in">export</span> MASTER_03_IP=192.168.66.43</span><br><span class="line"><span class="built_in">export</span> K8S_SVC=10.96.0.1</span><br></pre></td></tr></table></figure><h4 id="2-2-1-生成etcd集群CA"><a href="#2-2-1-生成etcd集群CA" class="headerlink" title="2.2.1. 生成etcd集群CA"></a>2.2.1. 生成etcd集群CA</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/pki/etcd/</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/pki/etcd/</span><br><span class="line">cat &lt;&lt; EOF | tee ca-config.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"signing"</span>: &#123;</span><br><span class="line">    <span class="string">"default"</span>: &#123;</span><br><span class="line">      <span class="string">"expiry"</span>: <span class="string">"87600h"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"profiles"</span>: &#123;</span><br><span class="line">      <span class="string">"etcd"</span>: &#123;</span><br><span class="line">         <span class="string">"expiry"</span>: <span class="string">"87600h"</span>,</span><br><span class="line">         <span class="string">"usages"</span>: [</span><br><span class="line">            <span class="string">"signing"</span>,</span><br><span class="line">            <span class="string">"key encipherment"</span>,</span><br><span class="line">            <span class="string">"server auth"</span>,</span><br><span class="line">            <span class="string">"client auth"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 注：</span></span><br><span class="line"><span class="comment"># ① signing ：表示该证书可用于签名其它证书，生成的 ca.pem 证书中CA=TRUE ；</span></span><br><span class="line"><span class="comment"># ② server auth ：表示 client 可以用该该证书对 server 提供的证书进行验证；</span></span><br><span class="line"><span class="comment"># ③ client auth ：表示 server 可以用该该证书对 client 提供的证书进行验证；</span></span><br><span class="line">cat &lt;&lt; EOF | tee ca-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"etcd CA"</span>,</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br></pre></td></tr></table></figure><h4 id="2-2-2-生成etcd服务端证书"><a href="#2-2-2-生成etcd服务端证书" class="headerlink" title="2.2.2. 生成etcd服务端证书"></a>2.2.2. 生成etcd服务端证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | tee server-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"127.0.0.1"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd server-csr.json | cfssljson -bare server</span><br></pre></td></tr></table></figure><h4 id="2-2-3-生成etcd心跳客户端证书"><a href="#2-2-3-生成etcd心跳客户端证书" class="headerlink" title="2.2.3. 生成etcd心跳客户端证书"></a>2.2.3. 生成etcd心跳客户端证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | tee peer-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"peer"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">    <span class="string">"127.0.0.1"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd peer-csr.json | cfssljson -bare peer</span><br></pre></td></tr></table></figure><h4 id="2-2-4-生成k8s客户端证书"><a href="#2-2-4-生成k8s客户端证书" class="headerlink" title="2.2.4. 生成k8s客户端证书"></a>2.2.4. 生成k8s客户端证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | tee kubernetes-etcd-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"kube-apiserver-etcd-client"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">        <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"<span class="variable">$&#123;MASTER_VIP&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"127.0.0.1"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"O"</span>: <span class="string">"system:masters"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd kubernetes-etcd-csr.json | cfssljson -bare kubernetes-etcd</span><br></pre></td></tr></table></figure><h3 id="2-3-生成K8S集群证书"><a href="#2-3-生成K8S集群证书" class="headerlink" title="2.3. 生成K8S集群证书"></a>2.3. 生成K8S集群证书</h3><h4 id="2-3-1-生成K8S集群CA"><a href="#2-3-1-生成K8S集群CA" class="headerlink" title="2.3.1. 生成K8S集群CA"></a>2.3.1. 生成K8S集群CA</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/pki/k8s</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/pki/k8s</span><br><span class="line">cat  &lt;&lt; EOF |tee ca-config.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"signing"</span>: &#123;</span><br><span class="line">    <span class="string">"default"</span>: &#123;</span><br><span class="line">      <span class="string">"expiry"</span>: <span class="string">"87600h"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"profiles"</span>: &#123;</span><br><span class="line">      <span class="string">"kubernetes"</span>: &#123;</span><br><span class="line">        <span class="string">"usages"</span>: [</span><br><span class="line">            <span class="string">"signing"</span>,</span><br><span class="line">            <span class="string">"key encipherment"</span>,</span><br><span class="line">            <span class="string">"server auth"</span>,</span><br><span class="line">            <span class="string">"client auth"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"expiry"</span>: <span class="string">"87600h"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF |tee ca-csr.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br></pre></td></tr></table></figure><h4 id="2-3-2-生成kube-apiserver证书"><a href="#2-3-2-生成kube-apiserver证书" class="headerlink" title="2.3.2. 生成kube-apiserver证书"></a>2.3.2. 生成kube-apiserver证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF|tee kubernetes-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">      <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_VIP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;K8S_SVC&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"kubernetes"</span>,</span><br><span class="line">      <span class="string">"kubernetes.default"</span>,</span><br><span class="line">      <span class="string">"kubernetes.default.svc"</span>,</span><br><span class="line">      <span class="string">"kubernetes.default.svc.cluster"</span>,</span><br><span class="line">      <span class="string">"kubernetes.default.svc.cluster.local"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">            <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes</span><br></pre></td></tr></table></figure><h4 id="2-3-3-生成kube-controllor证书"><a href="#2-3-3-生成kube-controllor证书" class="headerlink" title="2.3.3. 生成kube-controllor证书"></a>2.3.3. 生成kube-controllor证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-controller-manager-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"system:kube-controller-manager"</span>,</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">      <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_VIP&#125;</span>"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">        <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">        <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">        <span class="string">"O"</span>: <span class="string">"system:kube-controller-manager"</span>,</span><br><span class="line">        <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager</span><br></pre></td></tr></table></figure><h4 id="2-3-4-生成kube-scheduler证书"><a href="#2-3-4-生成kube-scheduler证书" class="headerlink" title="2.3.4. 生成kube-scheduler证书"></a>2.3.4. 生成kube-scheduler证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-scheduler-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">      <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_01_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_02_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_03_IP&#125;</span>"</span>,</span><br><span class="line">      <span class="string">"<span class="variable">$&#123;MASTER_VIP&#125;</span>"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">        <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">        <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">        <span class="string">"O"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line">        <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler</span><br></pre></td></tr></table></figure><h4 id="2-3-5-生成kubectl证书"><a href="#2-3-5-生成kubectl证书" class="headerlink" title="2.3.5. 生成kubectl证书"></a>2.3.5. 生成kubectl证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF|tee admin-csr.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"admin"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"system:masters"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br></pre></td></tr></table></figure><h4 id="2-4-分发证书"><a href="#2-4-分发证书" class="headerlink" title="2.4. 分发证书"></a>2.4. 分发证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">ssh root@<span class="variable">$&#123;host&#125;</span> <span class="string">"mkdir -p /etc/etcd/ssl;mkdir -p /etc/kubernetes/ssl"</span></span><br><span class="line">scp ~/k8s/pki/etcd/* root@<span class="variable">$&#123;host&#125;</span>:/etc/etcd/ssl/</span><br><span class="line">scp ~/k8s/pki/k8s/* root@<span class="variable">$&#123;host&#125;</span>:/etc/kubernetes/ssl</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="3-分发二进制文件"><a href="#3-分发二进制文件" class="headerlink" title="3. 分发二进制文件"></a>3. 分发二进制文件</h2><h3 id="3-1-etcd"><a href="#3-1-etcd" class="headerlink" title="3.1. etcd"></a>3.1. etcd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz</span><br><span class="line">tar xvf etcd-v3.3.13-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> etcd-v3.3.13-linux-amd64</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> cmd <span class="keyword">in</span> <span class="string">"etcd etcdctl"</span>;<span class="keyword">do</span></span><br><span class="line">scp <span class="variable">$&#123;cmd&#125;</span> root@<span class="variable">$&#123;host&#125;</span>:/usr/bin/</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="3-2-k8s"><a href="#3-2-k8s" class="headerlink" title="3.2. k8s"></a>3.2. k8s</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.15.0/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar xvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> kubernetes/server/bin/</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> cmd <span class="keyword">in</span> <span class="string">"kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy kubectl kubeadm"</span>;<span class="keyword">do</span></span><br><span class="line">scp <span class="variable">$&#123;cmd&#125;</span> root@<span class="variable">$&#123;host&#125;</span>:/usr/bin/</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="4-配置ETCD集群"><a href="#4-配置ETCD集群" class="headerlink" title="4. 配置ETCD集群"></a>4. 配置ETCD集群</h2><h3 id="4-1-创建-etcd-的-systemd-unit-文件"><a href="#4-1-创建-etcd-的-systemd-unit-文件" class="headerlink" title="4.1. 创建 etcd 的 systemd unit 文件"></a>4.1. 创建 etcd 的 systemd unit 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">mkdir -p k8s/etcd</span><br><span class="line"><span class="built_in">cd</span> k8s/etcd</span><br><span class="line">cat &lt;&lt; EOF |tee etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">EnvironmentFile=-/etc/etcd/etcd.conf</span><br><span class="line">ExecStart=/usr/bin/etcd </span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">index=1</span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">cat &gt; <span class="variable">$&#123;node&#125;</span>_etcd.conf &lt;&lt; EOF  </span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="comment">#ETCD_CORS=""</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd"</span></span><br><span class="line"><span class="comment">#ETCD_WAL_DIR=""</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">"https://<span class="variable">$&#123;node&#125;</span>:2380"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"https://localhost:2379,https://<span class="variable">$&#123;node&#125;</span>:2379"</span></span><br><span class="line"><span class="comment">#ETCD_MAX_SNAPSHOTS="5"</span></span><br><span class="line"><span class="comment">#ETCD_MAX_WALS="5"</span></span><br><span class="line">ETCD_NAME=<span class="string">"node<span class="variable">$&#123;index&#125;</span>"</span></span><br><span class="line">ETCD_SNAPSHOT_COUNT=<span class="string">"100000"</span></span><br><span class="line"><span class="comment">#ETCD_HEARTBEAT_INTERVAL="100"</span></span><br><span class="line"><span class="comment">#ETCD_ELECTION_TIMEOUT="1000"</span></span><br><span class="line"><span class="comment">#ETCD_QUOTA_BACKEND_BYTES="0"</span></span><br><span class="line"><span class="comment">#ETCD_MAX_REQUEST_BYTES="1572864"</span></span><br><span class="line"><span class="comment">#ETCD_GRPC_KEEPALIVE_MIN_TIME="5s"</span></span><br><span class="line"><span class="comment">#ETCD_GRPC_KEEPALIVE_INTERVAL="2h0m0s"</span></span><br><span class="line"><span class="comment">#ETCD_GRPC_KEEPALIVE_TIMEOUT="20s"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">"https://<span class="variable">$&#123;node&#125;</span>:2380"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"https://<span class="variable">$&#123;node&#125;</span>:2379"</span></span><br><span class="line"><span class="comment">#ETCD_DISCOVERY=""</span></span><br><span class="line"><span class="comment">#ETCD_DISCOVERY_FALLBACK="proxy"</span></span><br><span class="line"><span class="comment">#ETCD_DISCOVERY_PROXY=""</span></span><br><span class="line"><span class="comment">#ETCD_DISCOVERY_SRV=""</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">"node1=https://<span class="variable">$&#123;MASTER_01_IP&#125;</span>:2380,node2=https://<span class="variable">$&#123;MASTER_02_IP&#125;</span>:2380,node3=https://<span class="variable">$&#123;MASTER_03_IP&#125;</span>:2380"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">"new"</span></span><br><span class="line"><span class="comment">#ETCD_STRICT_RECONFIG_CHECK="true"</span></span><br><span class="line"><span class="comment">#ETCD_ENABLE_V2="true"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Proxy]</span></span><br><span class="line"><span class="comment">#ETCD_PROXY="off"</span></span><br><span class="line"><span class="comment">#ETCD_PROXY_FAILURE_WAIT="5000"</span></span><br><span class="line"><span class="comment">#ETCD_PROXY_REFRESH_INTERVAL="30000"</span></span><br><span class="line"><span class="comment">#ETCD_PROXY_DIAL_TIMEOUT="1000"</span></span><br><span class="line"><span class="comment">#ETCD_PROXY_WRITE_TIMEOUT="5000"</span></span><br><span class="line"><span class="comment">#ETCD_PROXY_READ_TIMEOUT="0"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Security]</span></span><br><span class="line">ETCD_CERT_FILE=<span class="string">"/etc/etcd/ssl/server.pem"</span></span><br><span class="line">ETCD_KEY_FILE=<span class="string">"/etc/etcd/ssl/server-key.pem"</span></span><br><span class="line">ETCD_CLIENT_CERT_AUTH=<span class="string">"true"</span></span><br><span class="line">ETCD_TRUSTED_CA_FILE=<span class="string">"/etc/etcd/ssl/ca.pem"</span></span><br><span class="line"><span class="comment">#ETCD_AUTO_TLS="false"</span></span><br><span class="line">ETCD_PEER_CERT_FILE=<span class="string">"/etc/etcd/ssl/peer.pem"</span></span><br><span class="line">ETCD_PEER_KEY_FILE=<span class="string">"/etc/etcd/ssl/peer-key.pem"</span></span><br><span class="line">ETCD_PEER_CLIENT_CERT_AUTH=<span class="string">"true"</span></span><br><span class="line">ETCD_PEER_TRUSTED_CA_FILE=<span class="string">"/etc/etcd/ssl/ca.pem"</span></span><br><span class="line"><span class="comment">#ETCD_PEER_AUTO_TLS="false"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Logging]</span></span><br><span class="line"><span class="comment">#ETCD_DEBUG="false"</span></span><br><span class="line"><span class="comment">#ETCD_LOG_PACKAGE_LEVELS=""</span></span><br><span class="line"><span class="comment">#ETCD_LOG_OUTPUT="default"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Unsafe]</span></span><br><span class="line"><span class="comment">#ETCD_FORCE_NEW_CLUSTER="false"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Version]</span></span><br><span class="line"><span class="comment">#ETCD_VERSION="false"</span></span><br><span class="line"><span class="comment">#ETCD_AUTO_COMPACTION_RETENTION="0"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Profiling]</span></span><br><span class="line"><span class="comment">#ETCD_ENABLE_PPROF="false"</span></span><br><span class="line"><span class="comment">#ETCD_METRICS="basic"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Auth]</span></span><br><span class="line"><span class="comment">#ETCD_AUTH_TOKEN="simple"</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">let</span> index++</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="4-2-分发配置"><a href="#4-2-分发配置" class="headerlink" title="4.2. 分发配置"></a>4.2. 分发配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">index=1</span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">scp <span class="variable">$&#123;node&#125;</span>_etcd.conf root@<span class="variable">$&#123;node&#125;</span>:/etc/etcd/</span><br><span class="line">scp etcd.service root@<span class="variable">$&#123;node&#125;</span>:/lib/systemd/system/</span><br><span class="line">ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">"mkdir -p /var/lib/etcd;systemctl daemon-reload"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="4-3-启动-etcd-服务"><a href="#4-3-启动-etcd-服务" class="headerlink" title="4.3. 启动 etcd 服务"></a>4.3. 启动 etcd 服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上分别执行</span></span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br><span class="line"><span class="comment"># 启动第一个节点时不会直接返回,需要至少两个节点都启动后才返回</span></span><br><span class="line">systemctl start etcd</span><br></pre></td></tr></table></figure><h3 id="4-4-验证服务"><a href="#4-4-验证服务" class="headerlink" title="4.4. 验证服务"></a>4.4. 验证服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line">etcdctl --cacert /etc/etcd/ssl/ca.pem --cert /etc/etcd/ssl/kubernetes-etcd.pem --key /etc/etcd/ssl/kubernetes-etcd-key.pem member list</span><br></pre></td></tr></table></figure><h2 id="5-创建-kubeconfig-文件"><a href="#5-创建-kubeconfig-文件" class="headerlink" title="5. 创建 kubeconfig 文件"></a>5. 创建 kubeconfig 文件</h2><h3 id="创建-TLS-Bootstrapping-Token"><a href="#创建-TLS-Bootstrapping-Token" class="headerlink" title="创建 TLS Bootstrapping Token"></a>创建 TLS Bootstrapping Token</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/kubeconfig/</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/kubeconfig/</span><br><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(head -c 16 /dev/urandom | od -An -t x | tr -d <span class="string">' '</span>)</span><br><span class="line">cat &gt; token.csv &lt;&lt;EOF</span><br><span class="line"><span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span>,kubelet-bootstrap,10001,<span class="string">"system:kubelet-bootstrap"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>###创建 kubectl kubeconfig 文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://<span class="variable">$&#123;MASTER_VIP&#125;</span>:6443 \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials admin \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/admin.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/admin-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=admin \</span><br><span class="line">  --kubeconfig=admin.kubeconfig</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context kubernetes --kubeconfig=admin.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="创建-controller-manager-kubeconfig-文件"><a href="#创建-controller-manager-kubeconfig-文件" class="headerlink" title="创建 controller-manager kubeconfig 文件"></a>创建 controller-manager kubeconfig 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.66.41:6443 \</span><br><span class="line">  --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-controller-manager \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/kube-controller-manager.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/kube-controller-manager-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-controller-manager@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-controller-manager \</span><br><span class="line">  --kubeconfig=controller-manager.kubeconfig</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context system:kube-controller-manager@kubernetes --kubeconfig=controller-manager.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="创建-scheduler-kubeconfig-文件"><a href="#创建-scheduler-kubeconfig-文件" class="headerlink" title="创建 scheduler kubeconfig 文件"></a>创建 scheduler kubeconfig 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.66.41:6443 \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-scheduler \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/kube-scheduler.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/kube-scheduler-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-scheduler@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-scheduler \</span><br><span class="line">  --kubeconfig=scheduler.kubeconfig</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context system:kube-scheduler@kubernetes --kubeconfig=scheduler.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="分发"><a href="#分发" class="headerlink" title="分发"></a>分发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">  scp * root@<span class="variable">$&#123;node&#125;</span>:/etc/kubernetes/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="6-部署master节点"><a href="#6-部署master节点" class="headerlink" title="6. 部署master节点"></a>6. 部署master节点</h2><h3 id="配置负载均衡keepalive-lvs"><a href="#配置负载均衡keepalive-lvs" class="headerlink" title="配置负载均衡keepalive+lvs"></a>配置负载均衡keepalive+lvs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/lvs</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/lvs</span><br><span class="line">PRIORITY=100</span><br><span class="line">STATE=<span class="string">"MASTER"</span></span><br><span class="line">NET_IF=<span class="string">"eth0"</span></span><br><span class="line">index=1</span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span> ;<span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">"yum install -y keepalived ipvsadm"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id LVS_DEVEL</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state <span class="variable">$&#123;STATE&#125;</span></span></span><br><span class="line"><span class="string">    interface <span class="variable">$&#123;NET_IF&#125;</span></span></span><br><span class="line"><span class="string">    virtual_router_id 80</span></span><br><span class="line"><span class="string">    priority <span class="variable">$&#123;PRIORITY&#125;</span></span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass just0kk</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        <span class="variable">$&#123;MASTER_VIP&#125;</span></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">virtual_server <span class="variable">$&#123;MASTER_VIP&#125;</span> 6443 &#123;</span></span><br><span class="line"><span class="string">    delay_loop 6</span></span><br><span class="line"><span class="string">    lb_algo rr</span></span><br><span class="line"><span class="string">    lb_kind DR</span></span><br><span class="line"><span class="string">    nat_mask 255.255.255.0</span></span><br><span class="line"><span class="string">    persistence_timeout 0</span></span><br><span class="line"><span class="string">    protocol TCP</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    real_server <span class="variable">$MASTER_01_IP</span> 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    real_server <span class="variable">$MASTER_02_IP</span> 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    real_server <span class="variable">$MASTER_03_IP</span> 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; ./keepalived-<span class="variable">$&#123;index&#125;</span>.conf</span><br><span class="line">  scp ./keepalived-<span class="variable">$&#123;index&#125;</span>.conf root@<span class="variable">$&#123;node&#125;</span>:/etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">  ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    systemctl stop keepalived</span></span><br><span class="line"><span class="string">    systemctl enable keepalived</span></span><br><span class="line"><span class="string">    systemctl start keepalived</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">    <span class="built_in">let</span> index++</span><br><span class="line">    STATE=<span class="string">"BACKUP"</span></span><br><span class="line">    <span class="built_in">let</span> PRIORITY=PRIORITY-20</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="kube-apiserver"><a href="#kube-apiserver" class="headerlink" title="kube-apiserver"></a>kube-apiserver</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/service/apiserver</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/service/apiserver</span><br><span class="line">index=1</span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">cat &gt; <span class="variable">$&#123;node&#125;</span>_kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/kube-apiserver \</span><br><span class="line">  --<span class="built_in">enable</span>-admission-plugins=NodeRestriction \</span><br><span class="line">  --advertise-address=<span class="variable">$&#123;MASTER_VIP&#125;</span> \</span><br><span class="line">  --<span class="built_in">bind</span>-address=<span class="variable">$&#123;node&#125;</span> \</span><br><span class="line">  --insecure-port=0 \</span><br><span class="line">  --authorization-mode=Node,RBAC \</span><br><span class="line">  --<span class="built_in">enable</span>-bootstrap-token-auth \</span><br><span class="line">  --token-auth-file=/etc/kubernetes/token.csv \</span><br><span class="line">  --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem \</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \</span><br><span class="line">  --client-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --kubelet-client-certificate=/etc/kubernetes/ssl/kubernetes.pem \</span><br><span class="line">  --kubelet-client-key=/etc/kubernetes/ssl/kubernetes-key.pem \</span><br><span class="line">  --service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --etcd-cafile=/etc/etcd/ssl/ca.pem \</span><br><span class="line">  --etcd-certfile=/etc/etcd/ssl/kubernetes-etcd.pem \</span><br><span class="line">  --etcd-keyfile=/etc/etcd/ssl/kubernetes-etcd-key.pem \</span><br><span class="line">  --etcd-servers=https://<span class="variable">$&#123;MASTER_01_IP&#125;</span>:2379,https://<span class="variable">$&#123;MASTER_02_IP&#125;</span>:2379,https://<span class="variable">$&#123;MASTER_03_IP&#125;</span>:2379 \</span><br><span class="line">  --allow-privileged=<span class="literal">true</span> \</span><br><span class="line">  --apiserver-count=3 </span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">Type=notify</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.targe</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">let</span> index++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">  scp <span class="variable">$&#123;node&#125;</span>_kube-apiserver.service root@<span class="variable">$&#123;node&#125;</span>:/lib/systemd/system/kube-apiserver.service</span><br><span class="line">  ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">""</span><span class="string">"systemctl daemon-reload</span></span><br><span class="line"><span class="string">  systemctl enable kube-apiserver.service </span></span><br><span class="line"><span class="string">  systemctl restart kube-apiserver.service </span></span><br><span class="line"><span class="string">  "</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="kube-controller-manager"><a href="#kube-controller-manager" class="headerlink" title="kube-controller-manager"></a>kube-controller-manager</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/service/controller-manager</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/service/controller-manager</span><br><span class="line"></span><br><span class="line">cat &gt; kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/kube-controller-manager \</span><br><span class="line">  --<span class="built_in">bind</span>-address=127.0.0.1 \</span><br><span class="line">  --allocate-node-cidrs=<span class="literal">true</span> \</span><br><span class="line">  --cluster-cidr=10.244.0.0/16 \</span><br><span class="line">  --node-cidr-mask-size=24 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --authentication-kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --authorization-kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">  --root-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/ssl/kube-controller-manager.pem \</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kube-controller-manager-key.pem \</span><br><span class="line">  --leader-elect=<span class="literal">true</span> \</span><br><span class="line">  --controllers=*,bootstrapsigner,tokencleaner \</span><br><span class="line">  --use-service-account-credentials=<span class="literal">true</span> </span><br><span class="line">  </span><br><span class="line">Restart=on</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">  scp kube-controller-manager.service root@<span class="variable">$&#123;node&#125;</span>:/lib/systemd/system/kube-controller-manager.service</span><br><span class="line">  ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">""</span><span class="string">"systemctl daemon-reload</span></span><br><span class="line"><span class="string">  systemctl enable kube-controller-manager.service </span></span><br><span class="line"><span class="string">  systemctl restart kube-controller-manager.service </span></span><br><span class="line"><span class="string">  "</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="kube-scheduler"><a href="#kube-scheduler" class="headerlink" title="kube-scheduler"></a>kube-scheduler</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/service/scheduler</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/service/scheduler</span><br><span class="line">cat &gt; kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/kube-scheduler \</span><br><span class="line">  --<span class="built_in">bind</span>-address=127.0.0.1 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/scheduler.kubeconfig \</span><br><span class="line">  --leader-elect=<span class="literal">true</span> </span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$MASTER_01_IP</span> <span class="variable">$MASTER_02_IP</span> <span class="variable">$MASTER_03_IP</span>;<span class="keyword">do</span></span><br><span class="line">  scp kube-scheduler.service root@<span class="variable">$&#123;node&#125;</span>:/lib/systemd/system/kube-scheduler.service</span><br><span class="line">  ssh root@<span class="variable">$&#123;node&#125;</span> <span class="string">""</span><span class="string">"systemctl daemon-reload</span></span><br><span class="line"><span class="string">  systemctl enable kube-scheduler.service </span></span><br><span class="line"><span class="string">  systemctl restart kube-scheduler.service </span></span><br><span class="line"><span class="string">  "</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="配置RBAC"><a href="#配置RBAC" class="headerlink" title="配置RBAC"></a>配置RBAC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/rbac/</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/rbac/</span><br><span class="line"><span class="comment"># system:bootstrappers组用户有权限申请证书</span></span><br><span class="line">cat &gt; create-csrs-for-bootstrapping.yaml &lt;&lt; EOF</span><br><span class="line"><span class="comment"># enable bootstrapping nodes to create CSR</span></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: create-csrs-for-bootstrapping</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: system:bootstrappers</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:node-bootstrapper</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># system:bootstrappers组用户自动同意证书申请</span></span><br><span class="line">cat &gt; auto-approve-csrs-for-group.yaml &lt;&lt; EOF</span><br><span class="line"><span class="comment"># Approve all CSRs for the group "system:bootstrappers"</span></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: auto-approve-csrs-for-group</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: system:bootstrappers</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># system:nodes组用户有权限自动更新证书</span></span><br><span class="line">cat &gt; auto-approve-renewals-for-nodes.yaml &lt;&lt; EOF</span><br><span class="line"><span class="comment"># Approve renewal CSRs for the group "system:nodes"</span></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: auto-approve-renewals-for-nodes</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: system:nodes</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br><span class="line">kubectl apply .</span><br></pre></td></tr></table></figure><h2 id="7-部署node节点"><a href="#7-部署node节点" class="headerlink" title="7. 部署node节点"></a>7. 部署node节点</h2><h3 id="创建-Bootstrapping-kubeconfig-文件"><a href="#创建-Bootstrapping-kubeconfig-文件" class="headerlink" title="创建 Bootstrapping kubeconfig 文件"></a>创建 Bootstrapping kubeconfig 文件</h3><h4 id="创建-TLS-Bootstrapping-Token-1"><a href="#创建-TLS-Bootstrapping-Token-1" class="headerlink" title="创建 TLS Bootstrapping Token"></a>创建 TLS Bootstrapping Token</h4><p>可使用创建集群时的TOKEN文件“/etc/kubernetes/token.csv”;或者使用kubeadm新创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(kubeadm token create \</span><br><span class="line">  --description kubelet-bootstrap-token \</span><br><span class="line">  --groups system:bootstrappers:k8s-master1 \</span><br><span class="line">  --kubeconfig ~/.kube/config)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$BOOTSTRAP_TOKEN</span></span><br><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><h4 id="创建-kubelet-bootstrapping-kubeconfig-文件"><a href="#创建-kubelet-bootstrapping-kubeconfig-文件" class="headerlink" title="创建 kubelet bootstrapping kubeconfig 文件"></a>创建 kubelet bootstrapping kubeconfig 文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/k8s/node</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/node</span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://<span class="variable">$&#123;MASTER_VIP&#125;</span>:6443 \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubelet-bootstrap \</span><br><span class="line">  --token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config use-context default --kubeconfig=bootstrap.kubeconfig</span><br></pre></td></tr></table></figure><h4 id="创建-kube-proxy-bootstrapping-kubeconfig-文件"><a href="#创建-kube-proxy-bootstrapping-kubeconfig-文件" class="headerlink" title="创建 kube-proxy bootstrapping kubeconfig 文件"></a>创建 kube-proxy bootstrapping kubeconfig 文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://<span class="variable">$&#123;MASTER_VIP&#125;</span>:6443 \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kube-proxy \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure><h3 id="配置kubelet"><a href="#配置kubelet" class="headerlink" title="配置kubelet"></a>配置kubelet</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NODE_IP=192.168.66.41</span><br><span class="line">cat &gt; kubelet.config.yaml &lt;&lt;EOF</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">authentication:</span><br><span class="line">  x509: &#123;clientCAFile: /etc/kubernetes/ssl/ca.pem&#125;</span><br><span class="line">  webhook: &#123;enabled: <span class="literal">true</span>, cacheTTL: 2m0s&#125;</span><br><span class="line">  anonymous: &#123;enabled: <span class="literal">false</span>&#125;</span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook: &#123;cacheAuthorizedTTL: 5m0s, cacheUnauthorizedTTL: 30s&#125;</span><br><span class="line">address: <span class="variable">$&#123;NODE_IP&#125;</span></span><br><span class="line">port: 10250</span><br><span class="line">readOnlyPort: 0</span><br><span class="line">cgroupDriver: cgroupfs</span><br><span class="line">hairpinMode: promiscuous-bridge</span><br><span class="line">serializeImagePulls: <span class="literal">false</span></span><br><span class="line">featureGates: &#123;RotateKubeletClientCertificate: <span class="literal">true</span>, RotateKubeletServerCertificate: <span class="literal">true</span>&#125;</span><br><span class="line">clusterDomain: cluster.local.</span><br><span class="line">clusterDNS: [10.96.0.10]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kubelet</span><br><span class="line">ExecStart=/usr/bin/kubelet \</span><br><span class="line">  --bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</span><br><span class="line">  --config=/etc/kubernetes/kubelet.config.yaml \</span><br><span class="line">  --cert-dir=/etc/kubernetes/ssl \</span><br><span class="line">  --cgroup-driver=systemd \</span><br><span class="line">  --network-plugin=cni \</span><br><span class="line">  --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:3.1</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line">mkdir -p /var/lib/kubelet</span><br></pre></td></tr></table></figure><h1 id="未完-待续…"><a href="#未完-待续…" class="headerlink" title="未完,待续….."></a>未完,待续…..</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-配置基础环境&quot;&gt;&lt;a href=&quot;#1-配置基础环境&quot; class=&quot;headerlink&quot; title=&quot;1. 配置基础环境&quot;&gt;&lt;/a&gt;1. 配置基础环境&lt;/h2&gt;&lt;h3 id=&quot;1-0-配置要求&quot;&gt;&lt;a href=&quot;#1-0-配置要求&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在kubernetes中部署Jenkins CICD工具并设置动态创建Jenkins slave</title>
    <link href="https://blog.fanfengqiang.com/2019/05/04/%E5%9C%A8kubernetes%E4%B8%AD%E9%83%A8%E7%BD%B2Jenkins-CICD%E5%B7%A5%E5%85%B7%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAJenkins-slave/"/>
    <id>https://blog.fanfengqiang.com/2019/05/04/在kubernetes中部署Jenkins-CICD工具并设置动态创建Jenkins-slave/</id>
    <published>2019-05-04T10:56:11.000Z</published>
    <updated>2019-06-17T03:43:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装Jenkins"><a href="#1-安装Jenkins" class="headerlink" title="1. 安装Jenkins"></a>1. 安装Jenkins</h1><h2 id="1-1-编写manifests配置清单"><a href="#1-1-编写manifests配置清单" class="headerlink" title="1.1. 编写manifests配置清单"></a>1.1. 编写manifests配置清单</h2><h3 id="1-1-1-创建名称空间"><a href="#1-1-1-创建名称空间" class="headerlink" title="1.1.1. 创建名称空间"></a>1.1.1. 创建名称空间</h3><p>我们创建一个名字叫jenkins的名称空间，后面所有的资源都放在这个名称空间下，方便管理。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-ns.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br></pre></td></tr></table></figure><h3 id="1-1-2-创建PV-PVC"><a href="#1-1-2-创建PV-PVC" class="headerlink" title="1.1.2. 创建PV/PVC"></a>1.1.2. 创建PV/PVC</h3><p>因为我们要把设置的配置、安装的插件持久化下来，顾创建持久化存储卷，因我集群中有storageClass，顾创建PVC会为我动态生成PV。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-pvc.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins-pvc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">20</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">ceph</span></span><br><span class="line"><span class="attr">  volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><h3 id="1-1-3-创建RBAC"><a href="#1-1-3-创建RBAC" class="headerlink" title="1.1.3. 创建RBAC"></a>1.1.3. 创建RBAC</h3><p>因为我们要用jenkins动态创建jenkins slave POD，顾我们要赋予jenkins相应的权限来访问api server。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-rbac.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span>          <span class="comment"># 在jenkins名称空间下创建名字叫jenkins的SA</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">jenkins</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span>         <span class="comment"># 创建名字叫jenkins的ClusterRole</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">["extensions",</span> <span class="string">"apps"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["deployments"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["create",</span> <span class="string">"delete"</span><span class="string">,</span> <span class="string">"get"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["services","pods","pods/exec","pods/log","secrets"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["*"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">jenkins</span></span><br></pre></td></tr></table></figure><h3 id="1-1-4-创建deployment"><a href="#1-1-4-创建deployment" class="headerlink" title="1.1.4. 创建deployment"></a>1.1.4. 创建deployment</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-deploy.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">jenkins/jenkins:lts</span></span><br><span class="line"><span class="attr">        imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">50000</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">1000</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="comment">#          requests:</span></span><br><span class="line"><span class="comment">#            cpu: 500m</span></span><br><span class="line"><span class="comment">#            memory: 512Mi</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          httpGet:</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/login</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">12</span> <span class="comment"># ~2 minutes</span></span><br><span class="line"><span class="attr">        readinessProbe:</span></span><br><span class="line"><span class="attr">          httpGet:</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/login</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">12</span> <span class="comment"># ~2 minutes</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">jenkinshome</span></span><br><span class="line"><span class="attr">          subPath:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/var/jenkins_home</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">LIMITS_MEMORY</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            resourceFieldRef:</span></span><br><span class="line"><span class="attr">              resource:</span> <span class="string">limits.memory</span></span><br><span class="line"><span class="attr">              divisor:</span> <span class="number">1</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line"><span class="attr">          value:</span> <span class="bullet">-Xmx$(LIMITS_MEMORY)m</span> <span class="attr">-XshowSettings:vm</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.initialDelay=0</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.MARGIN=50</span> <span class="bullet">-Dhudson.slaves.NodeProvisioner.MARGIN0=0.85</span> <span class="bullet">-Duser.timezone=Asia/Shanghai</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        fsGroup:</span> <span class="number">1000</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">jenkinshome</span></span><br><span class="line"><span class="attr">        persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">          claimName:</span> <span class="string">jenkins-pvc</span></span><br></pre></td></tr></table></figure><h3 id="1-1-5-创建service"><a href="#1-1-5-创建service" class="headerlink" title="1.1.5. 创建service"></a>1.1.5. 创建service</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-svc.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">agent</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">50000</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">50000</span></span><br></pre></td></tr></table></figure><h3 id="1-1-6-创建ingress"><a href="#1-1-6-创建ingress" class="headerlink" title="1.1.6. 创建ingress"></a>1.1.6. 创建ingress</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jenkins-ingress.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">jenkins.5ik8s.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="1-2-应用配置"><a href="#1-2-应用配置" class="headerlink" title="1.2. 应用配置"></a>1.2. 应用配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f jenkins-ns.yaml</span><br><span class="line">kubectl apply -f jenkins-rbac.yaml</span><br><span class="line">kubectl apply -f jenkins-pvc.yaml</span><br><span class="line">kubectl apply -f jenkins-deploy.yaml</span><br><span class="line">kubectl apply -f jenkins-svc.yaml</span><br><span class="line">kubectl apply -f jenkins-ingress.yaml</span><br></pre></td></tr></table></figure><h2 id="1-3-初始化"><a href="#1-3-初始化" class="headerlink" title="1.3. 初始化"></a>1.3. 初始化</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-init1.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-init2.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it -n jenkins jenkins-5dfc7749fb-tc59p -- cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><h3 id="1-3-1-安装推荐插件"><a href="#1-3-1-安装推荐插件" class="headerlink" title="1.3.1. 安装推荐插件"></a>1.3.1. 安装推荐插件</h3><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-init3.png" alt></p><h3 id="1-3-2-设置管理员密码"><a href="#1-3-2-设置管理员密码" class="headerlink" title="1.3.2. 设置管理员密码"></a>1.3.2. 设置管理员密码</h3><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-init4.png" alt></p><h1 id="2-配置jenkins"><a href="#2-配置jenkins" class="headerlink" title="2. 配置jenkins"></a>2. 配置jenkins</h1><h2 id="2-1-安装必要插件"><a href="#2-1-安装必要插件" class="headerlink" title="2.1. 安装必要插件"></a>2.1. 安装必要插件</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-install-plugin-1.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-install-plugin-2.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-install-plugins-3.png" alt></p><h2 id="2-2-配置插件"><a href="#2-2-配置插件" class="headerlink" title="2.2. 配置插件"></a>2.2. 配置插件</h2><h3 id="2-2-1-重启jenkins"><a href="#2-2-1-重启jenkins" class="headerlink" title="2.2.1. 重启jenkins"></a>2.2.1. 重启jenkins</h3><h3 id="2-2-2-配置kubernetes启动jenkins-slave的Pod模板"><a href="#2-2-2-配置kubernetes启动jenkins-slave的Pod模板" class="headerlink" title="2.2.2. 配置kubernetes启动jenkins slave的Pod模板"></a>2.2.2. 配置kubernetes启动jenkins slave的Pod模板</h3><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup2.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup3-1.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup4.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup5.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-setup6.png" alt></p><p>本文中用到的Docker镜像地址：<a href="https://github.com/fanfengqiang/jenkins_slave" target="_blank" rel="noopener">fanfengqiang/jenkins_slave</a></p><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h1><h2 id="3-1-创建项目"><a href="#3-1-创建项目" class="headerlink" title="3.1. 创建项目"></a>3.1. 创建项目</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-test1.png" alt></p><h2 id="3-2-配置项目"><a href="#3-2-配置项目" class="headerlink" title="3.2. 配置项目"></a>3.2. 配置项目</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-test2.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-test3.png" alt></p><h2 id="3-3-触发任务"><a href="#3-3-触发任务" class="headerlink" title="3.3. 触发任务"></a>3.3. 触发任务</h2><h2 id="3-4-查看结果"><a href="#3-4-查看结果" class="headerlink" title="3.4. 查看结果"></a>3.4. 查看结果</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-test4.png" alt></p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/jenkins-test5.png" alt></p><p>从上图可以看出当用任务需要在jenkins slave上执行时k8s会自动创建相应Pods</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-安装Jenkins&quot;&gt;&lt;a href=&quot;#1-安装Jenkins&quot; class=&quot;headerlink&quot; title=&quot;1. 安装Jenkins&quot;&gt;&lt;/a&gt;1. 安装Jenkins&lt;/h1&gt;&lt;h2 id=&quot;1-1-编写manifests配置清单&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="jenkins" scheme="https://blog.fanfengqiang.com/tags/jenkins/"/>
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>分享一张linux监控分析工具汇总图</title>
    <link href="https://blog.fanfengqiang.com/2019/05/01/%E5%88%86%E4%BA%AB%E4%B8%80%E5%BC%A0linux%E7%9B%91%E6%8E%A7%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB%E5%9B%BE/"/>
    <id>https://blog.fanfengqiang.com/2019/05/01/分享一张linux监控分析工具汇总图/</id>
    <published>2019-05-01T02:08:44.000Z</published>
    <updated>2019-06-17T04:34:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/linux_perf_tools_full.png" alt="http://www.brendangregg.com/Perf/linux_perf_tools_full.png"></p><p><a href="http://www.brendangregg.com/Perf/linux_perf_tools_full.png" target="_blank" rel="noopener">图片来源：http://www.brendangregg.com/Perf/linux_perf_tools_full.png</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/linux_perf_tools_full.png&quot; alt=&quot;http://www.brendangregg.com/Perf/linux_perf_to
      
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用traefik作为kubernetes ingress controller并开启letsencrypt证书认证</title>
    <link href="https://blog.fanfengqiang.com/2019/04/27/%E4%BD%BF%E7%94%A8traefik%E4%BD%9C%E4%B8%BAkubernetes-ingress-controller%E5%B9%B6%E5%BC%80%E5%90%AFletsencrypt%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81/"/>
    <id>https://blog.fanfengqiang.com/2019/04/27/使用traefik作为kubernetes-ingress-controller并开启letsencrypt证书认证/</id>
    <published>2019-04-27T12:13:13.000Z</published>
    <updated>2019-06-17T03:37:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>在kubernetes集群中暴露服务主要有如下三种方式：<strong>loadbalancer</strong> ，<strong>NodePort</strong> ，<strong>Ingress</strong></p><ul><li><p>NodePort：kube-proxy监控service资源，将service对象转化为iptables规则，iptables规则过滤拦截并转发流量到对应的Pod。优点：1.配置简单系统默认支持；缺点：1.iptables规则转发效率低，2.只要安装了kube-proxy组件的节点都会占用一个端口</p></li><li><p>Loadbalancer：采用NodePort接入流量，云平台监控service资源，为Loadbalancer分配一个负载均衡器，后端NodePort暴露的端口自动加入到负载均衡器。优点：1.可以直接互联网接入，不需要自己设置负载均衡器；缺点：1.需要云平台支持</p></li><li><p>Ingress：ingress controller监控ingress资源，根据ingress资源中包含的service资源找到对应提供服务的Pod地址，将流量通过Pod网络由ingress controller Pod直接发往后端提供服务的Pod，将ingress controller Pod部署在集群的边缘（以共享宿主机网络名称空间方式部署为deamonSet）可以将流量直接引入ingress controller Pod。优点：1.不需要iptables转发效率高，2.可以做HTTPS会话卸载（对外提供HTTPS协议服务，对内代用HTTP协议链接）；缺点：1.需要自己安装ingress controller</p></li></ul><h1 id="2-taefik简介"><a href="#2-taefik简介" class="headerlink" title="2. taefik简介"></a>2. taefik简介</h1><p>常见的ingress controller有如下三种：<strong>Nginx</strong> ，<strong>traefik</strong> ，<strong>envoy</strong></p><ul><li><p>nginx： 关于nginx作为负载均衡器不需要我多说大家都懂，但nginx本身并不是为云原生而设计的，如不支持配置动态加载，从环境变量获取配置等，nginx作为ingress controller的经典项目：<a href="https://github.com/kubernetes/ingress-nginx" target="_blank" rel="noopener">ingress-nginx</a></p></li><li><p>traefik: Træfɪk 是一个为了让部署微服务更加便捷而诞生的现代HTTP反向代理、负载均衡工具。 它支持多种后台 (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Rest API, file…) 来自动化、动态的应用它的配置文件设置。(上面这段话摘自官方，总之一句话：云原生设计，支持多种后端，功能强大) <a href="https://docs.traefik.io/" target="_blank" rel="noopener">traefik官方文档</a><br><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/architecture.png" alt></p></li><li><p>envoy: Envoy 是专为大型现代 SOA（面向服务架构）架构设计的 L7 代理和通信总线.(云原生设计，XDS协议服务发现，C++11编写，功能非常强大，结构复杂概念多)envoy的经典应用有<a href="https://istio.io/" target="_blank" rel="noopener">istio服务网格</a> ，istio服务网格将在以后的文章介绍。</p></li></ul><p>本文介绍基于traefik实现ingress controller<br>主要考虑如下：</p><ul><li><p><strong>云原生设计</strong></p></li><li><p><strong>自带kubernetes支持</strong></p></li><li><p><strong>安装配置简单</strong></p></li><li><p><strong>自带支持Lets encrypt证书申请</strong></p></li></ul><h1 id="3-安装traefik"><a href="#3-安装traefik" class="headerlink" title="3. 安装traefik"></a>3. 安装traefik</h1><h2 id="3-1-下载traefik-yaml文件"><a href="#3-1-下载traefik-yaml文件" class="headerlink" title="3.1. 下载traefik yaml文件"></a>3.1. 下载traefik yaml文件</h2><p><a href="https://docs.traefik.io/user-guide/kubernetes/" target="_blank" rel="noopener">文档地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果就开启了rbac访问控制需要应用此配置文件</span></span><br><span class="line">wget https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-rbac.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为我们要将traefik部署为共享宿主机网络名称空间，顾要部署为daemonSet</span></span><br><span class="line">wget https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-ds.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># traefik dashboard的测试Ingress资源</span></span><br><span class="line">wget https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/ui.yaml</span><br></pre></td></tr></table></figure><h2 id="3-2-需改daemonSet资源配置文件"><a href="#3-2-需改daemonSet资源配置文件" class="headerlink" title="3.2. 需改daemonSet资源配置文件"></a>3.2. 需改daemonSet资源配置文件</h2><p>修改traefik-ds.yaml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">...</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: traefik-ingress-controller</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      hostNetwork: <span class="literal">true</span>         <span class="comment"># 改为共享宿主机名称空间</span></span><br><span class="line">      nodeSelector:             <span class="comment"># 添加节点选择器，固定traefik部署位置（需要提前给节点打label）</span></span><br><span class="line">        edge: <span class="string">"true"</span></span><br><span class="line">      tolerations:              <span class="comment"># 设置节点污点容忍度，如果想将traefik部署在master需要添加此项</span></span><br><span class="line">      - effect: NoSchedule</span><br><span class="line">        operator: Exists</span><br><span class="line">      containers:</span><br><span class="line">      - image: traefik</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">        ports:</span><br><span class="line">        - name: https          <span class="comment"># 添加https的端口</span></span><br><span class="line">          containerPort: 443</span><br><span class="line">          hostPort: 443</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">          hostPort: 80</span><br><span class="line">        - name: admin</span><br><span class="line">          containerPort: 8080</span><br><span class="line">          hostPort: 8080</span><br><span class="line">        securityContext:</span><br><span class="line">          capabilities:</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">        args:</span><br><span class="line">        - --api</span><br><span class="line">        - --kubernetes</span><br><span class="line">        - --logLevel=INFO</span><br><span class="line">        - --insecureSkipVerify=<span class="literal">true</span>                 <span class="comment"># 如果后端服务是https协议时不验证其证书</span></span><br><span class="line">        - --defaultEntryPoints=http,https           <span class="comment"># traefik同时开启HTTP和HTTPS服务</span></span><br><span class="line">        - --entrypoints=Name:https Address::443 TLS <span class="comment"># HTTPS服务监听在443端口</span></span><br><span class="line">        - --entrypoints=Name:http Address::80 Redirect.EntryPoint:https <span class="comment"># HTTP监听在80端口，并将流量重定向至https</span></span><br><span class="line">---</span><br><span class="line">...</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h2 id="3-3-配置traefik自动获取lets-encrypt证书（可选）"><a href="#3-3-配置traefik自动获取lets-encrypt证书（可选）" class="headerlink" title="3.3. 配置traefik自动获取lets encrypt证书（可选）"></a>3.3. 配置traefik自动获取lets encrypt证书（可选）</h2><p>本文使用的域名托管在阿里云，其他域名提供商参考<a href="https://docs.traefik.io/configuration/acme/#provider" target="_blank" rel="noopener">文档</a>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">...</span><br><span class="line">      containers:</span><br><span class="line">      - image: fanfengqiang/traefik:1.7.10        <span class="comment"># 官方镜像缺少依赖，下文中有镜像的制作方法</span></span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">        env:</span><br><span class="line">        - name: ALICLOUD_ACCESS_KEY              <span class="comment"># 添加环境变量ALICLOUD_ACCESS_KEY</span></span><br><span class="line">          value: LTAIwMtdOu8BBENJ                <span class="comment"># 阿里云RAM账号的access_key</span></span><br><span class="line">        - name: ALICLOUD_SECRET_KEY              <span class="comment"># 添加环境变量ALICLOUD_SECRET_KEY</span></span><br><span class="line">          value: h7ukpd1CrM2mWPRT52F1BZdq0w89CA  <span class="comment"># 阿里云RAM账号的access_secret</span></span><br><span class="line">        ports:</span><br><span class="line">...</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">...</span><br><span class="line">        args:</span><br><span class="line">        - --api</span><br><span class="line">        - --kubernetes</span><br><span class="line">        - --logLevel=INFO</span><br><span class="line">        - --insecureSkipVerify=<span class="literal">true</span></span><br><span class="line">        - --defaultEntryPoints=http,https</span><br><span class="line">        - --entrypoints=Name:https Address::443 TLS</span><br><span class="line">        - --entrypoints=Name:http Address::80 Redirect.EntryPoint:https</span><br><span class="line">        - --acme                                  <span class="comment"># 开启证书验证</span></span><br><span class="line">        - --acme.acmeLogging=<span class="literal">true</span>                 <span class="comment"># 打开日志，方便排错</span></span><br><span class="line">        - --acme.email=1415228958@qq.com          <span class="comment"># 邮箱</span></span><br><span class="line">        - --acme.entryPoint=https                 <span class="comment"># 证书类型</span></span><br><span class="line">        - --acme.storage=/tmp/acme.json           <span class="comment"># 证书申请临时文件</span></span><br><span class="line">        - --acme.dnschallenge                     <span class="comment"># 域名验证方式</span></span><br><span class="line">        - --acme.dnschallenge.provider=alidns     <span class="comment"># 域名提供商</span></span><br><span class="line">        - --acme.dnschallenge.delaybeforecheck=5  <span class="comment"># 验证域名延时</span></span><br><span class="line">        - --acme.httpchallenge.entrypoint=http    <span class="comment"># 验证域名时使用的协议</span></span><br><span class="line">        - --acme.domains=*.fanfengqiang.com       <span class="comment"># 要申请证书的域名</span></span><br><span class="line">        - --acme.domains=*.5ik8s.com              <span class="comment"># 要申请证书的域名</span></span><br><span class="line">---</span><br><span class="line">...</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>镜像制作方法<a href="https://github.com/fanfengqiang/traefik_zoneinfo" target="_blank" rel="noopener">参见traefik_zoneinfo</a></p><p>完整traefik-ds.yaml配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">kind: DaemonSet</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: traefik-ingress-lb</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: traefik-ingress-controller</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      hostNetwork: <span class="literal">true</span>         <span class="comment"># 改为共享宿主机名称空间</span></span><br><span class="line">      nodeSelector:             <span class="comment"># 添加节点选择器，固定traefik部署位置（需要提前给节点打label）</span></span><br><span class="line">        edge: <span class="string">"true"</span></span><br><span class="line">      tolerations:              <span class="comment"># 设置节点污点容忍度，如果想将traefik部署在master需要添加此项</span></span><br><span class="line">      - effect: NoSchedule</span><br><span class="line">        operator: Exists</span><br><span class="line">      containers:</span><br><span class="line">      - image: fanfengqiang/traefik:1.7.10        <span class="comment"># 官方镜像缺少依赖，下文中有镜像的制作方法</span></span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">        env:</span><br><span class="line">        - name: ALICLOUD_ACCESS_KEY              <span class="comment"># 添加环境变量ALICLOUD_ACCESS_KEY</span></span><br><span class="line">          value: LTAIwXXXXXXXBENJ                <span class="comment"># 阿里云RAM账号的access_key</span></span><br><span class="line">        - name: ALICLOUD_SECRET_KEY              <span class="comment"># 添加环境变量ALICLOUD_SECRET_KEY</span></span><br><span class="line">          value: h7ukpXXXXXXXXxxT52F1BZdq0w89CA  <span class="comment"># 阿里云RAM账号的access_secret</span></span><br><span class="line">        ports:</span><br><span class="line">        - name: https</span><br><span class="line">          containerPort: 443</span><br><span class="line">          hostPort: 443</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">          hostPort: 80</span><br><span class="line">        - name: admin</span><br><span class="line">          containerPort: 8080</span><br><span class="line">          hostPort: 8080</span><br><span class="line">        securityContext:</span><br><span class="line">          capabilities:</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">        args:</span><br><span class="line">        - --api</span><br><span class="line">        - --kubernetes</span><br><span class="line">        - --logLevel=INFO</span><br><span class="line">        - --insecureSkipVerify=<span class="literal">true</span>                 <span class="comment"># 如果后端服务是https协议时不验证其证书</span></span><br><span class="line">        - --defaultEntryPoints=http,https           <span class="comment"># traefik同时开启HTTP和HTTPS服务</span></span><br><span class="line">        - --entrypoints=Name:https Address::443 TLS <span class="comment"># HTTPS服务监听在443端口</span></span><br><span class="line">        - --entrypoints=Name:http Address::80 Redirect.EntryPoint:https <span class="comment"># HTTP监听在80端口，并将流量重定向至https</span></span><br><span class="line">        - --acme                                  <span class="comment"># 开启证书验证</span></span><br><span class="line">        - --acme.acmeLogging=<span class="literal">true</span>                 <span class="comment"># 打开日志，方便排错</span></span><br><span class="line">        - --acme.email=1415228958@qq.com          <span class="comment"># 邮箱</span></span><br><span class="line">        - --acme.entryPoint=https                 <span class="comment"># 证书类型</span></span><br><span class="line">        - --acme.storage=/tmp/acme.json           <span class="comment"># 证书申请临时文件</span></span><br><span class="line">        - --acme.dnschallenge                     <span class="comment"># 域名验证方式</span></span><br><span class="line">        - --acme.dnschallenge.provider=alidns     <span class="comment"># 域名提供商</span></span><br><span class="line">        - --acme.dnschallenge.delaybeforecheck=5  <span class="comment"># 验证域名延时</span></span><br><span class="line">        - --acme.httpchallenge.entrypoint=http    <span class="comment"># 验证域名时使用的协议</span></span><br><span class="line">        - --acme.domains=*.fanfengqiang.com       <span class="comment"># 要申请证书的域名</span></span><br><span class="line">        - --acme.domains=*.5ik8s.com              <span class="comment"># 要申请证书的域名</span></span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-service</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 80</span><br><span class="line">      name: web</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 443</span><br><span class="line">      name: https</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8080</span><br><span class="line">      name: admin</span><br></pre></td></tr></table></figure><h2 id="4-安装"><a href="#4-安装" class="headerlink" title="4. 安装"></a>4. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl label nodes node2 edge=<span class="string">"true"</span></span><br><span class="line">kubectl apply -f traefik-rbac.yaml</span><br><span class="line">kubectl apply -f traefik-ds.yaml</span><br></pre></td></tr></table></figure><h1 id="5-测试"><a href="#5-测试" class="headerlink" title="5. 测试"></a>5. 测试</h1><h2 id="5-1-修改测试文件"><a href="#5-1-修改测试文件" class="headerlink" title="5.1. 修改测试文件"></a>5.1. 修改测试文件</h2><p>需改ui.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">  - name: web</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: traefik.5ik8s.com              <span class="comment"># 更改为自己的域名</span></span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: traefik-web-ui</span><br><span class="line">          servicePort: web</span><br><span class="line"><span class="comment">#  tls:                                 # 如果上面没有开启lets encrypt也可以使用此项声明证书</span></span><br><span class="line"><span class="comment">#  - secretName: 5ik8s.com</span></span><br></pre></td></tr></table></figure><h2 id="5-2-测试"><a href="#5-2-测试" class="headerlink" title="5.2. 测试"></a>5.2. 测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f ui.yaml</span><br></pre></td></tr></table></figure><h2 id="5-3-验证"><a href="#5-3-验证" class="headerlink" title="5.3. 验证"></a>5.3. 验证</h2><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/traefik_dashboard.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h1&gt;&lt;p&gt;在kubernetes集群中暴露服务主要有如下三种方式：&lt;strong&gt;loadbalancer&lt;/strong&gt; ，&lt;
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
      <category term="traefik" scheme="https://blog.fanfengqiang.com/tags/traefik/"/>
    
      <category term="ingress controller" scheme="https://blog.fanfengqiang.com/tags/ingress-controller/"/>
    
  </entry>
  
  <entry>
    <title>自己动手扩展K8S功能————为自定义资源CRD写一个控制器</title>
    <link href="https://blog.fanfengqiang.com/2019/04/01/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%89%A9%E5%B1%95K8S%E5%8A%9F%E8%83%BD%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E4%B8%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B5%84%E6%BA%90CRD%E5%86%99%E4%B8%80%E4%B8%AA%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>https://blog.fanfengqiang.com/2019/04/01/自己动手扩展K8S功能————为自定义资源CRD写一个控制器/</id>
    <published>2019-04-01T10:13:23.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cert-controller"><a href="#cert-controller" class="headerlink" title="cert-controller"></a>cert-controller</h1><p>作为一个苦逼的屌丝，我们是没有money去买TLS证书的，怎么办呢？当然是去找免费的证书签发机构啦！<br>我们经常用的免费证书签发机构有Let’s encrypt.但证书有效期只有短短的90天，你说天天让人换证书是不是挺麻烦的，而且生成证书再导入K8S还需要手动完成。<br>有没有一种方法让K8S自动的签署证书并保存为secret，并在证书快过期的时候自动更新？<br>在我的一番Google之下还真找到一个项目<a href="https://github.com/jetstack/cert-manager" target="_blank" rel="noopener">cert-manager</a>,但是！！！<br>这个项目需要将要生成https证书的domain指向K8S的ingress，而且必须是一个公网地址（感兴趣的可以自行研究下）。而我的测试环境DNS是指向私网地址的!这不是蛋疼吗！<br>怎么办？自己动手丰衣足食。</p><p><a href="https://github.com/fanfengqiang/cert-controller" target="_blank" rel="noopener">项目地址</a></p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li>安装cert-controller后，通过添加cert自定义资源，实现证书自动签发</li><li>将签发的证书自动保存到K8S的secret中</li><li>设置secret有效器，过期后重新签发证书，并自动更细secret</li></ul><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li>创建自定义资源CRD</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/fanfengqiang/cert-controller/master/deploy/cert-controller-rbac.yaml</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/fanfengqiang/cert-controller/master/deploy/cert-controller-deploy.yaml</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/fanfengqiang/cert-controller/master/deploy/crd.yaml</span><br></pre></td></tr></table></figure><ol start="2"><li>编写cert资源清单并应用</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; cert.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: certcontroller.5ik8s.com/v1beta1</span><br><span class="line">kind: Cert</span><br><span class="line">metadata:</span><br><span class="line">  name: example-cert</span><br><span class="line">spec:</span><br><span class="line">  secretName: cert-5ik8s.com</span><br><span class="line">  domain: 5ik8s.com</span><br><span class="line">  validityPeriod: 30</span><br><span class="line">  <span class="built_in">type</span>: dns_ali</span><br><span class="line">  env:</span><br><span class="line">    Ali_Key: <span class="string">"XXXXXXXXXXXXXXXXXXXXXXXX"</span></span><br><span class="line">    Ali_Secret: <span class="string">"XXXXXXXXXXXXXXXXXXXXXXX"</span></span><br><span class="line">EOF</span><br><span class="line">kubectl apply -f cert.yaml</span><br></pre></td></tr></table></figure><ol start="3"><li><p>参数定义</p><p>| 参数                 | 含义                               |<br>| :——————- | :——————————— |<br>| .metadata.name       | cert资源的名字                     |<br>| .spec.secretName     | 生成的secret的名字                 |<br>| .spec.domain         | 生成证书的域名                     |<br>| .spec.validityPeriod | secret的有效时长，单位天，范围1~89 |<br>| .spec.type           | 域名托管商的标示                   |<br>| .spec.env            | 域名托管商API的accesskey和secret   |</p><p>完整域名托管商的格式，accesskey和secret格式<a href="https://github.com/fanfengqiang/cert-controller/blob/master/docs/dnsapi.md" target="_blank" rel="noopener">参见</a></p></li></ol><h2 id="手动构建"><a href="#手动构建" class="headerlink" title="手动构建"></a>手动构建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/fanfengqiang/cert-controller</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/fanfengqiang/cert-controller</span><br><span class="line">docker build -t cert-controller:latest .</span><br></pre></td></tr></table></figure><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>本项目参考了如下两个项目</p><ul><li><p><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a></p></li><li><p><a href="https://github.com/kubernetes/sample-controller" target="_blank" rel="noopener">sample-controller</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cert-controller&quot;&gt;&lt;a href=&quot;#cert-controller&quot; class=&quot;headerlink&quot; title=&quot;cert-controller&quot;&gt;&lt;/a&gt;cert-controller&lt;/h1&gt;&lt;p&gt;作为一个苦逼的屌丝，我们是没有mon
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>源码编译kubernetes dashboard</title>
    <link href="https://blog.fanfengqiang.com/2019/03/17/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91kubernetes-dashboard/"/>
    <id>https://blog.fanfengqiang.com/2019/03/17/源码编译kubernetes-dashboard/</id>
    <published>2019-03-17T03:19:57.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>os: centos7.6</li><li>golang: 1.11.4</li><li>jdk: 1.8</li><li>docker-ce: 18.06.3</li><li>node.js: v9.11.2</li><li>npm: 6.9.0</li><li>gulp: 3.9</li></ul><h1 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h1><h2 id="安装开发包组"><a href="#安装开发包组" class="headerlink" title="安装开发包组"></a>安装开发包组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"Development Tools"</span></span><br></pre></td></tr></table></figure><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p><a href="https://yq.aliyun.com/articles/110806" target="_blank" rel="noopener">参考</a></p><h3 id="安装docker-yum源"><a href="#安装docker-yum源" class="headerlink" title="安装docker yum源"></a>安装docker yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># Step 2: 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># Step 3: 更新并安装 Docker-CE</span></span><br><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><h3 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="comment"># Step 1: 查找Docker-CE的版本:</span></span><br><span class="line">yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class="line">yum -y install docker-ce-18.06.3.ce-3.el7</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="安装golang"><a href="#安装golang" class="headerlink" title="安装golang"></a>安装golang</h2><h3 id="下载golang安装程序"><a href="#下载golang安装程序" class="headerlink" title="下载golang安装程序"></a>下载golang安装程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar  xvf go1.11.4.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/profile.d/go.sh </span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="built_in">export</span> GOBIN=<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$GOBIN</span>:<span class="variable">$GOPATH</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> GOPATH=/root/go/</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/go.sh </span><br><span class="line">go version</span><br></pre></td></tr></table></figure><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><h3 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h3><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">下载链接</a></p><h3 id="解压-1"><a href="#解压-1" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar  xvf jdk-8u201-linux-x64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">ln -sv jdk1.8.0_201 jdk</span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure><h3 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/profile.d/jdk.sh </span></span><br><span class="line"><span class="comment">#set oracle jdk environment</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/jdk.sh </span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><h3 id="下载nvm安装程序"><a href="#下载nvm安装程序" class="headerlink" title="下载nvm安装程序"></a>下载nvm安装程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash</span><br></pre></td></tr></table></figure><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 产看所有版本</span></span><br><span class="line">nvm ls-remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">nvm install v9.11.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 产看所有安装版本</span></span><br><span class="line"><span class="comment"># nvm ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认版本</span></span><br><span class="line">nvm <span class="built_in">alias</span> default v9.11.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时切换版本</span></span><br><span class="line"><span class="comment"># nvm use v9.11.2</span></span><br></pre></td></tr></table></figure><h3 id="更新npm"><a href="#更新npm" class="headerlink" title="更新npm"></a>更新npm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm</span><br></pre></td></tr></table></figure><h3 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br><span class="line">npm install -g gulp@3.9.0</span><br></pre></td></tr></table></figure><h3 id="验证-3"><a href="#验证-3" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp -v</span><br></pre></td></tr></table></figure><h1 id="安装依赖库"><a href="#安装依赖库" class="headerlink" title="安装依赖库"></a>安装依赖库</h1><h2 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h2><p><a href="https://github.com/kubernetes/dashboard/releases" target="_blank" rel="noopener">下载地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/kubernetes/</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/kubernetes/</span><br><span class="line">wget https://github.com/kubernetes/dashboard/archive/v1.10.1.tar.gz</span><br><span class="line">tar xvf v1.10.1.tar.gz</span><br><span class="line">mv dashboard-1.10.1 dashboard</span><br></pre></td></tr></table></figure><h2 id="安装node-modules"><a href="#安装node-modules" class="headerlink" title="安装node modules"></a>安装node modules</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/kubernetes/dashboard</span><br><span class="line">npm ci</span><br></pre></td></tr></table></figure><h2 id="运行安装脚本"><a href="#运行安装脚本" class="headerlink" title="运行安装脚本"></a>运行安装脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run install</span><br></pre></td></tr></table></figure><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><h2 id="指定环境变量"><a href="#指定环境变量" class="headerlink" title="指定环境变量"></a>指定环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> KUBE_DASHBOARD_APISERVER_HOST=<span class="string">"http://127.0.0.1:8080"</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="comment"># export KUBE_DASHBOARD_KUBECONFIG="&lt;KUBECONFIG_FILE_PATH&gt;"</span></span><br></pre></td></tr></table></figure><p><strong>注</strong>: 环境变量 <strong>KUBE_DASHBOARD_KUBECONFIG</strong> 的优先级比<strong>KUBE_DASHBOARD_APISERVER_HOST</strong>的高</p><h2 id="直接编译启动"><a href="#直接编译启动" class="headerlink" title="直接编译启动"></a>直接编译启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启kubectl代理</span></span><br><span class="line">kubectl proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">gulp serve</span><br></pre></td></tr></table></figure><h2 id="编译二进制程序"><a href="#编译二进制程序" class="headerlink" title="编译二进制程序"></a>编译二进制程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp build</span><br></pre></td></tr></table></figure><h2 id="编译并打包为docker镜像"><a href="#编译并打包为docker镜像" class="headerlink" title="编译并打包为docker镜像"></a>编译并打包为docker镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp docker-image:head</span><br></pre></td></tr></table></figure><p>生成的镜像为：kubernetes/kubernetes-dashboard-amd64:head</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;os: centos7.6&lt;/li&gt;
&lt;li&gt;golang: 1.11.4&lt;/li&gt;
&lt;li&gt;jdk: 1.8&lt;/li&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes TLS Bootstrapping配置</title>
    <link href="https://blog.fanfengqiang.com/2019/03/11/kubernetes-TLS-Bootstrapping%E9%85%8D%E7%BD%AE/"/>
    <id>https://blog.fanfengqiang.com/2019/03/11/kubernetes-TLS-Bootstrapping配置/</id>
    <published>2019-03-11T09:20:07.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>前两天考试CKA遇到这样一道题目:添加一个node节点到集群中。这其实并不难，但由于不了解实验环境结构第一步就卡住了，结果就jj了（PS:此题8分,我最终成绩92）。对于一个具有完美主义的强迫症来说是不能接受自己的无知的，经过google和查阅文档终于搞明白了。</p><p>下面是考试题目（第22题）</p><p>Set configuration context $ kubectl config use-context ik8s<br>In this task, you will configure a new Node, ik8s-node-0, to join a Kubernetes cluster as follows:</p><ul><li>Configure kubelet for automatic certificate rotation and ensure that both server and client CSRs are automatically approved and signed as appropnate via the use of RBAC.</li><li>Ensure that the appropriate cluster-info ConfigMap is created and configured appropriately in the correct namespace so that future Nodes can easily join the cluster</li><li>Your bootstrap kubeconfig should be created on the new Node at /etc/kubernetes/bootstrap-kubelet.conf (do not remove this file once your Node has successfully joined the cluster)</li><li>The appropriate cluster-wide CA certificate is located on the Node at /etc/kubernetes/pki/ca.crt . You should ensure that any automatically issued certificates are installed to the node at /var/lib/kubelet/pki and that the kubeconfig file for kubelet will be rendered at /etc/kubernetes/kubelet.conf upon successful bootstrapping</li><li>Use an additional group for bootstrapping Nodes attempting to join the cluster which should be called system:bootstrappers:cka:default-node-token</li><li>Solution should start automatically on boot, with the systemd service unit file for kubelet available at /etc/systemd/system/kubelet.service</li></ul><p>To test your solution, create the appropriate resources from the spec file located at /opt/…./kube-flannel.yaml This will create the necessary supporting resources as well as the kube-flannel -ds DaemonSet . You should ensure that this DaemonSet is correctly deployed to the single node in the cluster.</p><p>Hints:</p><ul><li>kubelet is not configured or running on ik8s-master-0 for this task, and you should not attempt to configure it.</li><li>You will make use of TLS bootstrapping to complete this task.</li><li>You can obtain the IP address of the Kubernetes API server via the following command $ ssh ik8s-node-0 getent hosts ik8s-master-0</li><li>The API server is listening on the usual port, 6443/tcp, and will only server TLS requests</li><li>The kubelet binary is already installed on ik8s-node-0 at /usr/bin/kubelet . You will not need to deploy kube-proxy to the cluster during this task.</li><li>You can ssh to the new worker node using $ ssh ik8s-node-0</li><li>You can ssh to the master node with the following command $ ssh ik8s-master-0</li><li>No further configuration of control plane services running on ik8s-master-0 is required</li><li>You can assume elevated privileges on both nodes with the following command $ sudo -i</li><li>Docker is already installed and running on ik8s-node-0</li></ul><p>Question weight: 8%</p><p>题目的大意是node节点通过RBAC自动完成证书申请，master要自动同意node节点的申请CSR，剩下的全部是完成这个流程的细节要求（应该是为了跑成绩脚本的标准化）</p><h1 id="TLS-bootstrap的流程"><a href="#TLS-bootstrap的流程" class="headerlink" title="TLS bootstrap的流程"></a>TLS bootstrap的流程</h1><h2 id="kubelet需要申请那些证书"><a href="#kubelet需要申请那些证书" class="headerlink" title="kubelet需要申请那些证书"></a>kubelet需要申请那些证书</h2><p>集群启用RBAC后各组件之间的通信是基于TLS加密的，client和server需要通过证书中的CN，O来确定用户的user和group，因此client和server都需要持有有效证书</p><ul><li>node节点的kubelet需要和master节点的apiserver通信，此时kubelet是一个client需要申请证书</li><li>node节点的kubelet启动为守住进程通过10250端口暴露自己的状态，此时kubelet是一个server需要申请证书</li></ul><h2 id="kubelet申请证书的步骤"><a href="#kubelet申请证书的步骤" class="headerlink" title="kubelet申请证书的步骤"></a>kubelet申请证书的步骤</h2><ol><li>集群产生一个低权账号用户组，并通过TOKEN进行认证</li><li>创建ClusterRole使其具有创建证书申请CSR的权限</li><li>给这个组添加ClusterRoleBinding，使得具有这个组的账号的kubelet具有上述权限</li><li>给添加ClusterRoleBinding，使得controller-manager自动同意上述两个证书的下发</li><li>调整 Controller Manager确保启动tokencleaner和bootstrapsigner（4中自动证书下发的功能）</li><li>基于上述TOKEN生成bootstrap.kubeconfig文件，并下发给node节点</li><li>node节点的kubelet拿着这个bootstrap.kubeconfig向master的apiserver发起CSR</li><li>master自动同意并下发第一个证书</li><li>node记得点的kubelet自动拿着第一个证书与master的apiserver通信申请第二个证书</li><li>master自动同意并下发第二个证书</li><li>node节点加入集群</li></ol><h1 id="踩坑记"><a href="#踩坑记" class="headerlink" title="踩坑记"></a>踩坑记</h1><p>大家可能看到了，要想完成证书申请需要TOKEN，而我就栽在了第一步。</p><p>通常我们搭建的集群有两种运行方式：</p><ul><li>二进制部署以守住进程运行</li><li>kubeadm部署以静态POD运行</li></ul><h2 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h2><p>部署是通常写一个token.csv文件，apiserver启动时加上参数”–token-auth-file=/etc/kubernetes/token.csv”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6df3c701f979cee17732c30958745947,kubelet-bootstrap,10001,&quot;system:bootstrappers&quot;</span><br></pre></td></tr></table></figure><p>上述”6df3c701f979cee17732c30958745947”为TOKEN值，”system:bootstrappers”为用户组</p><h2 id="第二种方式："><a href="#第二种方式：" class="headerlink" title="第二种方式："></a>第二种方式：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个TOKEN，指定组为system:bootstrappers:cka:default-node-token</span></span><br><span class="line">kubeadm token create</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有TOKEN</span></span><br><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><h2 id="坑："><a href="#坑：" class="headerlink" title="坑："></a>坑：</h2><p>既然已经知道了如何获取TOKEN那就开始吧，docker ps有内容apisever，controller-manager,scheduler都是静态POD，第一种方式行不通那就第二种，kubeadm！纳尼！！！没有kubeadm命令！</p><p>此时我的内心是崩溃的第一步都进行不下去，无奈这题就栽在这里了。</p><p>考后在google的帮忙下找到了第三种生成TOKEN的方法</p><h2 id="第三种方式："><a href="#第三种方式：" class="headerlink" title="第三种方式："></a>第三种方式：</h2><p>可以创建类型为”bootstrap.kubernetes.io/token”的secret，<a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/#bootstrap-token-secret-format" target="_blank" rel="noopener">参见官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(head -c 6 /dev/urandom | md5sum | head -c 6)</span>"</span>.<span class="string">"<span class="variable">$(head -c 16 /dev/urandom | md5sum | head -c 16)</span>"</span></span><br><span class="line"><span class="comment"># d08961.c704b892a7c0a5f6</span></span><br></pre></td></tr></table></figure><p>执行上述命令得到一个TOKEN值”d08961.c704b892a7c0a5f6”</p><p>这个 <code>d08961.c704b892a7c0a5f6</code> 就是生成的 Bootstrap Token，保存好 token，因为后续要用；关于这个 token 解释如下:</p><p>Token 必须满足 <code>[a-z0-9]{6}\.[a-z0-9]{16}</code> 格式；以 <code>.</code> 分割，前面的部分被称作 <code>Token ID</code> ， <code>Token ID</code> 并不是 “机密信息”，它可以暴露出去；相对的后面的部分称为 <code>Token Secret</code> ，它应该是保密的。</p><p>下面我们将这个TOKEN做成secret：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  <span class="comment"># Name MUST be of form "bootstrap-token-&lt;token id&gt;"</span></span><br><span class="line">  name: bootstrap-token-d08961</span><br><span class="line">  namespace: kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># Type MUST be 'bootstrap.kubernetes.io/token'</span></span><br><span class="line"><span class="built_in">type</span>: bootstrap.kubernetes.io/token</span><br><span class="line">stringData:</span><br><span class="line">  <span class="comment"># Human readable description. Optional.</span></span><br><span class="line">  description: <span class="string">"The default bootstrap token generated by 'kubeadm init'."</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Token ID and secret. Required.</span></span><br><span class="line">  token-id: d08961</span><br><span class="line">  token-secret: c704b892a7c0a5f6</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Expiration. Optional.</span></span><br><span class="line">  expiration: 2020-03-10T03:22:11Z</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Allowed usages.</span></span><br><span class="line">  usage-bootstrap-authentication: <span class="string">"true"</span></span><br><span class="line">  usage-bootstrap-signing: <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Extra groups to authenticate the token as. Must start with "system:bootstrappers:"</span></span><br><span class="line">  auth-extra-groups: system:bootstrappers:cka:default-node-token</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create  -n kube-system -f bootstrap-secret.yaml</span><br><span class="line">kubectl get secrets -n kube-system</span><br></pre></td></tr></table></figure><h1 id="完整答案"><a href="#完整答案" class="headerlink" title="完整答案"></a>完整答案</h1><p>剩下的就是接住上面部分按要求做完</p><h2 id="创建ClusterRole"><a href="#创建ClusterRole" class="headerlink" title="创建ClusterRole"></a>创建ClusterRole</h2><p><a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/#kube-controller-manager-configuration" target="_blank" rel="noopener">参见官方文档</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A ClusterRole which instructs the CSR approver to approve a user requesting</span></span><br><span class="line"><span class="comment"># node client credentials.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:certificates.k8s.io:certificatesigningrequests:nodeclient</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">["certificates.k8s.io"]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["certificatesigningrequests/nodeclient"]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["create"]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># A ClusterRole which instructs the CSR approver to approve a node renewing its</span></span><br><span class="line"><span class="comment"># own client credentials.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">["certificates.k8s.io"]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["certificatesigningrequests/selfnodeclient"]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["create"]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:node-bootstrapper</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">certificates.k8s.io</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">certificatesigningrequests</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">watch</span></span><br></pre></td></tr></table></figure><p>有些role系统已经内置了，如果提示报错直接忽略就行了</p><h2 id="创建ClusterRoleBinding"><a href="#创建ClusterRoleBinding" class="headerlink" title="创建ClusterRoleBinding"></a>创建ClusterRoleBinding</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">cka:kubelet-bootstrap</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:node-bootstrapper</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Group</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:bootstrappers:cka:default-node-token</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">cka:node-autoapprove-bootstrap</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:certificates.k8s.io:certificatesigningrequests:nodeclient</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Group</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:bootstrappers:cka:default-node-token</span></span><br></pre></td></tr></table></figure><h2 id="调整-Controller-Manage"><a href="#调整-Controller-Manage" class="headerlink" title="调整 Controller Manage"></a>调整 Controller Manage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/manifests/kube-controller-manager.yaml</span><br><span class="line"><span class="comment"># 确保配置文件中有这行"--controllers=*,bootstrapsigner,tokencleaner"</span></span><br></pre></td></tr></table></figure><h2 id="生成bootstrap-kubeconfig文件"><a href="#生成bootstrap-kubeconfig文件" class="headerlink" title="生成bootstrap.kubeconfig文件"></a>生成bootstrap.kubeconfig文件</h2><p>我这里的apiserver的地址为”<a href="https://192.168.65.26:6443&quot;" target="_blank" rel="noopener">https://192.168.65.26:6443&quot;</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster cka \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.65.26:6443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf</span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:bootstrap:d08961 \</span><br><span class="line">  --token=d08961.c704b892a7c0a5f6 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf</span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=cka \</span><br><span class="line">  --user=system:bootstrap:d08961 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf</span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf</span><br></pre></td></tr></table></figure><p>将其拷贝到node节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/kubernetes/bootstrap-kubelet.conf node3:/etc/kubernetes/bootstrap-kubelet.conf</span><br></pre></td></tr></table></figure><h2 id="配置node节点的kubelet"><a href="#配置node节点的kubelet" class="headerlink" title="配置node节点的kubelet"></a>配置node节点的kubelet</h2><p>编辑kubelet.config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/kubelet.config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: KubeletConfiguration</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">address: 192.168.65.28</span><br><span class="line">port: 10250</span><br><span class="line">readOnlyPort: 10255</span><br><span class="line">cgroupDriver: cgroupfs</span><br><span class="line">clusterDNS: [<span class="string">"10.96.0.10"</span>]</span><br><span class="line">clusterDomain: cluster.local.</span><br><span class="line">failSwapOn: <span class="literal">false</span></span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>编辑kubelet.service </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/kubelet.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">#EnvironmentFile=/k8s/kubernetes/cfg/kubelet</span><br><span class="line">ExecStart=/usr/bin/kubelet \</span><br><span class="line">--logtostderr=true \</span><br><span class="line">--v=4 \</span><br><span class="line">--hostname-override=192.168.65.28 \</span><br><span class="line">--kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</span><br><span class="line">--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf \</span><br><span class="line">--config=/etc/kubernetes/kubelet.config \</span><br><span class="line">--cert-dir=/etc/kubernetes/pki \</span><br><span class="line">--pod-infra-container-image=k8s.gcr.io/pause:3.1</span><br><span class="line">Restart=on-failure</span><br><span class="line">KillMode=process</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl restart kubelet.service</span><br><span class="line">systemctl status kubelet.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;前两天考试CKA遇到这样一道题目:添加一个node节点到集群中。这其实并不难，但由于不了解实验环境结构第一步就卡住了，结果就jj了（PS:此题8分,
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>openldap安装配置</title>
    <link href="https://blog.fanfengqiang.com/2019/02/01/openldap%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://blog.fanfengqiang.com/2019/02/01/openldap安装配置/</id>
    <published>2019-02-01T12:35:57.000Z</published>
    <updated>2019-06-17T03:45:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-LDAP介绍"><a href="#1-LDAP介绍" class="headerlink" title="1. LDAP介绍"></a>1. LDAP介绍</h1><p>轻型目录访问协议（英文：Lightweight Directory Access Protocol，缩写：LDAP）是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。</p><p>目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它呈树状结构组织数据，就好象Linux/Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。</p><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/ldap_intro_dctree.png" alt></p><h1 id="2-常用组件"><a href="#2-常用组件" class="headerlink" title="2. 常用组件"></a>2. 常用组件</h1><h2 id="2-1-openLDAP"><a href="#2-1-openLDAP" class="headerlink" title="2.1. openLDAP"></a>2.1. openLDAP</h2><p>OpenLDAP是轻型目录访问协议（Lightweight Directory Access Protocol，LDAP）的自由和开源的实现，在其OpenLDAP许可证下发行，并已经被包含在众多流行的Linux发行版中。</p><h2 id="2-2-phpLDAPadmin"><a href="#2-2-phpLDAPadmin" class="headerlink" title="2.2. phpLDAPadmin"></a>2.2. phpLDAPadmin</h2><p>一个开源的ldap web管理界面，语言用PHP编写，依赖PHP环境</p><h2 id="2-3-Self-Service-Password"><a href="#2-3-Self-Service-Password" class="headerlink" title="2.3. Self Service Password"></a>2.3. Self Service Password</h2><p>ldap的密码需改和密码找回</p><h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h1><h2 id="3-1-环境"><a href="#3-1-环境" class="headerlink" title="3.1. 环境"></a>3.1. 环境</h2><p>OS:Centos7.6已安装epel源</p><p>openldap-servers:2.4.44</p><h2 id="3-2-openLDAP"><a href="#3-2-openLDAP" class="headerlink" title="3.2. openLDAP"></a>3.2. openLDAP</h2><h3 id="3-2-1-安装软件包"><a href="#3-2-1-安装软件包" class="headerlink" title="3.2.1. 安装软件包"></a>3.2.1. 安装软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 软件都在base源</span></span><br><span class="line">yum  install openldap openldap-servers openldap-clients -y</span><br></pre></td></tr></table></figure><h3 id="3-2-2-复制数据库模板"><a href="#3-2-2-复制数据库模板" class="headerlink" title="3.2.2. 复制数据库模板"></a>3.2.2. 复制数据库模板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span><br><span class="line">chown ldap.ldap /var/lib/ldap/DB_CONFIG</span><br></pre></td></tr></table></figure><h3 id="3-2-3-配置LDAPS证书（可选）"><a href="#3-2-3-配置LDAPS证书（可选）" class="headerlink" title="3.2.3. 配置LDAPS证书（可选）"></a>3.2.3. 配置LDAPS证书（可选）</h3><p>由于ldap是明文的，如果外网访问需要TLS加密</p><h4 id="3-2-3-1-生成自签名证书（可选）"><a href="#3-2-3-1-生成自签名证书（可选）" class="headerlink" title="3.2.3.1. 生成自签名证书（可选）"></a>3.2.3.1. 生成自签名证书（可选）</h4><p>接下来生成LDAP服务器的自签名证书，输入以下命令将在<code>/etc/openldap/certs/</code>目录下生成证书和私钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -nodes -out /etc/openldap/certs/ldap.cert -keyout /etc/openldap/certs/ldap.key -days 365</span><br></pre></td></tr></table></figure><h4 id="3-2-3-2-修改用户组"><a href="#3-2-3-2-修改用户组" class="headerlink" title="3.2.3.2. 修改用户组"></a>3.2.3.2. 修改用户组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R ldap:ldap /etc/openldap/certs/*</span><br></pre></td></tr></table></figure><h4 id="3-2-3-3-修改配置文件"><a href="#3-2-3-3-修改配置文件" class="headerlink" title="3.2.3.3. 修改配置文件"></a>3.2.3.3. 修改配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/openldap/slapd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加如下三行</span></span><br><span class="line"><span class="comment">#TLSCACertificateFile /etc/openldap/certs/ca.crt</span></span><br><span class="line"><span class="comment">#TLSCertificateFile /etc/openldap/certs/ldapserver.crt</span></span><br><span class="line"><span class="comment">#TLSCertificateKeyFile /etc/openldap/certs/ldapkey.pem</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/ldap-tls.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/slapd</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/slapconf.png" alt></p><h3 id="3-2-4-启动服务"><a href="#3-2-4-启动服务" class="headerlink" title="3.2.4. 启动服务"></a>3.2.4. 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> slapd</span><br><span class="line">systemctl start slapd</span><br></pre></td></tr></table></figure><h3 id="3-2-5-查看端口是否启动"><a href="#3-2-5-查看端口是否启动" class="headerlink" title="3.2.5. 查看端口是否启动"></a>3.2.5. 查看端口是否启动</h3><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/ldap-port.png" alt></p><p>389是ldap端口，636是ldaps端口（只有启动TLS加密功能才会监听此端口）</p><h3 id="3-2-6-生成openldap的管理员密码"><a href="#3-2-6-生成openldap的管理员密码" class="headerlink" title="3.2.6. 生成openldap的管理员密码"></a>3.2.6. 生成openldap的管理员密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -s后面跟的是明文密码，结果是密文密码</span></span><br><span class="line">slappasswd -s 5ik8s </span><br><span class="line"><span class="comment">#&#123;SSHA&#125;dC1q0RSZCTUHbJGzDFHVsghsQk3cr9js</span></span><br></pre></td></tr></table></figure><h3 id="3-2-7-将管理员密码导入到-LDAP配置文件"><a href="#3-2-7-将管理员密码导入到-LDAP配置文件" class="headerlink" title="3.2.7. 将管理员密码导入到 LDAP配置文件"></a>3.2.7. 将管理员密码导入到 LDAP配置文件</h3><h4 id="3-2-7-1-编辑文件chrootpw-ldif"><a href="#3-2-7-1-编辑文件chrootpw-ldif" class="headerlink" title="3.2.7.1. 编辑文件chrootpw.ldif"></a>3.2.7.1. 编辑文件chrootpw.ldif</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dn: olcDatabase=&#123;0&#125;config,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;dC1q0RSZCTUHbJGzDFHVsghsQk3cr9js</span><br></pre></td></tr></table></figure><h4 id="3-2-7-2-执行如下命令"><a href="#3-2-7-2-执行如下命令" class="headerlink" title="3.2.7.2. 执行如下命令"></a>3.2.7.2. 执行如下命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif</span><br></pre></td></tr></table></figure><h3 id="3-2-8-向-LDAP-中导入一些基本的-Schema"><a href="#3-2-8-向-LDAP-中导入一些基本的-Schema" class="headerlink" title="3.2.8. 向 LDAP 中导入一些基本的 Schema"></a>3.2.8. 向 LDAP 中导入一些基本的 Schema</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif </span><br><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif </span><br><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif</span><br></pre></td></tr></table></figure><h3 id="3-2-9-配置-LDAP-的根域及其管理域"><a href="#3-2-9-配置-LDAP-的根域及其管理域" class="headerlink" title="3.2.9. 配置 LDAP 的根域及其管理域"></a>3.2.9. 配置 LDAP 的根域及其管理域</h3><p>以 dc=5ik8s,dc=com 为例</p><h4 id="3-2-9-1-编辑文件chdomain-ldif"><a href="#3-2-9-1-编辑文件chdomain-ldif" class="headerlink" title="3.2.9.1. 编辑文件chdomain.ldif"></a>3.2.9.1. 编辑文件chdomain.ldif</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">dn: olcDatabase=&#123;1&#125;monitor,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to * by dn.base=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span></span><br><span class="line">  <span class="built_in">read</span> by dn.base=<span class="string">"cn=admin,dc=5ik8s,dc=com"</span> <span class="built_in">read</span> by * none</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcSuffix</span><br><span class="line">olcSuffix: dc=5ik8s,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcRootDN</span><br><span class="line">olcRootDN: cn=admin,dc=5ik8s,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;dC1q0RSZCTUHbJGzDFHVsghsQk3cr9js</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by</span><br><span class="line">  dn=<span class="string">"cn=admin,dc=5ik8s,dc=com"</span> write by anonymous auth by self write by * none</span><br><span class="line">olcAccess: &#123;1&#125;to dn.base=<span class="string">""</span> by * <span class="built_in">read</span></span><br><span class="line">olcAccess: &#123;2&#125;to * by dn=<span class="string">"cn=admin,dc=5ik8s,dc=com"</span> write by * <span class="built_in">read</span></span><br></pre></td></tr></table></figure><h4 id="3-2-9-2，-执行命令"><a href="#3-2-9-2，-执行命令" class="headerlink" title="3,2,9,2， 执行命令"></a>3,2,9,2， 执行命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif</span><br></pre></td></tr></table></figure><h3 id="3-2-10-创建组织"><a href="#3-2-10-创建组织" class="headerlink" title="3.2.10. 创建组织"></a>3.2.10. 创建组织</h3><p>创建一个叫做 5ik8s  org. 的组织，并在其下创建一个 admin 的组织角色（该组织角色内的用户具有管理整个 LDAP 的权限）和 People 和 Group 两个组织单元</p><h4 id="3-2-10-1-编辑文件basedomain-ldif"><a href="#3-2-10-1-编辑文件basedomain-ldif" class="headerlink" title="3.2.10.1. 编辑文件basedomain.ldif"></a>3.2.10.1. 编辑文件basedomain.ldif</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">dn: dc=5ik8s,dc=com</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: dcObject</span><br><span class="line">objectClass: organization</span><br><span class="line">o: 5ik8s org.</span><br><span class="line">dc: 5ik8s</span><br><span class="line"></span><br><span class="line">dn: cn=admin,dc=5ik8s,dc=com</span><br><span class="line">objectClass: organizationalRole</span><br><span class="line">cn: admin</span><br><span class="line"></span><br><span class="line">dn: ou=People,dc=5ik8s,dc=com</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: People</span><br><span class="line"></span><br><span class="line">dn: ou=Group,dc=5ik8s,dc=com</span><br><span class="line">objectClass: organizationalRole</span><br><span class="line">cn: Group</span><br></pre></td></tr></table></figure><h4 id="3-2-10-2-执行命令"><a href="#3-2-10-2-执行命令" class="headerlink" title="3.2.10.2. 执行命令"></a>3.2.10.2. 执行命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -x -D cn=admin,dc=5ik8s,dc=com -f basedomain.ldif -w 5ik8s</span><br><span class="line"><span class="comment"># -W后面跟的是密码，如不加则需要交互式输入密码</span></span><br></pre></td></tr></table></figure><h2 id="3-3-phpLDAPadmin"><a href="#3-3-phpLDAPadmin" class="headerlink" title="3.3. phpLDAPadmin"></a>3.3. phpLDAPadmin</h2><h3 id="3-3-1-安装"><a href="#3-3-1-安装" class="headerlink" title="3.3.1. 安装"></a>3.3.1. 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># phpldapadmin在epel源</span></span><br><span class="line">yum -y install phpldapadmin</span><br></pre></td></tr></table></figure><p>默认会依赖安装httpd，php。（php默认以模块方式安装）</p><h3 id="3-3-2-配置"><a href="#3-3-2-配置" class="headerlink" title="3.3.2. 配置"></a>3.3.2. 配置</h3><h4 id="3-3-2-1-修改apache为外网可访问"><a href="#3-3-2-1-修改apache为外网可访问" class="headerlink" title="3.3.2.1. 修改apache为外网可访问"></a>3.3.2.1. 修改apache为外网可访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf.d/phpldapadmin.conf</span><br></pre></td></tr></table></figure><p><img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/phpldapadmin.png" alt></p><p>局域网内部也可以改为</p><p>   Require local<br>   Require ip 192.168.0.0/16         #在这里添加允许访问的IP</p><h4 id="3-3-2-2-配置登录方式"><a href="#3-3-2-2-配置登录方式" class="headerlink" title="3.3.2.2. 配置登录方式"></a>3.3.2.2. 配置登录方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/phpldapadmin/config.php</span><br><span class="line"><span class="comment"># 修改第397行</span></span><br><span class="line"><span class="comment"># $servers-&gt;setValue('login','attr','uid');  #改为下行</span></span><br><span class="line"><span class="comment"># $servers-&gt;setValue('login','attr','dn');</span></span><br></pre></td></tr></table></figure><h3 id="3-3-3-启动服务"><a href="#3-3-3-启动服务" class="headerlink" title="3.3.3. 启动服务"></a>3.3.3. 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><h2 id="3-4-Self-Service-Password"><a href="#3-4-Self-Service-Password" class="headerlink" title="3.4. Self Service Password"></a>3.4. Self Service Password</h2><h3 id="3-4-1-安装"><a href="#3-4-1-安装" class="headerlink" title="3.4.1 安装"></a>3.4.1 安装</h3><p>rpm，yum两种安装方式二选一</p><h4 id="3-4-1-1-yum安装"><a href="#3-4-1-1-yum安装" class="headerlink" title="3.4.1.1. yum安装"></a>3.4.1.1. yum安装</h4><h5 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/ltb-project.repo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ltb-project-noarch]</span><br><span class="line">name=LTB project packages (noarch)</span><br><span class="line">baseurl=https://ltb-project.org/rpm/<span class="variable">$releasever</span>/noarch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-LTB-project</span><br></pre></td></tr></table></figure><h5 id="导入repository-key"><a href="#导入repository-key" class="headerlink" title="导入repository key"></a>导入repository key</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://ltb-project.org/wiki/lib/RPM-GPG-KEY-LTB-project</span><br></pre></td></tr></table></figure><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br><span class="line">yum install self-service-password</span><br></pre></td></tr></table></figure><h4 id="3-4-1-2-RPM安装"><a href="#3-4-1-2-RPM安装" class="headerlink" title="3.4.1.2. RPM安装"></a>3.4.1.2. RPM安装</h4><h5 id="下载软件包"><a href="#下载软件包" class="headerlink" title="下载软件包"></a>下载软件包</h5><p><a href="https://ltb-project.org/download#self_service_password" target="_blank" rel="noopener">https://ltb-project.org/download#self_service_password</a></p><h5 id="导入repository-key-1"><a href="#导入repository-key-1" class="headerlink" title="导入repository key"></a>导入repository key</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://ltb-project.org/wiki/lib/RPM-GPG-KEY-LTB-project</span><br></pre></td></tr></table></figure><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall self-service-password-VERSION.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="3-4-2-配置"><a href="#3-4-2-配置" class="headerlink" title="3.4.2. 配置"></a>3.4.2. 配置</h3><h4 id="3-4-2-1-配置web服务"><a href="#3-4-2-1-配置web服务" class="headerlink" title="3.4.2.1. 配置web服务"></a>3.4.2.1. 配置web服务</h4><p>Apache和nginx二选一（默认选择Apache）<a href="https://ltb-project.org/documentation/self-service-password/latest/config_webserver" target="_blank" rel="noopener">参考</a></p><h5 id="配置Apache"><a href="#配置Apache" class="headerlink" title="配置Apache"></a>配置Apache</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf.d/self-service-password.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Alias /ssp /usr/<span class="built_in">local</span>/self-service-password</span><br><span class="line"> </span><br><span class="line">&lt;Directory /usr/<span class="built_in">local</span>/self-service-password&gt;</span><br><span class="line">        AllowOverride None</span><br><span class="line">        &lt;IfVersion &gt;= 2.3&gt;</span><br><span class="line">            Require all granted</span><br><span class="line">        &lt;/IfVersion&gt;</span><br><span class="line">        &lt;IfVersion &lt; 2.3&gt;</span><br><span class="line">            Order Deny,Allow</span><br><span class="line">            Allow from all</span><br><span class="line">        &lt;/IfVersion&gt;</span><br><span class="line">        DirectoryIndex index.php</span><br><span class="line">        AddDefaultCharset UTF-8</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line">&lt;Directory /usr/<span class="built_in">local</span>/self-service-password/scripts&gt;</span><br><span class="line">        AllowOverride None</span><br><span class="line">        &lt;IfVersion &gt;= 2.3&gt;</span><br><span class="line">            Require all denied</span><br><span class="line">        &lt;/IfVersion&gt;</span><br><span class="line">        &lt;IfVersion &lt; 2.3&gt;</span><br><span class="line">            Order Deny,Allow</span><br><span class="line">            Deny from all</span><br><span class="line">        &lt;/IfVersion&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h5 id="配置Nginx（可选）"><a href="#配置Nginx（可选）" class="headerlink" title="配置Nginx（可选）"></a>配置Nginx（可选）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line"> </span><br><span class="line">root /var/www/html;</span><br><span class="line">index index.php index.html index.htm;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Make site accessible from http://localhost/</span></span><br><span class="line">server_name _;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html</span></span><br><span class="line">sendfile off;</span><br><span class="line"> </span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_comp_level 6;</span><br><span class="line">    gzip_min_length 1000;</span><br><span class="line">    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Add stdout logging</span></span><br><span class="line"> </span><br><span class="line">error_log /dev/stdout warn;</span><br><span class="line">access_log /dev/stdout main;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># pass the PHP scripts to FastCGI server listening on socket</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ \.php &#123;</span><br><span class="line">fastcgi_pass unix:/var/run/php-fpm.socket;</span><br><span class="line">fastcgi_split_path_info       ^(.+\.php)(/.+)$;</span><br><span class="line">fastcgi_param PATH_INFO       <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">fastcgi_param PATH_TRANSLATED <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_read_timeout 600;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    location = /404.html &#123;</span><br><span class="line">            root /usr/share/nginx/html;</span><br><span class="line">            internal;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># deny access to . files, for security</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ /\. &#123;</span><br><span class="line">log_not_found off; </span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">location ~ /scripts &#123;</span><br><span class="line">log_not_found off; </span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-2-2-配置ssp"><a href="#3-4-2-2-配置ssp" class="headerlink" title="3.4.2.2. 配置ssp"></a>3.4.2.2. 配置ssp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/share/self-service-password/conf/config.inc.php</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改如下值</span></span><br><span class="line"><span class="variable">$ldap_url</span> = <span class="string">"ldap://127.0.0.1:389"</span>;</span><br><span class="line"><span class="variable">$ldap_binddn</span> = <span class="string">"cn=admin,dc=5ik8s,dc=com"</span>;</span><br><span class="line"><span class="variable">$ldap_bindpw</span> = <span class="string">"5ik8s"</span>;   <span class="comment"># 换成你自己的密码</span></span><br><span class="line"><span class="variable">$ldap_base</span> = <span class="string">"dc=5ik8s,dc=com"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码规则</span></span><br><span class="line"><span class="variable">$hash</span> = <span class="string">"SSHA"</span>;</span><br><span class="line"><span class="variable">$pwd_min_length</span> = 8;</span><br><span class="line"><span class="variable">$pwd_max_length</span> = 15;</span><br><span class="line"><span class="variable">$pwd_min_lower</span> = 1;</span><br><span class="line"><span class="variable">$pwd_min_upper</span> = 1;</span><br><span class="line"><span class="variable">$pwd_min_digit</span> = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用问题找回密码功能</span></span><br><span class="line"><span class="variable">$use_questions</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$mail_from</span> = <span class="string">"ffqmail@163.com"</span>;</span><br><span class="line"><span class="variable">$notify_on_change</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$mail_smtp_host</span> = <span class="string">'smtp.163.com'</span>;</span><br><span class="line"><span class="variable">$mail_smtp_auth</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$mail_smtp_user</span> = <span class="string">'ffqmail@163.com'</span>;</span><br><span class="line"><span class="variable">$mail_smtp_pass</span> = <span class="string">'XXXXXX'</span>;   <span class="comment"># 换成你自己的密码</span></span><br><span class="line"><span class="variable">$mail_smtp_port</span> = 25;</span><br><span class="line"><span class="variable">$mail_smtp_timeout</span> = 30;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用短信找回密码功能</span></span><br><span class="line"><span class="variable">$use_sms</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密字符串，随机生成一个替换掉下面的值</span></span><br><span class="line"><span class="variable">$keyphrase</span> = <span class="string">"cufyvhbjyfytcug5yuh89"</span>;</span><br></pre></td></tr></table></figure><h3 id="3-4-3-重启服务"><a href="#3-4-3-重启服务" class="headerlink" title="3.4.3. 重启服务"></a>3.4.3. 重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><h1 id="4-基本概念"><a href="#4-基本概念" class="headerlink" title="4. 基本概念"></a>4. 基本概念</h1><h2 id="4-1-Entry"><a href="#4-1-Entry" class="headerlink" title="4.1. Entry"></a>4.1. Entry</h2><p><strong>条目</strong>，也叫<strong>记录项</strong>，是LDAP中最基本的颗粒，就像字典中的词条，或者是数据库中的记录。通常对LDAP的添加、删除、更改、检索都是以条目为基本对象的。</p><p><code>dn</code>：每一个条目都有一个唯一的标识名（distinguished Name ，DN），如上图中一个 dn：”cn=baby,ou=marketing,ou=people,dc=mydomain,dc=org” 。通过DN的层次型语法结构，可以方便地表示出条目在LDAP树中的位置，通常用于检索。</p><p><code>rdn</code>：一般指dn逗号最左边的部分，如cn=baby。它与RootDN不同，RootDN通常与RootPW同时出现，特指管理LDAP中信息的最高权限用户。</p><p><code>Base DN</code>：LDAP目录树的最顶部就是根，也就是所谓的“Base DN”，如”dc=mydomain,dc=org”。</p><h2 id="4-2-Attribute"><a href="#4-2-Attribute" class="headerlink" title="4.2. Attribute"></a>4.2. Attribute</h2><p>每个条目都可以有很多<strong>属性</strong>（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。</p><table><thead><tr><th>属性</th><th>别名</th><th>语法</th><th>描述</th><th>值(举例)</th></tr></thead><tbody><tr><td>commonName</td><td>cn</td><td>Directory String</td><td>姓名</td><td>sean</td></tr><tr><td>surname</td><td>sn</td><td>Directory String</td><td>姓</td><td>Chow</td></tr><tr><td>organizationalUnitName</td><td>ou</td><td>Directory String</td><td>单位（部门）名称</td><td>IT_SECTION</td></tr><tr><td>organization</td><td>o</td><td>Directory String</td><td>组织（公司）名称</td><td>example</td></tr><tr><td>telephoneNumber</td><td></td><td>Telephone Number</td><td>电话号码</td><td>110</td></tr></tbody></table><h2 id="4-3-ObjectClass"><a href="#4-3-ObjectClass" class="headerlink" title="4.3. ObjectClass"></a>4.3. ObjectClass</h2><p>对象类是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。</p><h2 id="4-4-Schema"><a href="#4-4-Schema" class="headerlink" title="4.4. Schema"></a>4.4. Schema</h2><p>对象类（ObjectClass）、属性类型（AttributeType）、语法（Syntax）分别约定了条目、属性、值，他们之间的关系如下图所示。所以这些构成了模式(Schema)——对象类的集合。条目数据在导入时通常需要接受模式检查，它确保了目录中所有的条目数据结构都是一致的。</p><h2 id="4-5-backend-amp-database"><a href="#4-5-backend-amp-database" class="headerlink" title="4.5. backend &amp; database"></a>4.5. backend &amp; database</h2><p>ldap的后台进程slapd接收、响应请求，但实际存储数据、获取数据的操作是由Backends做的，而数据是存放在database中，所以你可以看到往往你可以看到<code>backend</code>和<code>database</code>指令是一样的值如 bdb 。一个 backend 可以有多个 database instance，但每个 database 的 suffix 和 rootdn 不一样。</p><h2 id="4-6-TLS-amp-SASL"><a href="#4-6-TLS-amp-SASL" class="headerlink" title="4.6. TLS &amp; SASL"></a>4.6. TLS &amp; SASL</h2><p>分布式LDAP 是以明文的格式通过网络来发送信息的，包括client访问ldap的密码（当然一般密码已然是二进制的），SSL/TLS 的加密协议就是来保证数据传送的保密性和完整性。</p><p>SASL （Simple Authenticaion and Security Layer）简单身份验证安全框架，它能够实现openldap客户端到服务端的用户验证，也是<code>ldapsearch</code>、<code>ldapmodify</code>这些标准客户端工具默认尝试与LDAP服务端认证用户的方式（前提是已经安装好 <a href="http://www.openldap.org/doc/admin24/sasl.html" target="_blank" rel="noopener">Cyrus SASL</a>）。SASL有几大工业实现标准：Kerveros V5、DIGEST-MD5、EXTERNAL、PLAIN、LOGIN。</p><h2 id="4-7-LDIF"><a href="#4-7-LDIF" class="headerlink" title="4.7. LDIF"></a>4.7. LDIF</h2><p>LDIF（LDAP Data Interchange Format，数据交换格式）是LDAP数据库信息的一种文本格式，用于数据的导入导出，每行都是“属性: 值”对</p><h1 id="5-备份与恢复"><a href="#5-备份与恢复" class="headerlink" title="5. 备份与恢复"></a>5. 备份与恢复</h1><h2 id="5-1-备份"><a href="#5-1-备份" class="headerlink" title="5.1. 备份"></a>5.1. 备份</h2><h3 id="5-1-1-使用slapcat指令备份"><a href="#5-1-1-使用slapcat指令备份" class="headerlink" title="5.1.1. 使用slapcat指令备份"></a>5.1.1. 使用slapcat指令备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">slapcat -v -l openldap-backup-tmp.ldif</span><br><span class="line"><span class="comment"># 此命令导出的数据过于详细有些数据无法直接导入需要进行数据整理</span></span><br><span class="line">cat &gt; openldap-backup.synax &lt;&lt; EOF</span><br><span class="line">/^creatorsName: /d</span><br><span class="line">/^createTimestamp: /d</span><br><span class="line">/^modifiersName: /d</span><br><span class="line">/^modifyTimestamp: /d</span><br><span class="line">/^structuralObjectClass: /d</span><br><span class="line">/^entryUUID: /d</span><br><span class="line">/^entryCSN: /d</span><br><span class="line">EOF</span><br><span class="line">cat openldap-backup-tmp.ldif | sed -f openldap-backup.synax &gt; openldap-backup.ldif</span><br><span class="line">rm -f openldap-backup-tmp.ldif</span><br></pre></td></tr></table></figure><h3 id="5-1-2-备份数据目录"><a href="#5-1-2-备份数据目录" class="headerlink" title="5.1.2. 备份数据目录"></a>5.1.2. 备份数据目录</h3><p>数据目录为/etc/openldap/slapd.d</p><p>备份可以用cp或者tar命令进行备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar czvf openldap-slapd-`date +%Y_%m_%d_%H_%M`.tar /etc/openldap/slapd.d</span><br></pre></td></tr></table></figure><p>恢复的时候直接覆盖原目录即可</p><h3 id="5-1-3-使用ldapsearch备份"><a href="#5-1-3-使用ldapsearch备份" class="headerlink" title="5.1.3. 使用ldapsearch备份"></a>5.1.3. 使用ldapsearch备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -LLL -w 5ik8s -x -H ldap://127.0.0.1 -D <span class="string">"cn=admin,dc=5ik8s,dc=com"</span> -b <span class="string">"dc=5ik8s,dc=com"</span> &gt;openldap-backup.ldif</span><br></pre></td></tr></table></figure><h2 id="5-2-恢复"><a href="#5-2-恢复" class="headerlink" title="5.2. 恢复"></a>5.2. 恢复</h2><h3 id="5-2-1-先删除所有条目"><a href="#5-2-1-先删除所有条目" class="headerlink" title="5.2.1. 先删除所有条目"></a>5.2.1. 先删除所有条目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapdelete -x -D <span class="string">"cn=admin,dc=域名,dc=com"</span> -w <span class="string">"密码"</span> -r <span class="string">"dc=域名,dc=com"</span></span><br></pre></td></tr></table></figure><h3 id="5-2-2-查看"><a href="#5-2-2-查看" class="headerlink" title="5.2.2. 查看"></a>5.2.2. 查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -LLL</span><br></pre></td></tr></table></figure><h3 id="5-2-3-恢复"><a href="#5-2-3-恢复" class="headerlink" title="5.2.3. 恢复"></a>5.2.3. 恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -H ldap://127.0.0.1 -x -D <span class="string">"用户"</span> -f openldap-backup.ldif -w 密码</span><br></pre></td></tr></table></figure><h2 id="5-3-恢复常见错误"><a href="#5-3-恢复常见错误" class="headerlink" title="5.3. 恢复常见错误"></a>5.3. 恢复常见错误</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　   ldap_add: Constraint violation (10)</span><br><span class="line">additional info: structuralObjectClass: no user modification allowed</span><br><span class="line">　　</span><br><span class="line">　　slapcat备份出来的ldapback.ldif中有系统自动生成的系统信息不能导入需要清除</span><br></pre></td></tr></table></figure><h1 id="6-常用命令"><a href="#6-常用命令" class="headerlink" title="6. 常用命令"></a>6. 常用命令</h1><h2 id="ldapadd"><a href="#ldapadd" class="headerlink" title="ldapadd"></a>ldapadd</h2><p>-x   进行简单认证<br>-D   用来绑定服务器的DN<br>-h   目录服务的地址<br>-w   绑定DN的密码<br>-f   使用ldif文件进行条目添加的文件<br>例子 </p><p>ldapadd -x -D “cn=root,dc=starxing,dc=com” -w secret -f /root/test.ldif</p><p>ldapadd -x -D “cn=root,dc=starxing,dc=com” -w secret</p><p> (这样写就是在命令行添加条目)</p><h2 id="ldapsearch"><a href="#ldapsearch" class="headerlink" title="ldapsearch"></a>ldapsearch</h2><p>-x   进行简单认证</p><p>-D   用来绑定服务器的DN</p><p>-w   绑定DN的密码</p><p>-b   指定要查询的根节点</p><p>-H   制定要查询的服务器</p><p>ldapsearch -x -D “cn=admin,dc=5ik8s,dc=com”  -b “dc=5ik8s,dc=com” -w secret</p><p>使用简单认证，用 “cn=root,dc=starxing,dc=com” 进行绑定，<br>要查询的根是 “dc=starxing,dc=com”。这样会把绑定的用户能访问”dc=starxing,dc=com”下的<br>所有数据显示出来。</p><p>ldapsearch -x -W -D “cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn” -b “cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn” -h troy.osdn.zzti.edu.cn</p><p>ldapsearch -b “dc=canon-is,dc=jp” -H ldaps://192.168.0.92:636</p><h2 id="ldapdelete"><a href="#ldapdelete" class="headerlink" title="ldapdelete"></a>ldapdelete</h2><p>ldapdelete -x -D “cn=Manager,dc=test,dc=com” -w secret “uid=test1,ou=People,dc=test,dc=com”</p><p>ldapdelete -x -D ‘cn=root,dc=it,dc=com’ -w secert ‘uid=zyx,dc=it,dc=com’</p><p>这样就可以删除’uid=zyx,dc=it,dc=com’记录了，应该注意一点，如果o或ou中有成员是不能删除的。</p><h2 id="ldappasswd"><a href="#ldappasswd" class="headerlink" title="ldappasswd"></a>ldappasswd</h2><p>-x   进行简单认证<br>-D   用来绑定服务器的DN<br>-w   绑定DN的密码<br>-S   提示的输入密码<br>-s pass 把密码设置为pass<br>-a pass 设置old passwd为pass<br>-A   提示的设置old passwd<br>-H   是指要绑定的服务器<br>-I   使用sasl会话方式</p><p>#ldappasswd -x -D ‘cm=root,dc=it,dc=com’ -w secret ‘uid=zyx,dc=it,dc=com’ -S<br>New password:<br>Re-enter new password:</p><p>就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。</p><h2 id="ldapmodify"><a href="#ldapmodify" class="headerlink" title="ldapmodify"></a>ldapmodify</h2><p>-a 添加新的条目.缺省的是修改存在的条目.<br>-C 自动追踪引用.<br>-c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文<br>   件内的某个条目在<a href="http://lib.csdn.net/base/14" target="_blank" rel="noopener">数据库</a>内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程<br>   序忽略该错误继续执行.<br>-n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器<br>   打开时,常和-v 参数一起测试到服务器是否是一条通路.<br>-v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的<br>   ip 地址和端口号等.<br>-M[M] 打开manage DSA IT 控制. -MM 把该控制设置为重要的.<br>-f file 从文件内读取条目的修改信息而不是从标准输入读取.<br>-x 使用简单认证.<br>-D binddn 指定搜索的用户名(一般为一dn 值).<br>-W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.<br>-w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.<br>-H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为<br>   ldap://hostname:port).如果使用了-H 就不能使用-h 和-p 参数.<br>-h ldaphost 指定要连接的主机的名称/ip 地址.它和-p 一起使用.<br>-p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用.<br>   如果使用了-h 和-p 参数就不能使用-H 参数.<br>-Z[Z] 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.<br>-V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用<br>   TLS 方式配合使用,并且匿名绑定到目录服务器.<br>-e 设置客户端证书文件,例: -e cert/client.crt<br>-E 设置客户端证书私钥文件,例: -E cert/client.key</p><p>#ldapmodify -x -D “cn=root,dc=it,dc=com” -W -f modify.ldif</p><p>将modify.ldif中的记录更新原有的记录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-LDAP介绍&quot;&gt;&lt;a href=&quot;#1-LDAP介绍&quot; class=&quot;headerlink&quot; title=&quot;1. LDAP介绍&quot;&gt;&lt;/a&gt;1. LDAP介绍&lt;/h1&gt;&lt;p&gt;轻型目录访问协议（英文：Lightweight Directory Access Pro
      
    
    </summary>
    
      <category term="openldap" scheme="https://blog.fanfengqiang.com/categories/openldap/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="openldap" scheme="https://blog.fanfengqiang.com/tags/openldap/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes HA master集群搭建</title>
    <link href="https://blog.fanfengqiang.com/2019/01/26/kubernetes-HA-master%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.fanfengqiang.com/2019/01/26/kubernetes-HA-master集群搭建/</id>
    <published>2019-01-26T07:03:05.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-配置基础环境"><a href="#1-配置基础环境" class="headerlink" title="1. 配置基础环境"></a>1. 配置基础环境</h1><p>参见 <a href="http://blog.fanfengqiang.com/2019/01/25/kubernetes%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85/">kubernetesv1.13.2安装</a> </p><p>其它要求：master大于等于2台（推荐3台），node节点大于等于1台</p><p>本文配置：</p><table><thead><tr><th>hostname</th><th>role</th><th>ip</th></tr></thead><tbody><tr><td>master-1</td><td>master</td><td>192.168.65.51</td></tr><tr><td>master-2</td><td>master</td><td>192.168.65.52</td></tr><tr><td>master-3</td><td>master</td><td>192.168.65.53</td></tr><tr><td></td><td>vip</td><td>192.168.65.60</td></tr><tr><td>node-1</td><td>node</td><td>192.168.65.54</td></tr><tr><td>node-2</td><td>node</td><td>192.168.65.55</td></tr></tbody></table><h1 id="2-安装kubernetes-HA集群"><a href="#2-安装kubernetes-HA集群" class="headerlink" title="2. 安装kubernetes HA集群"></a>2. 安装kubernetes HA集群</h1><h2 id="2-1-关于kubernetes镜像"><a href="#2-1-关于kubernetes镜像" class="headerlink" title="2.1. 关于kubernetes镜像"></a>2.1. 关于kubernetes镜像</h2><p>由于默认配置的镜像仓库无法直接到达，且安装节点较多，本示例需要采用docker代理具体方法参见 <a href="http://blog.fanfengqiang.com/2019/01/25/kubernetes%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85/">kubernetesv1.13.2安装</a> </p><h2 id="2-2-master节点"><a href="#2-2-master节点" class="headerlink" title="2.2. master节点"></a>2.2. master节点</h2><h2 id="2-2-1-调整内核参数"><a href="#2-2-1-调整内核参数" class="headerlink" title="2.2.1. 调整内核参数"></a>2.2.1. 调整内核参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写入配置文件</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">#生效配置文件</span></span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure><h3 id="配置VIP-amp-keepalive"><a href="#配置VIP-amp-keepalive" class="headerlink" title="配置VIP&amp;keepalive"></a>配置VIP&amp;keepalive</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在masters上执行</span></span><br><span class="line">MASTERS_IP=<span class="string">"192.168.65.51 192.168.65.52 192.168.65.53"</span></span><br><span class="line">VIP=<span class="string">"192.168.65.60"</span></span><br><span class="line">PRIORITY=(100 80 60)</span><br><span class="line">STATE=(<span class="string">"MASTER"</span> <span class="string">"BACKUP"</span> <span class="string">"BACKUP"</span>)</span><br><span class="line">NET_IF=<span class="string">"eth0"</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> 0 1 2; <span class="keyword">do</span></span><br><span class="line">  ip=<span class="variable">$&#123;MASTERS_IP[$&#123;index&#125;</span>]&#125;</span><br><span class="line">  ssh root@<span class="variable">$&#123;ip&#125;</span> <span class="string">"yum install -y keepalived"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id LVS_DEVEL</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state <span class="variable">$&#123;STATE[$&#123;index&#125;</span>]&#125;</span></span><br><span class="line"><span class="string">    interface <span class="variable">$&#123;NET_IF&#125;</span></span></span><br><span class="line"><span class="string">    virtual_router_id 80</span></span><br><span class="line"><span class="string">    priority <span class="variable">$&#123;PRIORITY[$&#123;index&#125;</span>]&#125;</span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass just0kk</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        <span class="variable">$&#123;VIP&#125;</span></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">virtual_server <span class="variable">$&#123;VIP&#125;</span> 6443 &#123;</span></span><br><span class="line"><span class="string">    delay_loop 6</span></span><br><span class="line"><span class="string">    lb_algo loadbalance</span></span><br><span class="line"><span class="string">    lb_kind DR</span></span><br><span class="line"><span class="string">    nat_mask 255.255.255.0</span></span><br><span class="line"><span class="string">    persistence_timeout 0</span></span><br><span class="line"><span class="string">    protocol TCP</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    real_server 192.168.65.51 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    real_server 192.168.65.52 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    real_server 192.168.65.53 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; ~/keepalived-<span class="variable">$&#123;index&#125;</span>.conf</span><br><span class="line">  scp ~/keepalived-<span class="variable">$&#123;index&#125;</span>.conf <span class="variable">$&#123;ip&#125;</span>:/etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">  ssh <span class="variable">$&#123;ip&#125;</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    systemctl stop keepalived</span></span><br><span class="line"><span class="string">    systemctl enable keepalived</span></span><br><span class="line"><span class="string">    systemctl start keepalived</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="2-2-2-初始化master-1节点"><a href="#2-2-2-初始化master-1节点" class="headerlink" title="2.2.2. 初始化master-1节点"></a>2.2.2. 初始化master-1节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">apiVersion: kubeadm.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">kind: ClusterConfiguration</span></span><br><span class="line"><span class="string">kubernetesVersion: v1.13.2</span></span><br><span class="line"><span class="string">controlPlaneEndpoint: "</span>192.168.65.60:6443<span class="string">"</span></span><br><span class="line"><span class="string">apiServer:</span></span><br><span class="line"><span class="string">  certSANs:</span></span><br><span class="line"><span class="string">  - 192.168.65.51</span></span><br><span class="line"><span class="string">  - 192.168.65.52</span></span><br><span class="line"><span class="string">  - 192.168.65.53</span></span><br><span class="line"><span class="string">  - 192.168.65.60</span></span><br><span class="line"><span class="string">networking:</span></span><br><span class="line"><span class="string">  # This CIDR is a Calico default. Substitute or remove for your CNI provider.</span></span><br><span class="line"><span class="string">  podSubnet: 10.244.0.0/16</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line">kubeadm init --config /etc/kubernetes/kubeadm-config.yaml</span><br></pre></td></tr></table></figure><h3 id="2-2-3-拷贝证书到其它master节点"><a href="#2-2-3-拷贝证书到其它master节点" class="headerlink" title="2.2.3. 拷贝证书到其它master节点"></a>2.2.3. 拷贝证书到其它master节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在master-1上执行</span></span><br><span class="line">IPS=<span class="string">"192.168.65.52 192.168.65.53"</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$IPS</span>; <span class="keyword">do</span></span><br><span class="line">  ssh <span class="variable">$ip</span> <span class="string">"mkdir -p /etc/kubernetes/pki/etcd; mkdir -p ~/.kube/"</span></span><br><span class="line">  scp /etc/kubernetes/pki/ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/ca.crt</span><br><span class="line">  scp /etc/kubernetes/pki/ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/ca.key</span><br><span class="line">  scp /etc/kubernetes/pki/sa.key <span class="variable">$ip</span>:/etc/kubernetes/pki/sa.key</span><br><span class="line">  scp /etc/kubernetes/pki/sa.pub <span class="variable">$ip</span>:/etc/kubernetes/pki/sa.pub</span><br><span class="line">  scp /etc/kubernetes/pki/front-proxy-ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/front-proxy-ca.crt</span><br><span class="line">  scp /etc/kubernetes/pki/front-proxy-ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/front-proxy-ca.key</span><br><span class="line">  scp /etc/kubernetes/pki/etcd/ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/etcd/ca.crt</span><br><span class="line">  scp /etc/kubernetes/pki/etcd/ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/etcd/ca.key</span><br><span class="line">  scp /etc/kubernetes/admin.conf <span class="variable">$ip</span>:/etc/kubernetes/admin.conf</span><br><span class="line">  scp /etc/kubernetes/admin.conf <span class="variable">$ip</span>:~/.kube/config</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="2-2-4-添加其它master到集群"><a href="#2-2-4-添加其它master到集群" class="headerlink" title="2.2.4. 添加其它master到集群"></a>2.2.4. 添加其它master到集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在master-1上执行</span></span><br><span class="line">JOIN_CMD=`kubeadm token create --<span class="built_in">print</span>-join-command`</span><br><span class="line">IPS=<span class="string">"192.168.65.52 192.168.65.53"</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$IPS</span>; <span class="keyword">do</span></span><br><span class="line">    ssh <span class="variable">$&#123;ip&#125;</span> <span class="string">"<span class="variable">$&#123;JOIN_CMD&#125;</span> --experimental-control-plane"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="2-2-5-配置kubectl客户端"><a href="#2-2-5-配置kubectl客户端" class="headerlink" title="2.2.5. 配置kubectl客户端"></a>2.2.5. 配置kubectl客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.kube</span><br><span class="line">mkdir ~/.kube -p</span><br><span class="line">cp /etc/kubernetes/admin.conf ~/.kube/</span><br></pre></td></tr></table></figure><h3 id="2-2-6-添加网络附件（Addons）"><a href="#2-2-6-添加网络附件（Addons）" class="headerlink" title="2.2.6. 添加网络附件（Addons）"></a>2.2.6. 添加网络附件（Addons）</h3><p>网络插件使用fannel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h2 id="2-3-node节点"><a href="#2-3-node节点" class="headerlink" title="2.3. node节点"></a>2.3. node节点</h2><p>添加至集群网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.65.60:6443 --token 7gu7nv.19uizr187qk5vy9q --discovery-token-ca-cert-hash sha256:9bafc6ccf27bcfba9620aa2e285de1434eacbc09337063cdcca6b56cda13270f</span><br></pre></td></tr></table></figure><h1 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a>3. 验证</h1><p>参见 <a href="http://blog.fanfengqiang.com/2019/01/25/kubernetes%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85/">kubernetesv1.13.2安装</a> </p><h1 id="4-一键安装脚本"><a href="#4-一键安装脚本" class="headerlink" title="4. 一键安装脚本"></a>4. 一键安装脚本</h1><h2 id="4-1-初始化脚本pre-install-sh"><a href="#4-1-初始化脚本pre-install-sh" class="headerlink" title="4.1. 初始化脚本pre_install.sh"></a>4.1. 初始化脚本pre_install.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################### SETING ############################################</span></span><br><span class="line"><span class="comment"># 所有节点密码必须一致</span></span><br><span class="line">PASSWORD=<span class="string">"666666"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置master节点IP地址（以空格分割,第一个必须是本机IP）</span></span><br><span class="line">MASTERS_IP=<span class="string">"192.168.65.51 192.168.65.52 192.168.65.53"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置node节点IP地址（可以设置多个以空格分割）</span></span><br><span class="line">NODES_IP=<span class="string">"192.168.65.54 192.168.65.55"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名后缀（默认为空）</span></span><br><span class="line">HOSTNAME_DOMIN=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################ FUNCTIONS ########################################</span></span><br><span class="line"><span class="function"><span class="title">config_nopasswd_login</span></span>() &#123;</span><br><span class="line"><span class="comment"># 首次登录不用输yes</span></span><br><span class="line">sed -i.bak <span class="string">'s/.*StrictHostKeyChecking.*/StrictHostKeyChecking no/'</span> /etc/ssh/ssh_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成秘钥对</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -f ~/.ssh/id_rsa ]];<span class="keyword">then</span></span><br><span class="line">    ssh-keygen -t rsa -P <span class="string">""</span> -f ~/.ssh/id_rsa</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">yum -y install expect</span><br><span class="line"></span><br><span class="line">password=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">shift</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$@</span> ;<span class="keyword">do</span></span><br><span class="line">    /usr/bin/expect &lt;&lt;-EOF</span><br><span class="line"><span class="built_in">set</span> time 30</span><br><span class="line">spawn ssh-copy-id root@<span class="variable">$host</span></span><br><span class="line">expect &#123;         </span><br><span class="line"><span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r\n"</span>; exp_continue&#125;  </span><br><span class="line"><span class="string">"*password:"</span> &#123; send <span class="string">"<span class="variable">$password</span>\r\n"</span> &#125;   </span><br><span class="line">&#125;  </span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################## MAIN LOOP ######################################</span></span><br><span class="line">MASTERS_IP=(<span class="variable">$&#123;MASTERS_IP&#125;</span>)</span><br><span class="line">config_nopasswd_login <span class="variable">$PASSWORD</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span> <span class="variable">$NODES_IP</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> `<span class="built_in">eval</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$MASTERS_IP</span> <span class="variable">$NODES_IP</span>"</span>`;<span class="keyword">do</span></span><br><span class="line">ssh <span class="variable">$host</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"># 关闭防火墙</span></span><br><span class="line"><span class="string">systemctl disable firewalld.service</span></span><br><span class="line"><span class="string">systemctl stop firewalld.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 关闭selinux</span></span><br><span class="line"><span class="string">setenforce 0</span></span><br><span class="line"><span class="string">sed -i.bak 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 关闭swap</span></span><br><span class="line"><span class="string">sed -ri '/^[^#]/s@(.*swap.*)@# \1@' /etc/fstab</span></span><br><span class="line"><span class="string">swapoff -a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 配置时间同步</span></span><br><span class="line"><span class="string">yum install -y ntpdate</span></span><br><span class="line"><span class="string">ntpdate -u ntp.api.bz</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 升级内核</span></span><br><span class="line"><span class="string">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br><span class="line"><span class="string">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br><span class="line"><span class="string">yum --enablerepo=elrepo-kernel install kernel-ml-devel kernel-ml -y</span></span><br><span class="line"><span class="string">grub2-set-default 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">num=1</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$host</span> master-<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span> &gt;&gt; /etc/hosts</span><br><span class="line">    ssh <span class="variable">$host</span> <span class="string">"hostnamectl set-hostname master-<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span>"</span></span><br><span class="line">    <span class="built_in">let</span> num++</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line">num=1</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$host</span> node-<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span> &gt;&gt; /etc/hosts</span><br><span class="line">    ssh <span class="variable">$host</span> <span class="string">"hostnamectl set-hostname node-<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span>"</span></span><br><span class="line">    <span class="built_in">let</span> num++</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> `<span class="built_in">eval</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;MASTERS_IP[@]&#125;</span> <span class="variable">$NODES_IP</span>"</span>`;<span class="keyword">do</span></span><br><span class="line">    scp /etc/hosts root@<span class="variable">$host</span>:/etc/hosts</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span>;<span class="keyword">do</span></span><br><span class="line">    ssh <span class="variable">$host</span> <span class="string">"reboot"</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> 1 2; <span class="keyword">do</span></span><br><span class="line">   host=<span class="variable">$&#123;MASTERS_IP[$&#123;index&#125;</span>]&#125;</span><br><span class="line">   ssh <span class="variable">$host</span> <span class="string">"reboot"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="4-2-安装脚本install-sh"><a href="#4-2-安装脚本install-sh" class="headerlink" title="4.2. 安装脚本install.sh"></a>4.2. 安装脚本install.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################### SETING ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置master节点IP地址（以空格分割,第一个必须是本机IP）</span></span><br><span class="line">MASTERS_IP=<span class="string">"192.168.65.51 192.168.65.52 192.168.65.53"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置apiserver的虚拟ip</span></span><br><span class="line">VIP=<span class="string">"192.168.65.60"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置node节点IP地址（可以设置多个以空格分割）</span></span><br><span class="line">NODES_IP=<span class="string">"192.168.65.54 192.168.65.55"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置kubrnetes版本</span></span><br><span class="line">VERSION=<span class="string">"v1.13.2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pod网络的cidr(默认为flannel)</span></span><br><span class="line">POD_CIDR=<span class="string">"10.244.0.0/16"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网卡名</span></span><br><span class="line">NET_IF=<span class="string">"eth0"</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">MASTERS_IP=(<span class="variable">$MASTERS_IP</span>)</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> `<span class="built_in">eval</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;MASTERS_IP[@]&#125;</span> <span class="variable">$NODES_IP</span>"</span>`;<span class="keyword">do</span></span><br><span class="line">ssh <span class="variable">$host</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"># 安装docker</span></span><br><span class="line"><span class="string"># step 1: 安装必要的一些系统工具</span></span><br><span class="line"><span class="string">yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"><span class="string"># Step 2: 添加软件源信息</span></span><br><span class="line"><span class="string">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="string"># Step 3: 更新并安装 Docker-CE</span></span><br><span class="line"><span class="string">yum makecache fast</span></span><br><span class="line"><span class="string">yum -y install docker-ce-18.06.1.ce-3.el7</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 取消docker启动后iptables转发限制</span></span><br><span class="line"><span class="string">mkdir -p /lib/systemd/system/docker.service.d</span></span><br><span class="line"><span class="string">cat &gt;/lib/systemd/system/docker.service.d/iptables.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">mkdir -p /etc/docker/</span></span><br><span class="line"><span class="string"># cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span></span><br><span class="line"><span class="string"># &#123;</span></span><br><span class="line"><span class="string">#     \"registry-mirrors\": [\"https://hub-mirror.c.163.com"</span>,<span class="string">"https://docker.mirrors.ustc.edu.cn\"],</span></span><br><span class="line"><span class="string">#     \"max-concurrent-downloads\": 20</span></span><br><span class="line"><span class="string"># &#125;</span></span><br><span class="line"><span class="string"># EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cat &gt;/lib/systemd/system/docker.service.d/http_proxy.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Environment=\"HTTP_PROXY=http://192.168.65.26:8118/\"       #代理服务器地址</span></span><br><span class="line"><span class="string">Environment=\"HTTPS_PROXY=http://192.168.65.26:8118/\"     #https</span></span><br><span class="line"><span class="string">Environment=\"NO_PROXY=localhost,127.0.0.0/8,10.0.0.0/8,172.21.0.0/12,192.168.0.0/16,docker-registry.somecorporation.com,docker.mirrors.ustc.edu.cn,hub-mirror.c.163.com\"    #哪些地址不需要走代理</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">systemctl daemon-reload</span></span><br><span class="line"><span class="string">systemctl enable docker.service</span></span><br><span class="line"><span class="string">systemctl start docker.service</span></span><br><span class="line"><span class="string">systemctl restart docker.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 安装kubeadm，kubectl，kubelete</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">setenforce 0</span></span><br><span class="line"><span class="string">yum install -y kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">systemctl enable kubelet </span></span><br><span class="line"><span class="string">systemctl start kubelet</span></span><br><span class="line"><span class="string">systemctl restart kubelet</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 加载内核模块</span></span><br><span class="line"><span class="string">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">ipvs_modules=\"ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4\"</span></span><br><span class="line"><span class="string">for kernel_module in \$&#123;ipvs_modules&#125;; do</span></span><br><span class="line"><span class="string">    /sbin/modinfo -F filename \$&#123;kernel_module&#125; &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="string">    if [ $? -eq 0 ]; then</span></span><br><span class="line"><span class="string">        /sbin/modprobe \$&#123;kernel_module&#125;</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">chmod 755 /etc/sysconfig/modules/ipvs.modules </span></span><br><span class="line"><span class="string">bash /etc/sysconfig/modules/ipvs.modules</span></span><br><span class="line"><span class="string">lsmod | grep ip_vs</span></span><br><span class="line"><span class="string">yum install -y ipvsadm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 配置内核参数</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">vm.swappiness = 0</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">#生效配置文件</span></span><br><span class="line"><span class="string">sysctl -p /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#############################################################################</span></span><br><span class="line"><span class="comment"># 配置VIP&amp;keepalive</span></span><br><span class="line">PRIORITY=<span class="string">""</span></span><br><span class="line">prio=100</span><br><span class="line">STATE=<span class="string">""</span></span><br><span class="line">HEALTH_CHECK=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  ssh root@<span class="variable">$&#123;ip&#125;</span> <span class="string">"yum install -y keepalived"</span></span><br><span class="line">  HEALTH_CHECK=<span class="variable">$&#123;HEALTH_CHECK&#125;</span><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    real_server <span class="variable">$&#123;ip&#125;</span> 6443 &#123;</span></span><br><span class="line"><span class="string">        weight 1</span></span><br><span class="line"><span class="string">        SSL_GET &#123;</span></span><br><span class="line"><span class="string">            url &#123;</span></span><br><span class="line"><span class="string">              path /healthz</span></span><br><span class="line"><span class="string">              status_code 200</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            connect_timeout 3</span></span><br><span class="line"><span class="string">            nb_get_retry 3</span></span><br><span class="line"><span class="string">            delay_before_retry 3</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$prio</span> -eq <span class="string">"100"</span> ]];<span class="keyword">then</span></span><br><span class="line">    STATE=<span class="string">"<span class="variable">$&#123;STATE&#125;</span> MASTER"</span></span><br><span class="line"><span class="keyword">else</span>    </span><br><span class="line">    STATE=<span class="string">"<span class="variable">$&#123;STATE&#125;</span> BACKUP"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">PRIORITY=<span class="string">"<span class="variable">$PRIORITY</span> <span class="variable">$&#123;prio&#125;</span>"</span></span><br><span class="line"><span class="built_in">let</span> prio=<span class="variable">$&#123;prio&#125;</span>-10</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">STATE=(<span class="variable">$STATE</span>)</span><br><span class="line">PRIORITY=(<span class="variable">$PRIORITY</span>)</span><br><span class="line">index=<span class="string">"0"</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id LVS_DEVEL</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state <span class="variable">$&#123;STATE[$&#123;index&#125;</span>]&#125;</span></span><br><span class="line"><span class="string">    interface <span class="variable">$&#123;NET_IF&#125;</span></span></span><br><span class="line"><span class="string">    virtual_router_id 80</span></span><br><span class="line"><span class="string">    priority <span class="variable">$&#123;PRIORITY[$&#123;index&#125;</span>]&#125;</span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass just0kk</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        <span class="variable">$&#123;VIP&#125;</span></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">virtual_server <span class="variable">$&#123;VIP&#125;</span> 6443 &#123;</span></span><br><span class="line"><span class="string">    delay_loop 6</span></span><br><span class="line"><span class="string">    lb_algo loadbalance</span></span><br><span class="line"><span class="string">    lb_kind DR</span></span><br><span class="line"><span class="string">    nat_mask 255.255.255.0</span></span><br><span class="line"><span class="string">    persistence_timeout 0</span></span><br><span class="line"><span class="string">    protocol TCP</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="variable">$&#123;HEALTH_CHECK&#125;</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; ~/keepalived-<span class="variable">$&#123;index&#125;</span>.conf</span><br><span class="line">  scp ~/keepalived-<span class="variable">$&#123;index&#125;</span>.conf <span class="variable">$&#123;ip&#125;</span>:/etc/keepalived/keepalived.conf</span><br><span class="line">  ssh <span class="variable">$&#123;ip&#125;</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    systemctl stop keepalived</span></span><br><span class="line"><span class="string">    systemctl enable keepalived</span></span><br><span class="line"><span class="string">    systemctl start keepalived</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">  <span class="built_in">let</span> index++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 初始化maser-1</span></span><br><span class="line">CERT_SANS=<span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">  - <span class="variable">$VIP</span></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span> ;<span class="keyword">do</span></span><br><span class="line">CERT_SANS=<span class="variable">$&#123;CERT_SANS&#125;</span><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">  - <span class="variable">$ip</span></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">apiVersion: kubeadm.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">kind: ClusterConfiguration</span></span><br><span class="line"><span class="string">kubernetesVersion:  <span class="variable">$VERSION</span></span></span><br><span class="line"><span class="string">controlPlaneEndpoint: "</span><span class="variable">$&#123;VIP&#125;</span>:6443<span class="string">"</span></span><br><span class="line"><span class="string">apiServer:</span></span><br><span class="line"><span class="string">  certSANs:</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;CERT_SANS&#125;</span></span></span><br><span class="line"><span class="string">networking:</span></span><br><span class="line"><span class="string">  # This CIDR is a Calico default. Substitute or remove for your CNI provider.</span></span><br><span class="line"><span class="string">  podSubnet: <span class="variable">$POD_CIDR</span></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line">kubeadm init --config /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在master-1上执行</span></span><br><span class="line">JOIN_CMD=`kubeadm token create --<span class="built_in">print</span>-join-command`</span><br><span class="line">index=<span class="string">"0"</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$&#123;MASTERS_IP[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;index&#125;</span> -ne <span class="string">"0"</span> ]];<span class="keyword">then</span></span><br><span class="line">        ssh <span class="variable">$ip</span> <span class="string">"mkdir -p /etc/kubernetes/pki/etcd; mkdir -p ~/.kube/"</span></span><br><span class="line">        scp /etc/kubernetes/pki/ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/ca.crt</span><br><span class="line">        scp /etc/kubernetes/pki/ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/ca.key</span><br><span class="line">        scp /etc/kubernetes/pki/sa.key <span class="variable">$ip</span>:/etc/kubernetes/pki/sa.key</span><br><span class="line">        scp /etc/kubernetes/pki/sa.pub <span class="variable">$ip</span>:/etc/kubernetes/pki/sa.pub</span><br><span class="line">        scp /etc/kubernetes/pki/front-proxy-ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/front-proxy-ca.crt</span><br><span class="line">        scp /etc/kubernetes/pki/front-proxy-ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/front-proxy-ca.key</span><br><span class="line">        scp /etc/kubernetes/pki/etcd/ca.crt <span class="variable">$ip</span>:/etc/kubernetes/pki/etcd/ca.crt</span><br><span class="line">        scp /etc/kubernetes/pki/etcd/ca.key <span class="variable">$ip</span>:/etc/kubernetes/pki/etcd/ca.key</span><br><span class="line">        scp /etc/kubernetes/admin.conf <span class="variable">$ip</span>:/etc/kubernetes/admin.conf</span><br><span class="line">        scp /etc/kubernetes/admin.conf <span class="variable">$ip</span>:~/.kube/config</span><br><span class="line">        </span><br><span class="line">        ssh <span class="variable">$&#123;ip&#125;</span> <span class="string">"<span class="variable">$&#123;JOIN_CMD&#125;</span> --experimental-control-plane"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">let</span> index++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -rf ~/.kube</span><br><span class="line">mkdir ~/.kube -p</span><br><span class="line">cp /etc/kubernetes/admin.conf ~/.kube/</span><br><span class="line"></span><br><span class="line">curl -fsSL https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml|sed  <span class="string">"s@10.244.0.0/16@<span class="variable">$&#123;POD_CIDR&#125;</span>@"</span>| kubectl apply -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加node节点到集群</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span> ;<span class="keyword">do</span></span><br><span class="line">    ssh root@<span class="variable">$host</span> <span class="string">"<span class="variable">$join_cmd</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"HAPPY K8S..."</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-配置基础环境&quot;&gt;&lt;a href=&quot;#1-配置基础环境&quot; class=&quot;headerlink&quot; title=&quot;1. 配置基础环境&quot;&gt;&lt;/a&gt;1. 配置基础环境&lt;/h1&gt;&lt;p&gt;参见 &lt;a href=&quot;http://blog.fanfengqiang.com/201
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes v1.13.2安装</title>
    <link href="https://blog.fanfengqiang.com/2019/01/25/kubernetes%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.fanfengqiang.com/2019/01/25/kubernetes简单安装/</id>
    <published>2019-01-25T09:13:29.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes简单安装"><a href="#kubernetes简单安装" class="headerlink" title="kubernetes简单安装"></a>kubernetes简单安装</h1><h2 id="1-配置基础环境"><a href="#1-配置基础环境" class="headerlink" title="1. 配置基础环境"></a>1. 配置基础环境</h2><h3 id="1-0-配置要求"><a href="#1-0-配置要求" class="headerlink" title="1.0. 配置要求"></a>1.0. 配置要求</h3><p>centos7操作系统且已安装epel源</p><h3 id="1-1-关闭防火墙"><a href="#1-1-关闭防火墙" class="headerlink" title="1.1. 关闭防火墙"></a>1.1. 关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service </span><br><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h3 id="1-2-关闭selinux"><a href="#1-2-关闭selinux" class="headerlink" title="1.2. 关闭selinux"></a>1.2. 关闭selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i.bak <span class="string">'s/^SELINUX=.*/SELINUX=disabled/'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="1-3-关闭swap"><a href="#1-3-关闭swap" class="headerlink" title="1.3. 关闭swap"></a>1.3. 关闭swap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -ri <span class="string">'/^[^#]/s@(.*swap.*)@# \1@'</span> /etc/fstab</span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><h3 id="1-4-配置时间同步"><a href="#1-4-配置时间同步" class="headerlink" title="1.4. 配置时间同步"></a>1.4. 配置时间同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">yum install -y ntpdate</span><br><span class="line">ntpdate -u ntp.api.bz</span><br></pre></td></tr></table></figure><h3 id="1-5-升级内核"><a href="#1-5-升级内核" class="headerlink" title="1.5. 升级内核"></a>1.5. 升级内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级内核</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm </span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml-devel kernel-ml -y</span><br><span class="line">grub2-set-default 0</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="1-6-安装docker"><a href="#1-6-安装docker" class="headerlink" title="1.6. 安装docker"></a>1.6. 安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># Step 2: 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># Step 3: 更新并安装 Docker-CE</span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce-18.06.1.ce-3.el7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，你可以通过以下方式开启。同理可以开启各种测试版本等。</span></span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="comment">#   将 [docker-ce-test] 下方的 enabled=0 修改为 enabled=1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="comment"># Step 1: 查找Docker-CE的版本:</span></span><br><span class="line"><span class="comment"># yum list docker-ce.x86_64 --showduplicates | sort -r</span></span><br><span class="line"><span class="comment">#   Loading mirror speeds from cached hostfile</span></span><br><span class="line"><span class="comment">#   Loaded plugins: branch, fastestmirror, langpacks</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span></span><br><span class="line"><span class="comment">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="comment">#   Available Packages</span></span><br><span class="line"><span class="comment"># Step2 : 安装指定版本的Docker-CE: (VERSION 例如上面的 17.03.0.ce.1-1.el7.centos)</span></span><br><span class="line"><span class="comment"># sudo yum -y install docker-ce-[VERSION]</span></span><br></pre></td></tr></table></figure><h3 id="1-7-取消docker启动后iptables转发限制"><a href="#1-7-取消docker启动后iptables转发限制" class="headerlink" title="1.7. 取消docker启动后iptables转发限制"></a>1.7. 取消docker启动后iptables转发限制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /lib/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line">cat &gt;/lib/systemd/system/docker.service.d/iptables.conf &lt;&lt; EOF</span><br><span class="line">[Service]</span><br><span class="line">ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT</span><br><span class="line">EOF</span><br><span class="line">mkdir -p /etc/docker/</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"registry-mirrors"</span>: [<span class="string">"https://hub-mirror.c.163.com"</span>,<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>],</span><br><span class="line">    <span class="string">"max-concurrent-downloads"</span>: 20</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><h3 id="1-8-配置docker代理-可选"><a href="#1-8-配置docker代理-可选" class="headerlink" title="1.8. 配置docker代理(可选)"></a>1.8. 配置docker代理(可选)</h3><p>因为kubernetes组件容器无法直接获取，可以为docker配置http代理，本示例http代理地址<a href="http://192.168.65.26:8118。此步骤为可选项，可以通过docker" target="_blank" rel="noopener">http://192.168.65.26:8118。此步骤为可选项，可以通过docker</a> hub镜像代理预拉镜像重新打tag完成部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/lib/systemd/system/docker.service.d/http_proxy.conf &lt;&lt; EOF</span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"HTTP_PROXY=http://192.168.65.26:8118/"</span>       <span class="comment">#代理服务器地址</span></span><br><span class="line">Environment=<span class="string">"HTTPS_PROXY=http://192.168.65.26:8118/"</span>     <span class="comment">#https</span></span><br><span class="line">Environment=<span class="string">"NO_PROXY=localhost,127.0.0.0/8,10.0.0.0/8,172.21.0.0/12,192.168.0.0/16,docker-registry.somecorporation.com,docker.mirrors.ustc.edu.cn,hub-mirror.c.163.com"</span>    <span class="comment">#哪些地址不需要走代理</span></span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><h3 id="1-9-安装kubeadm，kubectl，kubelete"><a href="#1-9-安装kubeadm，kubectl，kubelete" class="headerlink" title="1.9. 安装kubeadm，kubectl，kubelete"></a>1.9. 安装kubeadm，kubectl，kubelete</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">setenforce 0</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure><p>加载内核模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ipvs_modules=<span class="string">"ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4"</span></span><br><span class="line"><span class="keyword">for</span> kernel_module <span class="keyword">in</span> \<span class="variable">$&#123;ipvs_modules&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    /sbin/modinfo -F filename \<span class="variable">$&#123;kernel_module&#125;</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        /sbin/modprobe \<span class="variable">$&#123;kernel_module&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line">chmod 755 /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">bash /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">lsmod | grep ip_vs</span><br><span class="line">yum install -y ipvsadm</span><br></pre></td></tr></table></figure><h2 id="2-安装kubernetes集群"><a href="#2-安装kubernetes集群" class="headerlink" title="2. 安装kubernetes集群"></a>2. 安装kubernetes集群</h2><h3 id="2-1-master节点"><a href="#2-1-master节点" class="headerlink" title="2.1. master节点"></a>2.1. master节点</h3><h4 id="2-1-1-拉取kuberntes镜像（可选）"><a href="#2-1-1-拉取kuberntes镜像（可选）" class="headerlink" title="2.1.1. 拉取kuberntes镜像（可选）"></a>2.1.1. 拉取kuberntes镜像（可选）</h4><p>如果没有配置docker代理，并且无法进行科学上网的情况下可以使用此步骤。（强烈建立配置代理）</p><p>拉取docker hub代理节点（<a href="https://hub.docker.com/u/mirrorgooglecontainers）的镜像并重新打tag" target="_blank" rel="noopener">https://hub.docker.com/u/mirrorgooglecontainers）的镜像并重新打tag</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VERSION=v1.13.2</span><br><span class="line">images=`kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> `kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>` ;<span class="keyword">do</span> </span><br><span class="line">    docker pull mirrorgooglecontainers/<span class="variable">$image</span></span><br><span class="line">    docker tag mirrorgooglecontainers/<span class="variable">$image</span> k8s.gcr.io/<span class="variable">$image</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">image=`kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>|grep coredns`</span><br><span class="line">docker pull coredns/<span class="variable">$image</span></span><br><span class="line">docker tag coredns/<span class="variable">$image</span> k8s.gcr.io/<span class="variable">$image</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-调整内核参数"><a href="#2-1-2-调整内核参数" class="headerlink" title="2.1.2. 调整内核参数"></a>2.1.2. 调整内核参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写入配置文件</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">#生效配置文件</span></span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure><h4 id="2-1-3-初始化master节点"><a href="#2-1-3-初始化master节点" class="headerlink" title="2.1.3. 初始化master节点"></a>2.1.3. 初始化master节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">apiVersion: kubeadm.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">kind: ClusterConfiguration</span></span><br><span class="line"><span class="string">kubernetesVersion: v1.13.2</span></span><br><span class="line"><span class="string">networking:</span></span><br><span class="line"><span class="string">  # This CIDR is a Calico default. Substitute or remove for your CNI provider.</span></span><br><span class="line"><span class="string">  podSubnet: 10.244.0.0/16</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="string">kind: KubeProxyConfiguration</span></span><br><span class="line"><span class="string">mode: ipvs</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line">kubeadm init --config /etc/kubernetes/kubeadm-config.yaml</span><br></pre></td></tr></table></figure><p>pod-network-cidr 10.224.0.0/16后面安装的网络插件对此有依赖</p><h4 id="3-1-4-配置kubectl客户端"><a href="#3-1-4-配置kubectl客户端" class="headerlink" title="3.1.4. 配置kubectl客户端"></a>3.1.4. 配置kubectl客户端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.kube</span><br><span class="line">mkdir ~/.kube -p</span><br><span class="line">cp /etc/kubernetes/admin.conf ~/.kube/</span><br></pre></td></tr></table></figure><p>确保上述代码在使用kubectl命令前执行</p><h4 id="2-1-5-添加网络附件（Addons）"><a href="#2-1-5-添加网络附件（Addons）" class="headerlink" title="2.1.5. 添加网络附件（Addons）"></a>2.1.5. 添加网络附件（Addons）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="2-2-nodes节点"><a href="#2-2-nodes节点" class="headerlink" title="2.2. nodes节点"></a>2.2. nodes节点</h3><p>添加至集群网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 10.2.2.1:6443 --token 7gu7nv.19uizr187qk5vy9q --discovery-token-ca-cert-hash sha256:9bafc6ccf27bcfba9620aa2e285de1434eacbc09337063cdcca6b56cda13270f</span><br></pre></td></tr></table></figure><h2 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a>3. 验证</h2><p>在master上执行以下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get componentstatus</span><br><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><h2 id="4-一键安装脚本"><a href="#4-一键安装脚本" class="headerlink" title="4. 一键安装脚本"></a>4. 一键安装脚本</h2><h3 id="4-1-初始化脚本pre-install-sh"><a href="#4-1-初始化脚本pre-install-sh" class="headerlink" title="4.1. 初始化脚本pre_install.sh"></a>4.1. 初始化脚本pre_install.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################### SETING ############################################</span></span><br><span class="line"><span class="comment"># 所有节点密码必须一致</span></span><br><span class="line">PASSWORD=<span class="string">"666666"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置master节点IP地址（只能写一个）</span></span><br><span class="line">MASTER_IP=<span class="string">"192.168.65.101"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置node节点IP地址（可以设置多个以空格分割）</span></span><br><span class="line">NODES_IP=<span class="string">"192.168.65.103"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名后缀（默认为空）</span></span><br><span class="line">HOSTNAME_DOMIN=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################ FUNCTIONS ########################################</span></span><br><span class="line"><span class="function"><span class="title">config_nopasswd_login</span></span>() &#123;</span><br><span class="line"><span class="comment"># 首次登录不用输yes</span></span><br><span class="line">sed -i.bak <span class="string">'s/.*StrictHostKeyChecking.*/StrictHostKeyChecking no/'</span> /etc/ssh/ssh_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成秘钥对</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">""</span> -f ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">yum -y install expect</span><br><span class="line"></span><br><span class="line">password=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">shift</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$@</span> ;<span class="keyword">do</span></span><br><span class="line">    /usr/bin/expect &lt;&lt;-EOF</span><br><span class="line"><span class="built_in">set</span> time 30</span><br><span class="line">spawn ssh-copy-id root@<span class="variable">$host</span></span><br><span class="line">expect &#123;         </span><br><span class="line"><span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r\n"</span>; exp_continue&#125;  </span><br><span class="line"><span class="string">"*password:"</span> &#123; send <span class="string">"<span class="variable">$password</span>\r\n"</span> &#125;   </span><br><span class="line">&#125;  </span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################## MAIN LOOP ######################################</span></span><br><span class="line"></span><br><span class="line">config_nopasswd_login <span class="variable">$PASSWORD</span> <span class="variable">$MASTER_IP</span> <span class="variable">$NODES_IP</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> `<span class="built_in">eval</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$MASTER_IP</span> <span class="variable">$NODES_IP</span>"</span>`;<span class="keyword">do</span></span><br><span class="line">ssh <span class="variable">$host</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"># 关闭防火墙</span></span><br><span class="line"><span class="string">systemctl disable firewalld.service</span></span><br><span class="line"><span class="string">systemctl stop firewalld.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 关闭selinux</span></span><br><span class="line"><span class="string">setenforce 0</span></span><br><span class="line"><span class="string">sed -i.bak 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 关闭swap</span></span><br><span class="line"><span class="string">sed -ri '/^[^#]/s@(.*swap.*)@# \1@' /etc/fstab</span></span><br><span class="line"><span class="string">swapoff -a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 配置时间同步</span></span><br><span class="line"><span class="string">yum install -y ntpdate</span></span><br><span class="line"><span class="string">ntpdate -u ntp.api.bz</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 升级内核</span></span><br><span class="line"><span class="string">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br><span class="line"><span class="string">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br><span class="line"><span class="string">yum --enablerepo=elrepo-kernel install kernel-ml-devel kernel-ml -y</span></span><br><span class="line"><span class="string">grub2-set-default 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$MASTER_IP</span> master<span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span> &gt;&gt; /etc/hosts</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname master<span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span></span><br><span class="line">num=1</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$host</span> node<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span> &gt;&gt; /etc/hosts</span><br><span class="line">    ssh <span class="variable">$host</span> <span class="string">"hostnamectl set-hostname node<span class="variable">$&#123;num&#125;</span><span class="variable">$&#123;HOSTNAME_DOMIN&#125;</span>"</span></span><br><span class="line">    <span class="built_in">let</span> num++</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span>;<span class="keyword">do</span></span><br><span class="line">    scp /etc/hosts root@<span class="variable">$host</span>:/etc/hosts</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span>;<span class="keyword">do</span></span><br><span class="line">ssh <span class="variable">$host</span> <span class="string">"reboot"</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="4-2-安装脚本install-sh"><a href="#4-2-安装脚本install-sh" class="headerlink" title="4.2. 安装脚本install.sh"></a>4.2. 安装脚本install.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################### SETING ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置master节点IP地址（只能写一个）</span></span><br><span class="line">MASTER_IP=<span class="string">"192.168.65.101"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置node节点IP地址（可以设置多个以空格分割）</span></span><br><span class="line">NODES_IP=<span class="string">"192.168.65.103"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置kubrnetes版本</span></span><br><span class="line">VERSION=<span class="string">"v1.13.2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pod网络的cidr(默认为flannel)</span></span><br><span class="line">POD_CIDR=<span class="string">"10.244.0.0/16"</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> `<span class="built_in">eval</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$MASTER_IP</span> <span class="variable">$NODES_IP</span>"</span>`;<span class="keyword">do</span></span><br><span class="line">ssh <span class="variable">$host</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"># 安装docker</span></span><br><span class="line"><span class="string"># step 1: 安装必要的一些系统工具</span></span><br><span class="line"><span class="string">yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"><span class="string"># Step 2: 添加软件源信息</span></span><br><span class="line"><span class="string">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="string"># Step 3: 更新并安装 Docker-CE</span></span><br><span class="line"><span class="string">yum makecache fast</span></span><br><span class="line"><span class="string">yum -y install docker-ce-18.06.1.ce-3.el7</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 取消docker启动后iptables转发限制</span></span><br><span class="line"><span class="string">mkdir -p /lib/systemd/system/docker.service.d</span></span><br><span class="line"><span class="string">cat &gt;/lib/systemd/system/docker.service.d/iptables.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">mkdir -p /etc/docker/</span></span><br><span class="line"><span class="string">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    \"registry-mirrors\": [\"https://hub-mirror.c.163.com"</span>,<span class="string">"https://docker.mirrors.ustc.edu.cn\"],</span></span><br><span class="line"><span class="string">    \"max-concurrent-downloads\": 20</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">systemctl daemon-reload</span></span><br><span class="line"><span class="string">systemctl enable docker.service</span></span><br><span class="line"><span class="string">systemctl start docker.service || systemctl restart docker.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 安装kubeadm，kubectl，kubelete</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">setenforce 0</span></span><br><span class="line"><span class="string">yum install -y kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">systemctl enable kubelet</span></span><br><span class="line"><span class="string"> systemctl start kubelet || systemctl start kubelet</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 加载内核模块</span></span><br><span class="line"><span class="string">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">ipvs_modules=\"ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack_ipv4\"</span></span><br><span class="line"><span class="string">for kernel_module in \$&#123;ipvs_modules&#125;; do</span></span><br><span class="line"><span class="string">    /sbin/modinfo -F filename \$&#123;kernel_module&#125; &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="string">    if [ $? -eq 0 ]; then</span></span><br><span class="line"><span class="string">        /sbin/modprobe \$&#123;kernel_module&#125;</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">chmod 755 /etc/sysconfig/modules/ipvs.modules </span></span><br><span class="line"><span class="string">bash /etc/sysconfig/modules/ipvs.modules</span></span><br><span class="line"><span class="string">lsmod | grep ip_vs</span></span><br><span class="line"><span class="string">yum install -y ipvsadm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 配置内核参数</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">vm.swappiness = 0</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">#生效配置文件</span></span><br><span class="line"><span class="string">sysctl -p /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">images=`kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> `kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>` ;<span class="keyword">do</span> </span><br><span class="line">    docker pull mirrorgooglecontainers/<span class="variable">$image</span></span><br><span class="line">    docker tag mirrorgooglecontainers/<span class="variable">$image</span> k8s.gcr.io/<span class="variable">$image</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">image=`kubeadm --kubernetes-version=<span class="variable">$VERSION</span> config images list|awk -v FS=<span class="string">'/'</span> <span class="string">'&#123;print $2&#125;'</span>|grep coredns`</span><br><span class="line">docker pull coredns/<span class="variable">$image</span></span><br><span class="line">docker tag coredns/<span class="variable">$image</span> k8s.gcr.io/<span class="variable">$image</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化maser</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">apiVersion: kubeadm.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">kind: ClusterConfiguration</span></span><br><span class="line"><span class="string">kubernetesVersion: <span class="variable">$VERSION</span></span></span><br><span class="line"><span class="string">networking:</span></span><br><span class="line"><span class="string">  # This CIDR is a Calico default. Substitute or remove for your CNI provider.</span></span><br><span class="line"><span class="string">  podSubnet: <span class="variable">$POD_CIDR</span></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="string">kind: KubeProxyConfiguration</span></span><br><span class="line"><span class="string">mode: ipvs</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span> &gt; /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line">kubeadm init --config /etc/kubernetes/kubeadm-config.yaml</span><br><span class="line"></span><br><span class="line">rm -rf ~/.kube</span><br><span class="line">mkdir ~/.kube -p</span><br><span class="line">cp /etc/kubernetes/admin.conf ~/.kube/</span><br><span class="line"></span><br><span class="line">curl -fsSL https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml|sed  <span class="string">"s@10.244.0.0/16@<span class="variable">$&#123;POD_CIDR&#125;</span>@"</span>| kubectl apply -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加node节点到集群</span></span><br><span class="line">images=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> k8s.gcr.io/kube-proxy k8s.gcr.io/coredns k8s.gcr.io/pause;<span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    image=`docker images|grep <span class="variable">$line</span> |awk <span class="string">'&#123;print $3&#125;'</span>|xargs`</span><br><span class="line">    images=<span class="string">"<span class="variable">$images</span> <span class="variable">$image</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">docker save <span class="variable">$images</span> -o ~/node_images</span><br><span class="line"></span><br><span class="line">join_cmd=`kubeadm token create --<span class="built_in">print</span>-join-command`</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$NODES_IP</span> ;<span class="keyword">do</span></span><br><span class="line">    scp ~/node_images root@<span class="variable">$host</span>:/root/node_images</span><br><span class="line">    ssh root@<span class="variable">$host</span> <span class="string">"docker load &lt; /root/node_images"</span></span><br><span class="line">    ssh root@<span class="variable">$host</span> <span class="string">"<span class="variable">$join_cmd</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kubernetes简单安装&quot;&gt;&lt;a href=&quot;#kubernetes简单安装&quot; class=&quot;headerlink&quot; title=&quot;kubernetes简单安装&quot;&gt;&lt;/a&gt;kubernetes简单安装&lt;/h1&gt;&lt;h2 id=&quot;1-配置基础环境&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
      <category term="kubernets" scheme="https://blog.fanfengqiang.com/tags/kubernets/"/>
    
  </entry>
  
  <entry>
    <title>glusterfs作为kubernetes后端storageclass</title>
    <link href="https://blog.fanfengqiang.com/2018/12/26/glusterfs%E4%BD%9C%E4%B8%BAkubernetes%E5%90%8E%E7%AB%AFstorageclass/"/>
    <id>https://blog.fanfengqiang.com/2018/12/26/glusterfs作为kubernetes后端storageclass/</id>
    <published>2018-12-26T05:52:37.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装glusterfs集群"><a href="#1-安装glusterfs集群" class="headerlink" title="1.安装glusterfs集群"></a>1.安装glusterfs集群</h1><h2 id="1-1-环境说明"><a href="#1-1-环境说明" class="headerlink" title="1.1.环境说明"></a>1.1.环境说明</h2><p>3台机器安装 GlusterFS 组成一个 Distributed Replicated Volumes集群</p><p>服务清单：</p><table><thead><tr><th>主机名</th><th>ip</th><th>安装组件</th></tr></thead><tbody><tr><td>node1</td><td>192.168.65.26</td><td>glusterfs glusterfs-server glusterfs-fuse glusterfs-rdma heketi heketi-client</td></tr><tr><td>node2</td><td>192.168.65.26</td><td>glusterfs glusterfs-server glusterfs-fuse glusterfs-rdma</td></tr><tr><td>node3</td><td>192.168.65.26</td><td>glusterfs glusterfs-server glusterfs-fuse glusterfs-rdma</td></tr></tbody></table><p>配置/etc/hosts解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"></span><br><span class="line">192.168.65.26   node1</span><br><span class="line">192.168.65.27   node2</span><br><span class="line">192.168.65.28   node3</span><br></pre></td></tr></table></figure><h2 id="1-2-安装glusterfs服务端"><a href="#1-2-安装glusterfs服务端" class="headerlink" title="1.2.安装glusterfs服务端"></a>1.2.安装glusterfs服务端</h2><h3 id="1-2-1-准备工作"><a href="#1-2-1-准备工作" class="headerlink" title="1.2.1.准备工作"></a>1.2.1.准备工作</h3><p>关闭iptables和selinux</p><h3 id="1-2-2-安装glusterFS服务器"><a href="#1-2-2-安装glusterFS服务器" class="headerlink" title="1.2.2.安装glusterFS服务器"></a>1.2.2.安装glusterFS服务器</h3><p>每台服务器都安装glusterFS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-gluster</span><br><span class="line">yum install -y glusterfs glusterfs-server glusterfs-fuse glusterfs-rdma</span><br></pre></td></tr></table></figure><h3 id="1-2-3-启动"><a href="#1-2-3-启动" class="headerlink" title="1.2.3.启动"></a>1.2.3.启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start glusterd</span><br><span class="line">systemctl <span class="built_in">enable</span> glusterd</span><br></pre></td></tr></table></figure><h3 id="1-2-4-加入-trusted-storage-pool"><a href="#1-2-4-加入-trusted-storage-pool" class="headerlink" title="1.2.4.加入 trusted storage pool"></a>1.2.4.加入 trusted storage pool</h3><p>在任意节点执行 gluster peer probe其它节点（只运行一次）</p><p>在node1执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gluster peer probe node2</span><br><span class="line">gluster peer probe node3</span><br></pre></td></tr></table></figure><p>查看节点信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster peer status</span><br></pre></td></tr></table></figure><p>在各节点执行可以看到其它节点信息</p><h3 id="1-2-5-创建Volumes（可选）"><a href="#1-2-5-创建Volumes（可选）" class="headerlink" title="1.2.5.创建Volumes（可选）"></a>1.2.5.创建Volumes（可选）</h3><p>在各节点创建glusterfs存储目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /gluster/data&#123;1,2&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-5-1-创建分布式复制卷："><a href="#1-2-5-1-创建分布式复制卷：" class="headerlink" title="1.2.5.1.创建分布式复制卷："></a>1.2.5.1.创建分布式复制卷：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create vol1 replica 2 transport tcp node1:/gluster/data1 node2:/gluster/data1 node3:/gluster/data1 node1:/gluster/data2 node2:/gluster/data2 node3:/gluster/data2</span><br></pre></td></tr></table></figure><p>GlusterFS 几种volume 模式说明：</p><ul><li>一、 Distributed Volumes，默认模式，DHT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume server1:/exp1 server2:/exp2 server3:/exp3 server4:/exp4</span><br></pre></td></tr></table></figure><ul><li>二、 Replicated Volumes，复制模式，AFR</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume replica 2 transport tcp server1:/exp1 server2:/exp2</span><br></pre></td></tr></table></figure><p>避免脑裂，加入仲裁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create replica 3 arbiter 1 host1:brick1 host2:brick2 host3:brick3</span><br></pre></td></tr></table></figure><ul><li>三、Striped Volumes</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume stripe 2 transport tcp server1:/exp1 server2:/exp2</span><br></pre></td></tr></table></figure><ul><li>四、Distributed Striped Volumes，最少需要4台服务器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume stripe 4 transport tcp server1:/exp1 server2:/exp2 server3:/exp3 server4:/exp4 server5:/exp5 server6:/exp6 server7:/exp7 server8:/exp8</span><br></pre></td></tr></table></figure><ul><li>五、Distributed Replicated Volumes，最少需要4台服务器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume replica 2 transport tcp server1:/exp1 server2:/exp2 server3:/exp3 server4:/exp4</span><br></pre></td></tr></table></figure><ul><li>六、Distributed Striped Replicated Volumes</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume stripe 2 replica 2 transport tcp server1:/exp1 server2:/exp2 server3:/exp3 server4:/exp4 server5:/exp5 server6:/exp6 server7:/exp7 server8:/exp8</span><br></pre></td></tr></table></figure><ul><li>七、Striped Replicated Volumes</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume create <span class="built_in">test</span>-volume stripe 2 replica 2 transport tcp server1:/exp1 server2:/exp2 server3:/exp3 server4:/exp4</span><br></pre></td></tr></table></figure><h4 id="1-2-5-2-启动卷"><a href="#1-2-5-2-启动卷" class="headerlink" title="1.2.5.2.启动卷"></a>1.2.5.2.启动卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume start vol1</span><br></pre></td></tr></table></figure><h4 id="1-2-5-3-查看卷"><a href="#1-2-5-3-查看卷" class="headerlink" title="1.2.5.3.查看卷"></a>1.2.5.3.查看卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume info</span><br></pre></td></tr></table></figure><h4 id="1-2-5-4-停止卷"><a href="#1-2-5-4-停止卷" class="headerlink" title="1.2.5.4.停止卷"></a>1.2.5.4.停止卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume stop vol1</span><br></pre></td></tr></table></figure><h4 id="1-2-5-5-删除卷"><a href="#1-2-5-5-删除卷" class="headerlink" title="1.2.5.5.删除卷"></a>1.2.5.5.删除卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gluster volume delete vol1</span><br></pre></td></tr></table></figure><h2 id="1-2-安装客户端（可选）"><a href="#1-2-安装客户端（可选）" class="headerlink" title="1.2.安装客户端（可选）"></a>1.2.安装客户端（可选）</h2><p>在客户端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-gluster</span><br><span class="line">yum -y install glusterfs glusterfs-fuse</span><br></pre></td></tr></table></figure><p>创建挂载点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/gluster</span><br></pre></td></tr></table></figure><p>将服务器上的逻辑卷file-service挂在到本地/mnt/gluster</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t glusterfs 192.168.65.26:/vol1 /mnt/gluster</span><br></pre></td></tr></table></figure><p>查看挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h2 id="1-3-安装heketi"><a href="#1-3-安装heketi" class="headerlink" title="1.3.安装heketi"></a>1.3.安装heketi</h2><p>Heketi用来管理GlusterFS，并提供RESTful API接口供Kubernetes调用。Heketi需要使用裸磁盘（不能格式化文件系统和挂载）</p><h3 id="1-3-1-安装软件"><a href="#1-3-1-安装软件" class="headerlink" title="1.3.1.安装软件"></a>1.3.1.安装软件</h3><p>在node1执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install heketi heketi-client.x86_64 -y</span><br></pre></td></tr></table></figure><h3 id="1-3-2-修改配置"><a href="#1-3-2-修改配置" class="headerlink" title="1.3.2.修改配置"></a>1.3.2.修改配置</h3><h4 id="1-3-2-1-修改-etc-heketi-heketi-json文件"><a href="#1-3-2-1-修改-etc-heketi-heketi-json文件" class="headerlink" title="1.3.2.1.修改/etc/heketi/heketi.json文件"></a>1.3.2.1.修改/etc/heketi/heketi.json文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_port_comment"</span>: <span class="string">"Heketi Server Port Number"</span>,</span><br><span class="line">  <span class="string">"port"</span>: <span class="string">"8083"</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">"_use_auth"</span>: <span class="string">"Enable JWT authorization. Please enable for deployment"</span>,</span><br><span class="line">  <span class="string">"use_auth"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">"_jwt"</span>: <span class="string">"Private keys for access"</span>,</span><br><span class="line">  <span class="string">"jwt"</span>: &#123;</span><br><span class="line">    <span class="string">"_admin"</span>: <span class="string">"Admin has access to all APIs"</span>,</span><br><span class="line">    <span class="string">"admin"</span>: &#123;</span><br><span class="line">      <span class="string">"key"</span>: <span class="string">"My Secret"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"_user"</span>: <span class="string">"User only has access to /volumes endpoint"</span>,</span><br><span class="line">    <span class="string">"user"</span>: &#123;</span><br><span class="line">      <span class="string">"key"</span>: <span class="string">"My Secret"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">"_glusterfs_comment"</span>: <span class="string">"GlusterFS Configuration"</span>,</span><br><span class="line">  <span class="string">"glusterfs"</span>: &#123;</span><br><span class="line">    <span class="string">"_executor_comment"</span>: [</span><br><span class="line">      <span class="string">"Execute plugin. Possible choices: mock, ssh"</span>,</span><br><span class="line">      <span class="string">"mock: This setting is used for testing and development."</span>,</span><br><span class="line">      <span class="string">"      It will not send commands to any node."</span>,</span><br><span class="line">      <span class="string">"ssh:  This setting will notify Heketi to ssh to the nodes."</span>,</span><br><span class="line">      <span class="string">"      It will need the values in sshexec to be configured."</span>,</span><br><span class="line">      <span class="string">"kubernetes: Communicate with GlusterFS containers over"</span>,</span><br><span class="line">      <span class="string">"            Kubernetes exec api."</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"executor"</span>: <span class="string">"ssh"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"_sshexec_comment"</span>: <span class="string">"SSH username and private key file information"</span>,</span><br><span class="line">    <span class="string">"sshexec"</span>: &#123;</span><br><span class="line">      <span class="string">"keyfile"</span>: <span class="string">"/root/.ssh/id_rsa"</span>,</span><br><span class="line">      <span class="string">"user"</span>: <span class="string">"root"</span>,</span><br><span class="line">      <span class="string">"port"</span>: <span class="string">"22"</span>,</span><br><span class="line">      <span class="string">"fstab"</span>: <span class="string">"/etc/fstab"</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"_kubeexec_comment"</span>: <span class="string">"Kubernetes configuration"</span>,</span><br><span class="line">    <span class="string">"kubeexec"</span>: &#123;</span><br><span class="line">      <span class="string">"host"</span> :<span class="string">"https://kubernetes.host:8443"</span>,</span><br><span class="line">      <span class="string">"cert"</span> : <span class="string">"/path/to/crt.file"</span>,</span><br><span class="line">      <span class="string">"insecure"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"user"</span>: <span class="string">"kubernetes username"</span>,</span><br><span class="line">      <span class="string">"password"</span>: <span class="string">"password for kubernetes user"</span>,</span><br><span class="line">      <span class="string">"namespace"</span>: <span class="string">"OpenShift project or Kubernetes namespace"</span>,</span><br><span class="line">      <span class="string">"fstab"</span>: <span class="string">"Optional: Specify fstab file on node.  Default is /etc/fstab"</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"_db_comment"</span>: <span class="string">"Database file name"</span>,</span><br><span class="line">    <span class="string">"db"</span>: <span class="string">"/var/lib/heketi/heketi.db"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"_loglevel_comment"</span>: [</span><br><span class="line">      <span class="string">"Set log level. Choices are:"</span>,</span><br><span class="line">      <span class="string">"  none, critical, error, warning, info, debug"</span>,</span><br><span class="line">      <span class="string">"Default is warning"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"loglevel"</span> : <span class="string">"debug"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改以下字段：</p><ul><li>端口号：”port”: “8083”</li><li>启用认证：”use_auth”: true</li><li>admin密码：”key”: “ndaX0cDKeuzs”</li><li>执行方式：”executor”: “ssh”</li><li>私钥文件：”keyfile”: “/root/.ssh/id_rsa”</li><li>用户：”user”: “root”</li><li>端口号：”port”: “22”</li><li>挂载配置文件：”fstab”: “/etc/fstab”</li></ul><h4 id="3-2-2-修改-usr-lib-systemd-system-heketi-service文件"><a href="#3-2-2-修改-usr-lib-systemd-system-heketi-service文件" class="headerlink" title="3.2.2.修改/usr/lib/systemd/system/heketi.service文件"></a>3.2.2.修改/usr/lib/systemd/system/heketi.service文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Heketi Server</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/var/lib/heketi</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/bin/heketi --config=/etc/heketi/heketi.json</span><br><span class="line">Restart=on-failure</span><br><span class="line">StandardOutput=syslog</span><br><span class="line">StandardError=syslog</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>修改以下字段：</p><ul><li>用户：User=root</li></ul><h4 id="1-3-2-3-配置root用户免密登录"><a href="#1-3-2-3-配置root用户免密登录" class="headerlink" title="1.3.2.3.配置root用户免密登录"></a>1.3.2.3.配置root用户免密登录</h4><p>node1上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果已经配置了秘钥请忽略此步骤</span></span><br><span class="line">ssh-keygen -t rsa  -f ~/.ssh/id_rsa  -N <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果已经免密登录请忽略此步骤</span></span><br><span class="line">ssh-copy-id -i root@node1</span><br><span class="line">ssh-copy-id -i root@node2</span><br><span class="line">ssh-copy-id -i root@node3</span><br></pre></td></tr></table></figure><h3 id="1-3-3-启动服务"><a href="#1-3-3-启动服务" class="headerlink" title="1.3.3.启动服务"></a>1.3.3.启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start heketi glusterfsd</span><br><span class="line">systemctl <span class="built_in">enable</span> heketi glusterfsd</span><br><span class="line">systemctl status heketi glusterfsd</span><br></pre></td></tr></table></figure><h3 id="1-3-4-设置heketi的server信息"><a href="#1-3-4-设置heketi的server信息" class="headerlink" title="1.3.4.设置heketi的server信息"></a>1.3.4.设置heketi的server信息</h3><p>设置环境变量方便使用heketi-cli工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HEKETI_CLI_SERVER=http://node1:8083</span><br><span class="line"><span class="built_in">export</span> HEKETI_CLI_USER=admin</span><br><span class="line"><span class="built_in">export</span> HEKETI_CLI_KEY=ndaX0cDKeuzs</span><br></pre></td></tr></table></figure><h3 id="1-3-5-验证"><a href="#1-3-5-验证" class="headerlink" title="1.3.5.验证"></a>1.3.5.验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="variable">$HEKETI_CLI_SERVER</span>/hello ;<span class="built_in">echo</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">heketi-cli cluster list</span><br><span class="line"><span class="comment"># 如没用设置环境变量请使用如下命令</span></span><br><span class="line">heketi-cli --server http://node1:8083 --user admin --secret <span class="string">"ndaX0cDKeuzs"</span> cluster list</span><br></pre></td></tr></table></figure><h2 id="1-4-配置节点"><a href="#1-4-配置节点" class="headerlink" title="1.4.配置节点"></a>1.4.配置节点</h2><h3 id="1-4-1新建-topology-json文件"><a href="#1-4-1新建-topology-json文件" class="headerlink" title="1.4.1新建 topology.json文件"></a>1.4.1新建 topology.json文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"clusters"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"nodes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"node"</span>: &#123;</span><br><span class="line">            <span class="string">"hostnames"</span>: &#123;</span><br><span class="line">              <span class="string">"manage"</span>: [</span><br><span class="line">                <span class="string">"node1"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"storage"</span>: [</span><br><span class="line">                <span class="string">"192.168.65.26"</span></span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"zone"</span>: 1</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"devices"</span>: [</span><br><span class="line">            <span class="string">"/dev/vdb"</span>,</span><br><span class="line">            <span class="string">"/dev/vdc"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"node"</span>: &#123;</span><br><span class="line">            <span class="string">"hostnames"</span>: &#123;</span><br><span class="line">              <span class="string">"manage"</span>: [</span><br><span class="line">                <span class="string">"node2"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"storage"</span>: [</span><br><span class="line">                <span class="string">"192.168.65.27"</span></span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"zone"</span>: 1</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"devices"</span>: [</span><br><span class="line">            <span class="string">"/dev/vdb"</span>,</span><br><span class="line">            <span class="string">"/dev/vdc"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"node"</span>: &#123;</span><br><span class="line">            <span class="string">"hostnames"</span>: &#123;</span><br><span class="line">              <span class="string">"manage"</span>: [</span><br><span class="line">                <span class="string">"node3"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"storage"</span>: [</span><br><span class="line">                <span class="string">"192.168.65.28"</span></span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"zone"</span>: 1</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"devices"</span>: [</span><br><span class="line">            <span class="string">"/dev/vdb"</span>,</span><br><span class="line">            <span class="string">"/dev/vdc"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：本设置采用两块裸硬盘vdb，vdc</p><h3 id="1-4-2-载入配置"><a href="#1-4-2-载入配置" class="headerlink" title="1.4.2.载入配置"></a>1.4.2.载入配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli topology load --json=topology.json</span><br><span class="line"><span class="comment"># 如没用设置环境变量请使用如下命令</span></span><br><span class="line"><span class="comment"># heketi-cli --server http://node1:8083 --user admin --secret "ndaX0cDKeuzs" topology load --json=topology.json</span></span><br></pre></td></tr></table></figure><h3 id="1-4-3-查看拓扑"><a href="#1-4-3-查看拓扑" class="headerlink" title="1.4.3.查看拓扑"></a>1.4.3.查看拓扑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli topology info</span><br><span class="line"><span class="comment"># 如没用设置环境变量请使用如下命令</span></span><br><span class="line">heketi-cli  --server http://node1:8083 --user admin --secret <span class="string">"ndaX0cDKeuzs"</span> topology info</span><br></pre></td></tr></table></figure><h3 id="1-4-4-测试"><a href="#1-4-4-测试" class="headerlink" title="1.4.4.测试"></a>1.4.4.测试</h3><h4 id="1-4-4-1-创建测试volume"><a href="#1-4-4-1-创建测试volume" class="headerlink" title="1.4.4.1.创建测试volume"></a>1.4.4.1.创建测试volume</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli volume create --size=2</span><br></pre></td></tr></table></figure><h4 id="1-4-4-2-查看"><a href="#1-4-4-2-查看" class="headerlink" title="1.4.4.2.查看"></a>1.4.4.2.查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli  volume list</span><br><span class="line">lsblk</span><br><span class="line">cat /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="1-4-4-3-删除"><a href="#1-4-4-3-删除" class="headerlink" title="1.4.4.3.删除"></a>1.4.4.3.删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heketi-cli delete volume &lt;Id&gt;</span><br></pre></td></tr></table></figure><h1 id="2-安装kubernetes"><a href="#2-安装kubernetes" class="headerlink" title="2.安装kubernetes"></a>2.安装kubernetes</h1><p>参见之前教程</p><h1 id="3-配置storageclass"><a href="#3-配置storageclass" class="headerlink" title="3.配置storageclass"></a>3.配置storageclass</h1><h2 id="3-1-编辑配置清单"><a href="#3-1-编辑配置清单" class="headerlink" title="3.1.编辑配置清单"></a>3.1.编辑配置清单</h2><p>新建文件glusterfs-storageclass.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: storage.k8s.io/v1</span><br><span class="line">kind: StorageClass</span><br><span class="line">metadata:</span><br><span class="line">  name: glusterfs</span><br><span class="line">provisioner: kubernetes.io/glusterfs</span><br><span class="line">reclaimPolicy: Retain</span><br><span class="line">parameters:</span><br><span class="line">  gidMax: <span class="string">"50000"</span></span><br><span class="line">  gidMin: <span class="string">"40000"</span></span><br><span class="line">  resturl: http://192.168.65.26:8083</span><br><span class="line">  volumetype: replicate:3</span><br><span class="line">  restauthenabled: <span class="string">"true"</span></span><br><span class="line">  restuser: <span class="string">"admin"</span></span><br><span class="line">  restuserkey: <span class="string">"ndaX0cDKeuzs"</span></span><br></pre></td></tr></table></figure><p>应用配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f glusterfs-storageclass.yaml</span><br></pre></td></tr></table></figure><h2 id="3-2-创建测试PVC"><a href="#3-2-创建测试PVC" class="headerlink" title="3.2.创建测试PVC"></a>3.2.创建测试PVC</h2><p>新建文件test-pvc.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="built_in">test</span></span><br><span class="line">  annotations:</span><br><span class="line">    volume.beta.kubernetes.io/storage-class: <span class="string">"glusterfs"</span></span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi</span><br></pre></td></tr></table></figure><p>应用配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f <span class="built_in">test</span>-pvc.yaml</span><br></pre></td></tr></table></figure><h2 id="3-3-创建测试POD挂载PVC"><a href="#3-3-创建测试POD挂载PVC" class="headerlink" title="3.3.创建测试POD挂载PVC"></a>3.3.创建测试POD挂载PVC</h2><p>新建文件test-pod.yaml </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="built_in">test</span></span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: testvol</span><br><span class="line">      mountPath: /data</span><br><span class="line">  volumes:</span><br><span class="line">  - name: testvol</span><br><span class="line">    persistentVolumeClaim:</span><br><span class="line">      claimName: <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>应用配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f <span class="built_in">test</span>-pvc.yaml</span><br></pre></td></tr></table></figure><h2 id="3-4-查看"><a href="#3-4-查看" class="headerlink" title="3.4.查看"></a>3.4.查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pvc</span><br><span class="line">kubectl get pv</span><br><span class="line">kubectl get pod <span class="built_in">test</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-安装glusterfs集群&quot;&gt;&lt;a href=&quot;#1-安装glusterfs集群&quot; class=&quot;headerlink&quot; title=&quot;1.安装glusterfs集群&quot;&gt;&lt;/a&gt;1.安装glusterfs集群&lt;/h1&gt;&lt;h2 id=&quot;1-1-环境说明&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://blog.fanfengqiang.com/tags/kubernetes/"/>
    
      <category term="glusterfs" scheme="https://blog.fanfengqiang.com/tags/glusterfs/"/>
    
  </entry>
  
  <entry>
    <title>git-flow流程</title>
    <link href="https://blog.fanfengqiang.com/2018/09/11/git-flow/"/>
    <id>https://blog.fanfengqiang.com/2018/09/11/git-flow/</id>
    <published>2018-09-11T08:23:28.000Z</published>
    <updated>2019-06-17T03:43:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Git-flow-工作流程"><a href="#1-Git-flow-工作流程" class="headerlink" title="1. Git flow 工作流程"></a>1. Git flow 工作流程</h1><p>Git Flow 工作流一共包含五种分支：</p><p> <img src="https://blog-img-ffq.oss-cn-beijing.aliyuncs.com/1536650899483.png" alt="1536650899483"></p><h2 id="1-1-两个长期分支："><a href="#1-1-两个长期分支：" class="headerlink" title="1.1. 两个长期分支："></a>1.1. 两个长期分支：</h2><p><strong>1.1.1. 主分支 master：</strong>主分支，产品的功能全部实现后，最终在master分支对外发布。</p><p><strong>1.1.2. 开发分支 develop：</strong>开发分支，基于master分支克隆，产品的编码工作在此分支进行。</p><p>​    创建Develop分支的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b develop master</span><br></pre></td></tr></table></figure><p>​    将Develop分支发布到Master分支的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到Master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="comment"># 对Develop分支进行合并</span></span><br><span class="line">git merge --no-ff develop</span><br></pre></td></tr></table></figure><h2 id="1-2-三个临时性分支："><a href="#1-2-三个临时性分支：" class="headerlink" title="1.2. 三个临时性分支："></a>1.2. 三个临时性分支：</h2><p><strong>1.2.1. 功能（feature）分支：</strong>新功能分支，一般一个新功能对应一个分支，功能分支的名字，可以采用 feature-* 的形式命名。</p><p>​    创建一个功能分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feature-x develop</span><br></pre></td></tr></table></figure><p>​    开发完成后，将功能分支合并到 develop 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git merge --no-ff feature-x</span><br></pre></td></tr></table></figure><p>​    删除 feature 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d feature-x</span><br></pre></td></tr></table></figure><p><strong>1.2.2. 预发布（release）分支：</strong>发布分支是从 Develop 分支上面分出来的，用于发布测试版本，测试完后最终需要合并进 Develop 和 Master 分支。它的命名，可以采用release-*的形式。</p><p>​    创建一个预发布分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b release-1.2 develop</span><br></pre></td></tr></table></figure><p>​    确认没有问题后，合并到 master 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git merge --no-ff release-1.2</span><br><span class="line">git tag -a 1.2 <span class="comment"># （ 对合并生成的新节点，做一个标签 ）</span></span><br></pre></td></tr></table></figure><p>​    再合并到 develop 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop  </span><br><span class="line">git merge --no-ff release-1.2</span><br></pre></td></tr></table></figure><p>​    最后，删除预发布分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d release-1.2</span><br></pre></td></tr></table></figure><p><strong>1.2.3. 修补bug（fixbug）分支：</strong>用于修复线上版本出现的 Bug 时创建的，基于 Master 分支创建。修补结束以后，再合并进 Master 和 Develop 分支。它的命名，可以采用 fixbug-* 的形式。</p><p>​    创建一个修补 bug 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b fixbug-0.1 master</span><br></pre></td></tr></table></figure><p>​    修补结束后，合并到 master 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout master   </span><br><span class="line">git merge --no-ff fixbug-0.1  </span><br><span class="line">git tag -a 0.1.1</span><br></pre></td></tr></table></figure><p>​    再合并到 develop 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop  </span><br><span class="line">git merge --no-ff fixbug-0.1</span><br></pre></td></tr></table></figure><p>​    最后，删除”修补 bug 分支”：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d fixbug-0.1</span><br></pre></td></tr></table></figure><h1 id="2-Git-flow-用法"><a href="#2-Git-flow-用法" class="headerlink" title="2. Git flow 用法"></a>2. Git flow 用法</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1. 安装"></a>2.1. 安装</h2><p>​    MAC OS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git-flow-avh</span><br></pre></td></tr></table></figure><p>​    Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git-flow</span><br></pre></td></tr></table></figure><h2 id="2-2-初始化"><a href="#2-2-初始化" class="headerlink" title="2.2. 初始化"></a>2.2. 初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git flow init</span><br></pre></td></tr></table></figure><p>这会创建上述5个分支，你必须回答几个关于分支的命名约定的问题。 建议使用默认值。</p><h2 id="2-3-开发新特性"><a href="#2-3-开发新特性" class="headerlink" title="2.3. 开发新特性"></a>2.3. 开发新特性</h2><p>新特性的开发是在feature分支下完成的</p><p>​    2.3.1. 基于develop分支创建新的分支feature/MYFEATURE分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git flow feature start MYFEATURE</span><br><span class="line"><span class="comment"># 创建并进入feature/MYFEATURE分支</span></span><br></pre></td></tr></table></figure><p>​    2.3.2. 发布新特性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git flow feature publish MYFEATURE</span><br><span class="line"><span class="comment"># 将新的特性推送到develop分支</span></span><br></pre></td></tr></table></figure><p>​    2.3.3. 完成新特性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git flow feature finish MYFEATURE</span><br><span class="line"><span class="comment"># 将会自动如下三部</span></span><br><span class="line"><span class="comment"># 合并 MYFEATURE 分支到 'develop'</span></span><br><span class="line"><span class="comment"># 删除这个新特性分支</span></span><br><span class="line"><span class="comment"># 切换回 'develop' 分支</span></span><br></pre></td></tr></table></figure><h2 id="2-4-发布release版本"><a href="#2-4-发布release版本" class="headerlink" title="2.4. 发布release版本"></a>2.4. 发布release版本</h2><p>基于develop分支创建，完成后自动打tag、推送到master分支、推送回develop分支 </p><pre><code>2.4.1. 基于develop分支在release分支之下创建新分支release/RELEASE</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git flow release start RELEASE </span><br><span class="line"><span class="comment"># 创建并进入release/RELEASE分支</span></span><br></pre></td></tr></table></figure><p>​    2.4.2. 完成 release 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git flow release finish RELEASE</span><br><span class="line"><span class="comment"># 归并 release 分支到 'master' 分支</span></span><br><span class="line"><span class="comment"># 用 release 分支名打 Tag</span></span><br><span class="line"><span class="comment"># 归并 release 分支到 'develop'</span></span><br><span class="line"><span class="comment"># 移除 release 分支</span></span><br></pre></td></tr></table></figure><h2 id="2-5-紧急修复"><a href="#2-5-紧急修复" class="headerlink" title="2.5. 紧急修复"></a>2.5. 紧急修复</h2><ul><li><p>急修复来自这样的需求：生产环境的版本处于一个不预期状态，需要立即修正。</p></li><li><p>有可能是需要修正 master 分支上某个 TAG 标记的生产版本。</p></li><li><p>基于master分支创建，完成后自动打tag、推送回master分支、推送到develop分支 </p><p>2.5.1. 基于master分支在hotfix分支之下创建新分支hotfix/VERSION</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git flow hotfix start VERSION [BASENAME]</span><br><span class="line"><span class="comment"># [BASENAME]为finish release时填写的版本号</span></span><br></pre></td></tr></table></figure></li></ul><p>​    2.5.2. 完成紧急修复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git flow hotfix finish VERSION</span><br><span class="line"><span class="comment"># 归并 hotfix 分支到 'master' 分支</span></span><br><span class="line"><span class="comment"># 用 hotfix 分支名打 Tag</span></span><br><span class="line"><span class="comment"># 归并 hotfix 分支到 'develop'</span></span><br><span class="line"><span class="comment"># 移除 hotfix 分支</span></span><br></pre></td></tr></table></figure><h1 id="3-Git-flow-命令"><a href="#3-Git-flow-命令" class="headerlink" title="3. Git flow 命令"></a>3. Git flow 命令</h1><table><thead><tr><th>第一段（命令）</th><th style="text-align:center">第二段（分支）</th><th>第三段（操作）</th><th>第四段（名字）</th></tr></thead><tbody><tr><td>git flow</td><td style="text-align:center">init</td><td>start</td><td>NAME</td></tr><tr><td></td><td style="text-align:center">feature</td><td>finish</td><td></td></tr><tr><td></td><td style="text-align:center">release</td><td>publish</td><td></td></tr><tr><td></td><td style="text-align:center">hotfix</td><td>pull</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Git-flow-工作流程&quot;&gt;&lt;a href=&quot;#1-Git-flow-工作流程&quot; class=&quot;headerlink&quot; title=&quot;1. Git flow 工作流程&quot;&gt;&lt;/a&gt;1. Git flow 工作流程&lt;/h1&gt;&lt;p&gt;Git Flow 工作流一共包含
      
    
    </summary>
    
      <category term="git" scheme="https://blog.fanfengqiang.com/categories/git/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="git" scheme="https://blog.fanfengqiang.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch实现与ldap对接</title>
    <link href="https://blog.fanfengqiang.com/2018/08/27/elasticsearch%E5%AE%9E%E7%8E%B0ldap%E7%94%A8%E6%88%B7%E5%AF%B9%E6%8E%A5/"/>
    <id>https://blog.fanfengqiang.com/2018/08/27/elasticsearch实现ldap用户对接/</id>
    <published>2018-08-27T09:33:20.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、-elasticsearch安装"><a href="#一、-elasticsearch安装" class="headerlink" title="一、 elasticsearch安装"></a>一、 elasticsearch安装</h1><h2 id="1-1-准备安装环境及安装包"><a href="#1-1-准备安装环境及安装包" class="headerlink" title="1.1 准备安装环境及安装包"></a>1.1 准备安装环境及安装包</h2><p>环境搭建：</p><p>​    操作系统：debian9</p><p>​    硬件资源：4cores；8Gb；1台</p><p>JDK：</p><p>​    openjdk1.8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>ELK版本：5.6.8</p><p>​    下载路径：<a href="https://www.elastic.co/downloads/past-releases" target="_blank" rel="noopener">https://www.elastic.co/downloads/past-releases</a></p><p>​    elasticsearch、logstash、kibana、filebeat版本必须保持一致</p><p>​    elasticsearch负责存储数据，并向外提供RESTful接口，本身支持集群</p><p>​    logstash负责整理数据，并将数据序列化发往elasticsearch</p><p>​    kibana负责数据展示，并可作为elasticsearch的dashboard提供GUI接口</p><p>​    filebeat轻量化的日志收集器，可将日志发往logstash、redis、elasticsearch等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir elk</span><br><span class="line"><span class="built_in">cd</span> elk</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.8.deb</span><br><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-5.6.8.deb</span><br><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.8-amd64.deb</span><br><span class="line">wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.6.8-amd64.deb</span><br></pre></td></tr></table></figure><h2 id="1-2-安装elasticsearch"><a href="#1-2-安装elasticsearch" class="headerlink" title="1.2 安装elasticsearch"></a>1.2 安装elasticsearch</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i elasticsearch-5.6.8.deb</span><br></pre></td></tr></table></figure><p>配置：</p><p>​    编辑配置文件“/etc/elasticsearch/elasticsearch.yml”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cluster.name: myelastic    <span class="comment">#集群名称</span></span><br><span class="line">node.name: node-1          <span class="comment">#节点名称</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">path.data: /data/elasticsearch/data     <span class="comment">#数据存放路径</span></span><br><span class="line">path.logs: /data/elasticsearch/<span class="built_in">log</span>      <span class="comment">#日志存放路径</span></span><br><span class="line">discovery.zen.ping.unicast.hosts:       <span class="comment">#集群成员</span></span><br><span class="line">- <span class="string">"IP1"</span></span><br><span class="line">- <span class="string">"IP2"</span></span><br><span class="line">- <span class="string">"IP3"</span></span><br><span class="line"></span><br><span class="line">discovery.zen.minimum_master_nodes: 2     <span class="comment">#最少主节点数量</span></span><br></pre></td></tr></table></figure><p>​    集群数量可根据需求调整    </p><p>​    编辑配置文件“/etc/elasticsearch/jvm.options”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Xms3g        <span class="comment">#初始化jvm堆内存</span></span><br><span class="line">-Xmx3g        <span class="comment">#最大jvm可用内存</span></span><br></pre></td></tr></table></figure><p>​    上述两个值必须一致，否则无法启动</p><p>创建数据目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/elasticsearch/data /data/elasticsearch/<span class="built_in">log</span></span><br><span class="line">chown elasticsearch.elasticsearch /data/elasticsearch/&#123;data,<span class="built_in">log</span>&#125;</span><br></pre></td></tr></table></figure><p>启动elasticsearch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> elasticsearch.service</span><br><span class="line">systemctl restart elasticsearch.service</span><br><span class="line">systemctl status elasticsearch.service</span><br></pre></td></tr></table></figure><h2 id="1-3-安装logstash"><a href="#1-3-安装logstash" class="headerlink" title="1.3 安装logstash"></a>1.3 安装logstash</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i logstash-5.6.8.deb</span><br></pre></td></tr></table></figure><p>配置：</p><p>​    编辑配置文件“/etc/logstash/logstash.yml”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path.data: /data/logstash/data     <span class="comment">#数据存放路径</span></span><br><span class="line">path.logs: /data/logstash/<span class="built_in">log</span>      <span class="comment">#日志存放路径</span></span><br></pre></td></tr></table></figure><p>​    编辑配置文件“/etc/logstash/jvm.options”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Xms2g        <span class="comment">#初始化jvm堆内存</span></span><br><span class="line">-Xmx2g        <span class="comment">#最大jvm可用内存</span></span><br></pre></td></tr></table></figure><p>​    创建配置文件“/etc/logstash/conf.d/app.conf”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; 5044</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">        match =&gt; &#123;</span><br><span class="line">            <span class="string">"message"</span> =&gt; <span class="string">"%&#123;HTTPD_COMBINEDLOG&#125;"</span></span><br><span class="line">        &#125;</span><br><span class="line">        remove_field =&gt; <span class="string">"message"</span></span><br><span class="line">    &#125;</span><br><span class="line">    date &#123;</span><br><span class="line">        match =&gt; [<span class="string">"timestamp"</span>,<span class="string">"dd/MMM/YYYY:H:m:s Z"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    geoip &#123;</span><br><span class="line">        <span class="built_in">source</span> =&gt; <span class="string">"clientip"</span></span><br><span class="line">        target =&gt; <span class="string">"geoip"</span></span><br><span class="line">        database =&gt; <span class="string">"/etc/logstash/maxmind/GeoLite2-City.mmdb"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [ <span class="string">"http://IP1:9200"</span>,<span class="string">"http://IP2:9200"</span>,<span class="string">"http://IP3:9200"</span> ]</span><br><span class="line">        index =&gt; <span class="string">"logstash-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">        action =&gt; <span class="string">"index"</span></span><br><span class="line">        document_type =&gt; <span class="string">"apache_logs"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下载geoip数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz</span><br><span class="line">tar xf GeoLite2-City.tar.gz -C /etc/logstash/</span><br><span class="line">rm -rf /etc/logstash/maxmind</span><br><span class="line">mv /etc/logstash/GeoLite2-City_20*  /etc/logstash/maxmind</span><br></pre></td></tr></table></figure><p>创建数据目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/logstash/data /data/logstash/<span class="built_in">log</span></span><br><span class="line">chown logstash.logstash /data/logstash/&#123;data,<span class="built_in">log</span>&#125;</span><br></pre></td></tr></table></figure><p>启动logstash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> logstash.service</span><br><span class="line">systemctl restart logstash.service</span><br><span class="line">systemctl status logstash.service</span><br></pre></td></tr></table></figure><h2 id="1-4-安装kibana"><a href="#1-4-安装kibana" class="headerlink" title="1.4 安装kibana"></a>1.4 安装kibana</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i kibana-5.6.8-amd64.deb</span><br></pre></td></tr></table></figure><p>配置：</p><p>​    编辑配置文件“/etc/kibana/kibana.yml”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.port: 5601                     <span class="comment">#监听端口</span></span><br><span class="line">server.host: 0.0.0.0                  <span class="comment">#监听地址</span></span><br><span class="line">elasticsearch.url: <span class="string">"http://IP1:9200"</span>  <span class="comment">#任意一个elasticsearchIP</span></span><br></pre></td></tr></table></figure><p>启动kibana：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kibana.service</span><br><span class="line">systemctl restart kibana.service</span><br><span class="line">systemctl status kibana.service</span><br></pre></td></tr></table></figure><h2 id="1-5-安装filebeat"><a href="#1-5-安装filebeat" class="headerlink" title="1.5 安装filebeat"></a>1.5 安装filebeat</h2><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i filebeat-5.6.8-amd64.deb</span><br></pre></td></tr></table></figure><p>配置：</p><p>​    编辑配置文件“/etc/filebeat/filebeat.yml”，更改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/<span class="built_in">log</span>/apache2/access.log*      <span class="comment">#收集日志路径</span></span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"LOGSTASH_IP:5044"</span>]</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> filebeat.service</span><br><span class="line">systemctl restart filebeat.service</span><br><span class="line">systemctl status filebeat.service</span><br></pre></td></tr></table></figure><h1 id="二、配置elasticsearch与ldap对接"><a href="#二、配置elasticsearch与ldap对接" class="headerlink" title="二、配置elasticsearch与ldap对接"></a>二、配置elasticsearch与ldap对接</h1><h2 id="2-1-安装x-pack插件"><a href="#2-1-安装x-pack插件" class="headerlink" title="2.1 安装x-pack插件"></a>2.1 安装x-pack插件</h2><p>下载对应版本x-pack插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/elk</span><br><span class="line">wget https://artifacts.elastic.co/downloads/packs/x-pack/x-pack-5.6.8.zip</span><br></pre></td></tr></table></figure><p>elasticsearch安装x-pack插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop elasticsearch.service</span><br><span class="line">/usr/share/elasticsearch/bin/elasticsearch-plugin install file:///root/elk/x-pack-5.6.8.zip</span><br><span class="line">systemctl start elasticsearch.service</span><br></pre></td></tr></table></figure><p>kibana安装x-pack插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop kibana.service</span><br><span class="line">/usr/share/kibana/bin/kibana-plugin install file:///root/elk/x-pack-5.6.8.zip</span><br><span class="line">systemctl start kibana.service</span><br></pre></td></tr></table></figure><p>系统会默认生成三个账号elastic、kibana、logstash_system</p><p>其中elastic用户拥有最高权限，密码默认为”changeme“</p><p>以上三个账号密码均可在kibana中修改，修改密码后需要更改“/etc/kibana/kikana.yml”配置文件</p><h2 id="2-2-配置elasticsearch"><a href="#2-2-配置elasticsearch" class="headerlink" title="2.2 配置elasticsearch"></a>2.2 配置elasticsearch</h2><p>编辑配置文件“”，在最后添加如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">xpack:</span><br><span class="line">  security:</span><br><span class="line">    authc:</span><br><span class="line">      realms:</span><br><span class="line">        ldap1:</span><br><span class="line">          <span class="built_in">type</span>: ldap</span><br><span class="line">          order: 0</span><br><span class="line">          url: <span class="string">"ldap://10.2.0.1"</span>                  <span class="comment">#ldap服务器地址</span></span><br><span class="line">          bind_dn: <span class="string">"cn=admin,dc=ffq, dc=com"</span>      <span class="comment">#管理员dn</span></span><br><span class="line">          bind_password: <span class="string">"password"</span>               <span class="comment">#管理员密码</span></span><br><span class="line">          user_search:</span><br><span class="line">            base_dn: <span class="string">"dc=ffq,dc=com"</span>              <span class="comment">#用户搜索范围</span></span><br><span class="line">            attribute: cn</span><br><span class="line">          group_search:</span><br><span class="line">            base_dn: <span class="string">"dc=ffq,dc=com"</span></span><br><span class="line">          files:</span><br><span class="line">            role_mapping: <span class="string">"/etc/elasticsearch/x-pack/role_mapping.yml"</span>  <span class="comment">#角色绑定配置文件</span></span><br><span class="line">          unmapped_groups_as_roles: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>编辑配置文件“/etc/elasticsearch/x-pack/role_mapping.yml”，添加“用户”与“角色”绑定</p><p>​    配置组绑定无效，原因未知，可启动后使用命令配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">superuser:                        <span class="comment">#角色role</span></span><br><span class="line">  - <span class="string">"cn=admin,dc=ffq,dc=com"</span>      <span class="comment">#用户dn</span></span><br><span class="line">watcher_admin:</span><br><span class="line">  - <span class="string">"cn=admin,dc=ffq,dc=com"</span></span><br><span class="line">  - <span class="string">"cn=fanfengqiang,dc=ffq,dc=com"</span></span><br></pre></td></tr></table></figure><p>重启elasticsearch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start kibana.service</span><br></pre></td></tr></table></figure><p>添加用户角色绑定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST <span class="string">"localhost:9200/_xpack/security/role_mapping/users"</span> -u elastic:changeme -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  "roles": [ "superuser" ],</span></span><br><span class="line"><span class="string">  "enabled": true,</span></span><br><span class="line"><span class="string">  "rules": &#123;</span></span><br><span class="line"><span class="string">    "field" : &#123; "dn" : "*,ou=Users,dc=ffq,dc=com" &#125;              </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line"></span><br><span class="line">curl <span class="string">"localhost:9200/_xpack/security/role_mapping?pretty"</span> -u elastic:changeme</span><br></pre></td></tr></table></figure><h2 id="2-3-测试"><a href="#2-3-测试" class="headerlink" title="2.3 测试"></a>2.3 测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:9200/_cat?pretty -u ldapuser:password</span><br><span class="line">curl http://127.0.0.1:9200/_cat/indices?pretty -u ldapuser:password</span><br></pre></td></tr></table></figure><p>若不报400、401或403错误则配置成功</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、-elasticsearch安装&quot;&gt;&lt;a href=&quot;#一、-elasticsearch安装&quot; class=&quot;headerlink&quot; title=&quot;一、 elasticsearch安装&quot;&gt;&lt;/a&gt;一、 elasticsearch安装&lt;/h1&gt;&lt;h2 id=&quot;1
      
    
    </summary>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
      <category term="elasticsearch" scheme="https://blog.fanfengqiang.com/tags/elasticsearch/"/>
    
      <category term="ldap" scheme="https://blog.fanfengqiang.com/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>jenkins</title>
    <link href="https://blog.fanfengqiang.com/2018/08/23/jenkins/"/>
    <id>https://blog.fanfengqiang.com/2018/08/23/jenkins/</id>
    <published>2018-08-23T07:00:29.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h1><h2 id="1-1-安装JDK"><a href="#1-1-安装JDK" class="headerlink" title="1.1 安装JDK"></a>1.1 安装JDK</h2><p>上传jdk二进制包“jdk-8u111-linux-x64.rpm ”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ./jdk-8u111-linux-x64.rpm</span><br></pre></td></tr></table></figure><p>注意： jdk版本必须大于等于1.8</p><h2 id="1-2-安装jenkins"><a href="#1-2-安装jenkins" class="headerlink" title="1.2 安装jenkins"></a>1.2 安装jenkins</h2><p>下载RPM包“jenkins-2.121.2-1.1.noarch.rpm”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install jenkins-2.121.2-1.1.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="1-3-修改配置文件"><a href="#1-3-修改配置文件" class="headerlink" title="1.3 修改配置文件"></a>1.3 修改配置文件</h2><p>编辑“/etc/sysconfig/jenkins”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JENKINS_HOME=“/data“  <span class="comment">#数据目录，使用高IO大容量磁盘</span></span><br><span class="line">JENKINS_USER=“jenkins“ <span class="comment">#启动用户</span></span><br><span class="line">JENKINS_PORT=“8080“  <span class="comment">#启动端口</span></span><br></pre></td></tr></table></figure><h2 id="1-4-启动jenkins"><a href="#1-4-启动jenkins" class="headerlink" title="1.4 启动jenkins"></a>1.4 启动jenkins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig jenkins on</span><br><span class="line">/etc/init.d/jenkins start</span><br><span class="line">ss -ntlp |grep 8080</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1 安装&quot;&gt;&lt;/a&gt;1 安装&lt;/h1&gt;&lt;h2 id=&quot;1-1-安装JDK&quot;&gt;&lt;a href=&quot;#1-1-安装JDK&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
      <category term="jenkins" scheme="https://blog.fanfengqiang.com/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>gitlab安装、备份与恢复</title>
    <link href="https://blog.fanfengqiang.com/2018/08/23/gitlab%E5%AE%89%E8%A3%85%E3%80%81%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
    <id>https://blog.fanfengqiang.com/2018/08/23/gitlab安装、备份与恢复/</id>
    <published>2018-08-23T04:03:29.000Z</published>
    <updated>2019-05-03T16:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h1><h2 id="1-1-安装JDK"><a href="#1-1-安装JDK" class="headerlink" title="1.1 安装JDK"></a>1.1 安装JDK</h2><p>上传jdk二进制包“jdk-7u79-linux-x64.tar.gz”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tar xvf jdk-7u79-linux-x64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">ln -s jdk1.7.0_79/ jdk</span><br><span class="line">cat &gt; /etc/profile.d/jdk.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="comment">#Description：</span></span><br><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/jdk</span><br><span class="line">PATH=<span class="string">"\$JAVA_HOME/bin:\$PATH"</span></span><br><span class="line">CLASSPATH=.:\<span class="variable">$JAVA_HOME</span>/lib/dt.jar:\<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /etc/profile.d/jdk.sh</span><br></pre></td></tr></table></figure><h2 id="1-2-安装gitlab"><a href="#1-2-安装gitlab" class="headerlink" title="1.2 安装gitlab"></a>1.2 安装gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-8.13.5-ce.0.el7.x86_64.rpm</span><br><span class="line">yum install gitlab-ce-8.13.5-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="1-3-配置gitlab"><a href="#1-3-配置gitlab" class="headerlink" title="1.3 配置gitlab"></a>1.3 配置gitlab</h2><p>编辑配置文件脚本“/etc/gitlab/gitlab.rb”，修改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">external_url <span class="string">'http://10.2.2.1'</span> <span class="comment">#服务器IP地址</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable'</span>] = <span class="literal">true</span> </span><br><span class="line">gitlab_rails[<span class="string">'smtp_address'</span>] = <span class="string">"smtp.163.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_port'</span>] = 25</span><br><span class="line">gitlab_rails[<span class="string">'smtp_user_name'</span>] = <span class="string">"XXXXXX@163.com"</span>  <span class="comment"># 发件人邮箱</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_password'</span>] = <span class="string">"YOURPASSWORD"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_domain'</span>] = <span class="string">"163.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_authentication'</span>] = :login</span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable_starttls_auto'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_tls'</span>] = <span class="literal">false</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_email_from'</span>] = <span class="string">"XXXXXXX@163.com"</span></span><br><span class="line">user[<span class="string">"git_user_email"</span>] = <span class="string">"XXXXXXX@163.com"</span>   <span class="comment"># 收件人邮箱</span></span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h2 id="1-4-启动"><a href="#1-4-启动" class="headerlink" title="1.4 启动"></a>1.4 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl  start</span><br><span class="line">gitlab-ctl  status</span><br></pre></td></tr></table></figure><h1 id="2-备份"><a href="#2-备份" class="headerlink" title="2 备份"></a>2 备份</h1><h2 id="2-1-修改配置"><a href="#2-1-修改配置" class="headerlink" title="2.1 修改配置"></a>2.1 修改配置</h2><p><code>vim /etc/gitlab/gitlab.rb</code></p><p>修改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="string">'manage_backup_path'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'backup_path'</span>] = <span class="string">"/data/gitlab/backups"</span>    //gitlab备份目录</span><br><span class="line">gitlab_rails[<span class="string">'backup_archive_permissions'</span>] = 0644       //生成的备份文件权限</span><br><span class="line">gitlab_rails[<span class="string">'backup_keep_time'</span>] = 7776000              //备份保留天数为3个月（即90天，这里是7776000秒）</span><br></pre></td></tr></table></figure><p>创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/gitlab/backups</span><br><span class="line">chown -R git.git /data/gitlab</span><br><span class="line">chmod -R 700 /data/gitlab/</span><br></pre></td></tr></table></figure><p>重新生成配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h2 id="2-2-执行备份操作"><a href="#2-2-执行备份操作" class="headerlink" title="2.2 执行备份操作"></a>2.2 执行备份操作</h2><p>生成备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h1 id="3-恢复"><a href="#3-恢复" class="headerlink" title="3 恢复"></a>3 恢复</h1><h2 id="3-1-停止相关服务"><a href="#3-1-停止相关服务" class="headerlink" title="3.1 停止相关服务"></a>3.1 停止相关服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line">gitlab-ctl status</span><br></pre></td></tr></table></figure><h2 id="3-2-执行恢复"><a href="#3-2-执行恢复" class="headerlink" title="3.2 执行恢复"></a>3.2 执行恢复</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/gitlab/backups</span><br><span class="line">ll</span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=XXXXXXXX</span><br></pre></td></tr></table></figure><p>注意：XXXXXXX中不带“_gitlab_backup.tar”后缀</p><h2 id="3-3-启动gitlab"><a href="#3-3-启动gitlab" class="headerlink" title="3.3 启动gitlab"></a>3.3 启动gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl start</span><br><span class="line">gitlab-ctl status</span><br></pre></td></tr></table></figure><h2 id="3-4-check检查数据"><a href="#3-4-check检查数据" class="headerlink" title="3.4 check检查数据"></a>3.4 check检查数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br></pre></td></tr></table></figure><p>注意：<code>Gitlab迁移与恢复一样，但是要求两个GitLab版本号一致</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1 安装&quot;&gt;&lt;/a&gt;1 安装&lt;/h1&gt;&lt;h2 id=&quot;1-1-安装JDK&quot;&gt;&lt;a href=&quot;#1-1-安装JDK&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="https://blog.fanfengqiang.com/tags/linux/"/>
    
      <category term="linux运维" scheme="https://blog.fanfengqiang.com/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
      <category term="gitlab" scheme="https://blog.fanfengqiang.com/tags/gitlab/"/>
    
  </entry>
  
</feed>
